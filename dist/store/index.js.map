{"version":3,"file":"index.js","sources":["../../src/store/functions.js","../../node_modules/svelte-persistent-store/dist/chunk.I6NEYSOQ.mjs","../../node_modules/svelte-persistent-store/dist/chunk.HHIHGWA2.mjs","../../src/store/LocalStorage.js","../../node_modules/svelte-persistent-store/dist/chunk.ZLJ3FCQ6.mjs","../../src/store/SessionStorage.js","../../node_modules/svelte-writable-derived/index.mjs"],"sourcesContent":["/**\r\n * Provides a basic test for a given variable to test if it has the shape of a store by having a `subscribe` function.\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with the update function provided and ignores the first automatic\r\n * update. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} update - function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeIgnoreFirst(store, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\r\n * subscription. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} first - Function to receive first update.\r\n *\r\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeFirstRest(store, first, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n         first(value);\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n","// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      if (storage.getItem(key)) {\n        value = JSON.parse(storage.getItem(key));\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      initial_value = JSON.parse(storage.getItem(key));\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","import {\n  generator\n} from \"./chunk.I6NEYSOQ.mjs\";\n\n// src/local.ts\nvar storage = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/local';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get_store_value} LSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class LocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, LSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {*} Value from local storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in local storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new LSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      if (localStorage.getItem(key))\r\n      {\r\n         defaultValue = JSON.parse(localStorage.getItem(key));\r\n      }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import {\n  generator\n} from \"./chunk.I6NEYSOQ.mjs\";\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/session';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get_store_value} SSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class SessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, SSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new SSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      if (sessionStorage.getItem(key))\r\n      {\r\n         defaultValue = JSON.parse(sessionStorage.getItem(key));\r\n      }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import { derived, get } from \"svelte/store\";\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#Store_contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#derived), but which\n * has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 2nd parameter.\n * @param {!Function|{withOld: !Function}} reflect Called when the\n * derived store gets a new value via its `set` or `update` methods, and determines new values for\n * the origin stores. [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nexport default function writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, allowDerive = true;\n\tvar reflectOldValues = \"withOld\" in reflect;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (allowDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tvar sendUpstream = (setWith) => {\n\t\tallowDerive = false;\n\t\tif (singleOrigin) {\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tallowDerive = true;\n\t};\n\tif (reflectOldValues) {\n\t\treflect = reflect.withOld;\n\t}\n\tvar reflectIsAsync = reflect.length >= (reflectOldValues ? 3 : 2);\n\tvar cleanup = null;\n\tfunction doReflect(reflecting) {\n\t\tif (cleanup) {\n\t\t\tcleanup();\n\t\t\tcleanup = null;\n\t\t}\n\n\t\tif (reflectOldValues) {\n\t\t\tvar returned = reflect(reflecting, originValues, sendUpstream);\n\t\t} else {\n\t\t\tvar returned = reflect(reflecting, sendUpstream);\n\t\t}\n\t\tif (reflectIsAsync) {\n\t\t\tif (typeof returned == \"function\") {\n\t\t\t\tcleanup = returned;\n\t\t\t}\n\t\t} else {\n\t\t\tsendUpstream(returned);\n\t\t}\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\nexport { writableDerived };\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nexport function propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t}\n}"],"names":["isStore","store","subscribe","subscribeIgnoreFirst","update","firedFirst","value","subscribeFirstRest","first","isSimpleDeriver","deriver","length","generator","storage","readable","key","start","writable","noop","wrap_start","ogSet","wrap_set","new_value","setItem","JSON","stringify","getItem","parse","ogStore","ogWritable","set","fn","ogGet","run","invalidate","derived","stores","initial_value","single","Array","isArray","stores_array","inited","values","pending","cleanup","sync","input","result","is_function","unsubscribers","map","i","stop","run_all","get","window","localStorage","g","LocalStorage","Map","defaultValue","storageValue","getStore","s_GET_STORE","swapItemBoolean","newValue","s_CREATE_STORE","err","sessionStorage","SessionStorage","writableDerived","origins","derive","reflect","initial","childDerivedSetter","originValues","allowDerive","reflectOldValues","wrappedDerive","got","returned","childDerived","singleOrigin","sendUpstream","setWith","forEach","withOld","reflectIsAsync","doReflect","reflecting","tryingSet","isUpdated","mutatedBySubscriptions","oldValue","unsubscribe","propertyStore","origin","propName","object","props","concat","target"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,OAAT,CAAiBC,KAAjB,EACP;AACG,MAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAArC,EAAwC;AAAE,WAAO,KAAP;AAAe;;AAEzD,UAAQ,OAAOA,KAAf;AAEG,SAAK,UAAL;AACA,SAAK,QAAL;AACG,aAAO,OAAOA,KAAK,CAACC,SAAb,KAA2B,UAAlC;AAJN;;AAOA,SAAO,KAAP;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,oBAAT,CAA8BF,KAA9B,EAAqCG,MAArC,EACP;AACG,MAAIC,UAAU,GAAG,KAAjB;AAEA,SAAOJ,KAAK,CAACC,SAAN,CAAiBI,KAAD,IAAW;AAC/B,QAAI,CAACD,UAAL,EACA;AACGA,MAAAA,UAAU,GAAG,IAAb;AACF,KAHD,MAIK;AACFD,MAAAA,MAAM,CAACE,KAAD,CAAN;AACF;AACH,GARM,CAAP;AASF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,kBAAT,CAA4BN,KAA5B,EAAmCO,KAAnC,EAA0CJ,MAA1C,EACP;AACG,MAAIC,UAAU,GAAG,KAAjB;AAEA,SAAOJ,KAAK,CAACC,SAAN,CAAiBI,KAAD,IAAW;AAC/B,QAAI,CAACD,UAAL,EACA;AACGA,MAAAA,UAAU,GAAG,IAAb;AACAG,MAAAA,KAAK,CAACF,KAAD,CAAL;AACF,KAJD,MAKK;AACFF,MAAAA,MAAM,CAACE,KAAD,CAAN;AACF;AACH,GATM,CAAP;AAUF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3ED;;AAGA,SAASG,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,SAAOA,OAAO,CAACC,MAAR,GAAiB,CAAxB;AACD;;AACD,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,WAASC,QAAT,CAAkBC,GAAlB,EAAuBT,KAAvB,EAA8BU,KAA9B,EAAqC;AACnC,WAAO;AACLd,MAAAA,SAAS,EAAEe,QAAQ,CAACF,GAAD,EAAMT,KAAN,EAAaU,KAAb,CAAR,CAA4Bd;AADlC,KAAP;AAGD;;AACD,WAASe,QAAT,CAAkBF,GAAlB,EAAuBT,KAAvB,EAA8BU,KAAK,GAAGE,IAAtC,EAA4C;AAC1C,aAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,aAAOJ,KAAK,CAAC,SAASK,QAAT,CAAkBC,SAAlB,EAA6B;AACxC,YAAIT,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACU,OAAR,CAAgBR,GAAhB,EAAqBS,IAAI,CAACC,SAAL,CAAeH,SAAf,CAArB;AACD;;AACD,eAAOF,KAAK,CAACE,SAAD,CAAZ;AACD,OALW,CAAZ;AAMD;;AACD,QAAIT,OAAJ,EAAa;AACX,UAAIA,OAAO,CAACa,OAAR,CAAgBX,GAAhB,CAAJ,EAA0B;AACxBT,QAAAA,KAAK,GAAGkB,IAAI,CAACG,KAAL,CAAWd,OAAO,CAACa,OAAR,CAAgBX,GAAhB,CAAX,CAAR;AACD;;AACDF,MAAAA,OAAO,CAACU,OAAR,CAAgBR,GAAhB,EAAqBS,IAAI,CAACC,SAAL,CAAenB,KAAf,CAArB;AACD;;AACD,UAAMsB,OAAO,GAAGC,UAAU,CAACvB,KAAD,EAAQU,KAAK,GAAGG,UAAH,GAAgB,KAAK,CAAlC,CAA1B;;AACA,aAASW,GAAT,CAAaR,SAAb,EAAwB;AACtB,UAAIT,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACU,OAAR,CAAgBR,GAAhB,EAAqBS,IAAI,CAACC,SAAL,CAAeH,SAAf,CAArB;AACD;;AACDM,MAAAA,OAAO,CAACE,GAAR,CAAYR,SAAZ;AACD;;AACD,aAASlB,MAAT,CAAgB2B,EAAhB,EAAoB;AAClBD,MAAAA,GAAG,CAACC,EAAE,CAACC,GAAK,CAACJ,OAAD,CAAN,CAAH,CAAH;AACD;;AACD,aAAS1B,SAAT,CAAmB+B,GAAnB,EAAwBC,UAAU,GAAGhB,IAArC,EAA2C;AACzC,aAAOU,OAAO,CAAC1B,SAAR,CAAkB+B,GAAlB,EAAuBC,UAAvB,CAAP;AACD;;AACD,WAAO;AAACJ,MAAAA,GAAD;AAAM1B,MAAAA,MAAN;AAAcF,MAAAA;AAAd,KAAP;AACD;;AACD,WAASiC,OAAT,CAAiBpB,GAAjB,EAAsBqB,MAAtB,EAA8BL,EAA9B,EAAkCM,aAAlC,EAAiD;AAC/C,UAAMC,MAAM,GAAG,CAACC,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAhB;AACA,UAAMK,YAAY,GAAGH,MAAM,GAAG,CAACF,MAAD,CAAH,GAAcA,MAAzC;;AACA,QAAIvB,OAAO,IAAIA,OAAO,CAACa,OAAR,CAAgBX,GAAhB,CAAf,EAAqC;AACnCsB,MAAAA,aAAa,GAAGb,IAAI,CAACG,KAAL,CAAWd,OAAO,CAACa,OAAR,CAAgBX,GAAhB,CAAX,CAAhB;AACD;;AACD,WAAOD,QAAQ,CAACC,GAAD,EAAMsB,aAAN,EAAsBP,GAAD,IAAS;AAC3C,UAAIY,MAAM,GAAG,KAAb;AACA,YAAMC,MAAM,GAAG,EAAf;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG3B,IAAd;;AACA,YAAM4B,IAAI,GAAG,MAAM;AACjB,YAAIF,OAAJ,EAAa;AACX;AACD;;AACDC,QAAAA,OAAO;AACP,cAAME,KAAK,GAAGT,MAAM,GAAGK,MAAM,CAAC,CAAD,CAAT,GAAeA,MAAnC;;AACA,YAAIlC,eAAe,CAACsB,EAAD,CAAnB,EAAyB;AACvBD,UAAAA,GAAG,CAACC,EAAE,CAACgB,KAAD,CAAH,CAAH;AACD,SAFD,MAEO;AACL,gBAAMC,MAAM,GAAGjB,EAAE,CAACgB,KAAD,EAAQjB,GAAR,CAAjB;AACAe,UAAAA,OAAO,GAAGI,WAAW,CAACD,MAAD,CAAX,GAAsBA,MAAtB,GAA+B9B,IAAzC;AACD;AACF,OAZD;;AAaA,YAAMgC,aAAa,GAAGT,YAAY,CAACU,GAAb,CAAiB,CAAClD,KAAD,EAAQmD,CAAR,KAAcnD,KAAK,CAACC,SAAN,CAAiBI,KAAD,IAAW;AAC9EqC,QAAAA,MAAM,CAACS,CAAD,CAAN,GAAY9C,KAAZ;AACAsC,QAAAA,OAAO,IAAI,EAAE,KAAKQ,CAAP,CAAX;;AACA,YAAIV,MAAJ,EAAY;AACVI,UAAAA,IAAI;AACL;AACF,OANoD,EAMlD,MAAM;AACPF,QAAAA,OAAO,IAAI,KAAKQ,CAAhB;AACD,OARoD,CAA/B,CAAtB;AASAV,MAAAA,MAAM,GAAG,IAAT;AACAI,MAAAA,IAAI;AACJ,aAAO,SAASO,IAAT,GAAgB;AACrBC,QAAAA,OAAO,CAACJ,aAAD,CAAP;AACAL,QAAAA,OAAO;AACR,OAHD;AAID,KAjCc,CAAf;AAkCD;;AACD,SAAO;AACL/B,IAAAA,QADK;AAELG,IAAAA,QAFK;AAGLkB,IAAAA,OAHK;AAILoB,IAAAA,GAAG,EAAEvB;AAJA,GAAP;AAMD;;ACpFD,IAAInB,SAAO,GAAG,OAAO2C,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACC,YAAvC,GAAsD,KAAK,CAAzE;AACA,IAAIC,GAAC,GAAG9C,SAAS,CAACC,SAAD,CAAjB;AAEA,IAAII,UAAQ,GAAGyC,GAAC,CAACzC,QAAjB;;ACLA;AACA;AACA;;;;AAEO,MAAM0C,YAAN,CACP;AAAA;AAAA;AAAA;AAAA,aAIa,IAAIC,GAAJ;AAJb;AAAA;;AAMG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGlC,EAAAA,OAAO,CAACX,GAAD,EAAM8C,YAAN,EACP;AACG,QAAIvD,KAAK,GAAGuD,YAAZ;AAEA,UAAMC,YAAY,GAAGL,YAAY,CAAC/B,OAAb,CAAqBX,GAArB,CAArB;;AAEA,QAAI+C,YAAY,KAAK,KAAK,CAA1B,EACA;AACGxD,MAAAA,KAAK,GAAGkB,IAAI,CAACG,KAAL,CAAWmC,YAAX,CAAR;AACF;;AAED,WAAOxD,KAAP;AACF;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACGyD,EAAAA,QAAQ,CAAChD,GAAD,EAAM8C,YAAN,EACR;AACG,WAAOG,aAAW,uBAAC,IAAD,cAAejD,GAAf,EAAoB8C,YAApB,CAAlB;AACF;AAED;AACH;AACA;AACA;AACA;AACA;AACA;;;AACGtC,EAAAA,OAAO,CAACR,GAAD,EAAMT,KAAN,EACP;AACG,UAAML,KAAK,GAAG+D,aAAW,uBAAC,IAAD,cAAejD,GAAf,CAAzB;AACAd,IAAAA,KAAK,CAAC6B,GAAN,CAAUxB,KAAV;AACF;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACG2D,EAAAA,eAAe,CAAClD,GAAD,EAAM8C,YAAN,EACf;AACG,UAAM5D,KAAK,GAAG+D,aAAW,uBAAC,IAAD,cAAejD,GAAf,EAAoB8C,YAApB,CAAzB;AACA,UAAMvD,KAAK,GAAGL,KAAK,CAACsD,GAAN,EAAd;AACA,UAAMW,QAAQ,GAAG,OAAO5D,KAAP,KAAiB,SAAjB,GAA6B,CAACA,KAA9B,GAAsC,KAAvD;AAEAL,IAAAA,KAAK,CAAC6B,GAAN,CAAUoC,QAAV;AACA,WAAOA,QAAP;AACF;;AA1EJ;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,aAAT,CAAqB5B,MAArB,EAA6BrB,GAA7B,EAAkC8C,YAAY,GAAG,KAAK,CAAtD,EACA;AACG,MAAI5D,KAAK,GAAGmC,MAAM,CAACmB,GAAP,CAAWxC,GAAX,CAAZ;;AACA,MAAId,KAAK,KAAK,KAAK,CAAnB,EACA;AACGA,IAAAA,KAAK,GAAGkE,gBAAc,CAACpD,GAAD,EAAM8C,YAAN,CAAtB;AACAzB,IAAAA,MAAM,CAACN,GAAP,CAAWf,GAAX,EAAgBd,KAAhB;AACF;;AAED,SAAOA,KAAP;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkE,gBAAT,CAAwBpD,GAAxB,EAA6B8C,YAAY,GAAG,KAAK,CAAjD,EACA;AACG,MACA;AACG,QAAIJ,YAAY,CAAC/B,OAAb,CAAqBX,GAArB,CAAJ,EACA;AACG8C,MAAAA,YAAY,GAAGrC,IAAI,CAACG,KAAL,CAAW8B,YAAY,CAAC/B,OAAb,CAAqBX,GAArB,CAAX,CAAf;AACF;AACH,GAND,CAOA,OAAOqD,GAAP,EAAY;AAAE;AAAM;;AAEpB,QAAMnE,KAAK,GAAGgB,UAAQ,CAACF,GAAD,EAAM8C,YAAN,CAAtB;;AACA5D,EAAAA,KAAK,CAACsD,GAAN,GAAY,MAAMA,GAAG,CAACtD,KAAD,CAArB;;AAEA,SAAOA,KAAP;AACF;;AC/HD,IAAIY,OAAO,GAAG,OAAO2C,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACa,cAAvC,GAAwD,KAAK,CAA3E;AACA,IAAIX,CAAC,GAAG9C,SAAS,CAACC,OAAD,CAAjB;AAEA,IAAII,QAAQ,GAAGyC,CAAC,CAACzC,QAAjB;;ACLA;AACA;AACA;;;;AAEO,MAAMqD,cAAN,CACP;AAAA;AAAA;AAAA;AAAA,aAIa,IAAIV,GAAJ;AAJb;AAAA;;AAMG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGlC,EAAAA,OAAO,CAACX,GAAD,EAAM8C,YAAN,EACP;AACG,QAAIvD,KAAK,GAAGuD,YAAZ;AAEA,UAAMC,YAAY,GAAGO,cAAc,CAAC3C,OAAf,CAAuBX,GAAvB,CAArB;;AAEA,QAAI+C,YAAY,KAAK,KAAK,CAA1B,EACA;AACGxD,MAAAA,KAAK,GAAGkB,IAAI,CAACG,KAAL,CAAWmC,YAAX,CAAR;AACF;;AAED,WAAOxD,KAAP;AACF;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACGyD,EAAAA,QAAQ,CAAChD,GAAD,EAAM8C,YAAN,EACR;AACG,WAAOG,WAAW,uBAAC,IAAD,YAAejD,GAAf,EAAoB8C,YAApB,CAAlB;AACF;AAED;AACH;AACA;AACA;AACA;AACA;AACA;;;AACGtC,EAAAA,OAAO,CAACR,GAAD,EAAMT,KAAN,EACP;AACG,UAAML,KAAK,GAAG+D,WAAW,uBAAC,IAAD,YAAejD,GAAf,CAAzB;AACAd,IAAAA,KAAK,CAAC6B,GAAN,CAAUxB,KAAV;AACF;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACG2D,EAAAA,eAAe,CAAClD,GAAD,EAAM8C,YAAN,EACf;AACG,UAAM5D,KAAK,GAAG+D,WAAW,uBAAC,IAAD,YAAejD,GAAf,EAAoB8C,YAApB,CAAzB;AACA,UAAMvD,KAAK,GAAGL,KAAK,CAACsD,GAAN,EAAd;AACA,UAAMW,QAAQ,GAAG,OAAO5D,KAAP,KAAiB,SAAjB,GAA6B,CAACA,KAA9B,GAAsC,KAAvD;AAEAL,IAAAA,KAAK,CAAC6B,GAAN,CAAUoC,QAAV;AACA,WAAOA,QAAP;AACF;;AA1EJ;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,WAAT,CAAqB5B,MAArB,EAA6BrB,GAA7B,EAAkC8C,YAAY,GAAG,KAAK,CAAtD,EACA;AACG,MAAI5D,KAAK,GAAGmC,MAAM,CAACmB,GAAP,CAAWxC,GAAX,CAAZ;;AACA,MAAId,KAAK,KAAK,KAAK,CAAnB,EACA;AACGA,IAAAA,KAAK,GAAGkE,cAAc,CAACpD,GAAD,EAAM8C,YAAN,CAAtB;AACAzB,IAAAA,MAAM,CAACN,GAAP,CAAWf,GAAX,EAAgBd,KAAhB;AACF;;AAED,SAAOA,KAAP;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkE,cAAT,CAAwBpD,GAAxB,EAA6B8C,YAAY,GAAG,KAAK,CAAjD,EACA;AACG,MACA;AACG,QAAIQ,cAAc,CAAC3C,OAAf,CAAuBX,GAAvB,CAAJ,EACA;AACG8C,MAAAA,YAAY,GAAGrC,IAAI,CAACG,KAAL,CAAW0C,cAAc,CAAC3C,OAAf,CAAuBX,GAAvB,CAAX,CAAf;AACF;AACH,GAND,CAOA,OAAOqD,GAAP,EAAY;AAAE;AAAM;;AAEpB,QAAMnE,KAAK,GAAGgB,QAAQ,CAACF,GAAD,EAAM8C,YAAN,CAAtB;;AACA5D,EAAAA,KAAK,CAACsD,GAAN,GAAY,MAAMA,GAAG,CAACtD,KAAD,CAArB;;AAEA,SAAOA,KAAP;AACF;;ACnID;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASsE,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,OAA1C,EAAmDC,OAAnD,EAA4D;AAC1E,MAAIC,kBAAJ;AAAA,MAAwBC,YAAxB;AAAA,MAAsCC,WAAW,GAAG,IAApD;AACA,MAAIC,gBAAgB,IAAG,aAAaL,OAAhB,CAApB;;AACA,MAAIM,aAAa,GAAG,CAACC,GAAD,EAAMnD,GAAN,KAAc;AACjC8C,IAAAA,kBAAkB,GAAG9C,GAArB;;AACA,QAAIiD,gBAAJ,EAAsB;AACrBF,MAAAA,YAAY,GAAGI,GAAf;AACA;;AACD,QAAIH,WAAJ,EAAiB;AAChB,UAAII,QAAQ,GAAGT,MAAM,CAACQ,GAAD,EAAMnD,GAAN,CAArB;;AACA,UAAI2C,MAAM,CAAC9D,MAAP,GAAgB,CAApB,EAAuB;AACtBmB,QAAAA,GAAG,CAACoD,QAAD,CAAH;AACA,OAFD,MAEO;AACN,eAAOA,QAAP;AACA;AACD;AACD,GAbD;;AAcA,MAAIC,YAAY,GAAGhD,OAAO,CAACqC,OAAD,EAAUQ,aAAV,EAAyBL,OAAzB,CAA1B;AAEA,MAAIS,YAAY,GAAG,CAAC7C,KAAK,CAACC,OAAN,CAAcgC,OAAd,CAApB;;AACA,MAAIa,YAAY,GAAIC,OAAD,IAAa;AAC/BR,IAAAA,WAAW,GAAG,KAAd;;AACA,QAAIM,YAAJ,EAAkB;AACjBZ,MAAAA,OAAO,CAAC1C,GAAR,CAAYwD,OAAZ;AACA,KAFD,MAEO;AACNA,MAAAA,OAAO,CAACC,OAAR,CAAiB,CAACjF,KAAD,EAAQ8C,CAAR,KAAc;AAC9BoB,QAAAA,OAAO,CAACpB,CAAD,CAAP,CAAWtB,GAAX,CAAexB,KAAf;AACA,OAFD;AAGA;;AACDwE,IAAAA,WAAW,GAAG,IAAd;AACA,GAVD;;AAWA,MAAIC,gBAAJ,EAAsB;AACrBL,IAAAA,OAAO,GAAGA,OAAO,CAACc,OAAlB;AACA;;AACD,MAAIC,cAAc,GAAGf,OAAO,CAAC/D,MAAR,KAAmBoE,gBAAgB,GAAG,CAAH,GAAO,CAA1C,CAArB;AACA,MAAIlC,OAAO,GAAG,IAAd;;AACA,WAAS6C,SAAT,CAAmBC,UAAnB,EAA+B;AAC9B,QAAI9C,OAAJ,EAAa;AACZA,MAAAA,OAAO;AACPA,MAAAA,OAAO,GAAG,IAAV;AACA;;AAED,QAAIkC,gBAAJ,EAAsB;AACrB,UAAIG,QAAQ,GAAGR,OAAO,CAACiB,UAAD,EAAad,YAAb,EAA2BQ,YAA3B,CAAtB;AACA,KAFD,MAEO;AACN,UAAIH,QAAQ,GAAGR,OAAO,CAACiB,UAAD,EAAaN,YAAb,CAAtB;AACA;;AACD,QAAII,cAAJ,EAAoB;AACnB,UAAI,OAAOP,QAAP,IAAmB,UAAvB,EAAmC;AAClCrC,QAAAA,OAAO,GAAGqC,QAAV;AACA;AACD,KAJD,MAIO;AACNG,MAAAA,YAAY,CAACH,QAAD,CAAZ;AACA;AACD;;AAED,MAAIU,SAAS,GAAG,KAAhB;;AACA,WAASxF,MAAT,CAAgB2B,EAAhB,EAAoB;AACnB,QAAI8D,SAAJ,EAAeC,sBAAf,EAAuCC,QAAvC,EAAiD7B,QAAjD;;AACA,QAAI0B,SAAJ,EAAe;AACd1B,MAAAA,QAAQ,GAAGnC,EAAE,CAAEwB,GAAG,CAAC4B,YAAD,CAAL,CAAb;AACAP,MAAAA,kBAAkB,CAACV,QAAD,CAAlB;AACA;AACA;;AACD,QAAI8B,WAAW,GAAGb,YAAY,CAACjF,SAAb,CAAyBI,KAAD,IAAW;AACpD,UAAI,CAACsF,SAAL,EAAgB;AACfG,QAAAA,QAAQ,GAAGzF,KAAX;AACA,OAFD,MAEO,IAAI,CAACuF,SAAL,EAAgB;AACtBA,QAAAA,SAAS,GAAG,IAAZ;AACA,OAFM,MAEA;AACNC,QAAAA,sBAAsB,GAAG,IAAzB;AACA;AACD,KARiB,CAAlB;AASA5B,IAAAA,QAAQ,GAAGnC,EAAE,CAACgE,QAAD,CAAb;AACAH,IAAAA,SAAS,GAAG,IAAZ;AACAhB,IAAAA,kBAAkB,CAACV,QAAD,CAAlB;AACA8B,IAAAA,WAAW;AACXJ,IAAAA,SAAS,GAAG,KAAZ;;AACA,QAAIE,sBAAJ,EAA4B;AAC3B5B,MAAAA,QAAQ,GAAGX,GAAG,CAAC4B,YAAD,CAAd;AACA;;AACD,QAAIU,SAAJ,EAAe;AACdH,MAAAA,SAAS,CAACxB,QAAD,CAAT;AACA;AACD;;AACD,SAAO;AACNhE,IAAAA,SAAS,EAAEiF,YAAY,CAACjF,SADlB;;AAEN4B,IAAAA,GAAG,CAACxB,KAAD,EAAQ;AAAEF,MAAAA,MAAM,CAAE,MAAME,KAAR,CAAN;AAAwB,KAF/B;;AAGNF,IAAAA;AAHM,GAAP;AAKA;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS6F,aAAT,CAAuBC,MAAvB,EAA+BC,QAA/B,EAAyC;AAC/C,MAAI,CAAC5D,KAAK,CAACC,OAAN,CAAc2D,QAAd,CAAL,EAA8B;AAC7B,WAAO5B,eAAe,CACrB2B,MADqB,EAEpBE,MAAD,IAAYA,MAAM,CAACD,QAAD,CAFG,EAGrB;AAAEX,MAAAA,OAAO,CAACG,UAAD,EAAaS,MAAb,EAAqB;AAC7BA,QAAAA,MAAM,CAACD,QAAD,CAAN,GAAmBR,UAAnB;AACA,eAAOS,MAAP;AACA;;AAHD,KAHqB,CAAtB;AAQA,GATD,MASO;AACN,QAAIC,KAAK,GAAGF,QAAQ,CAACG,MAAT,EAAZ;AACA,WAAO/B,eAAe,CACrB2B,MADqB,EAEpB5F,KAAD,IAAW;AACV,WAAK,IAAI8C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,KAAK,CAAC1F,MAA1B,EAAkC,EAAEyC,CAApC,EAAuC;AACtC9C,QAAAA,KAAK,GAAGA,KAAK,CAAE+F,KAAK,CAACjD,CAAD,CAAP,CAAb;AACA;;AACD,aAAO9C,KAAP;AACA,KAPoB,EAQrB;AAAEkF,MAAAA,OAAO,CAACG,UAAD,EAAaS,MAAb,EAAqB;AAC7B,YAAIG,MAAM,GAAGH,MAAb;;AACA,aAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,KAAK,CAAC1F,MAAN,GAAe,CAAnC,EAAsC,EAAEyC,CAAxC,EAA2C;AAC1CmD,UAAAA,MAAM,GAAGA,MAAM,CAAEF,KAAK,CAACjD,CAAD,CAAP,CAAf;AACA;;AACDmD,QAAAA,MAAM,CAAEF,KAAK,CAACA,KAAK,CAAC1F,MAAN,GAAe,CAAhB,CAAP,CAAN,GAAoCgF,UAApC;AACA,eAAOS,MAAP;AACA;;AAPD,KARqB,CAAtB;AAiBA;AACD;;;;"}