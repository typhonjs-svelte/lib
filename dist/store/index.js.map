{"version":3,"file":"index.js","sources":["../../node_modules/@typhonjs-utils/dyn-array-reducer/dist/DynArrayReducer.js","../../src/store/functions.js","../../node_modules/svelte-persistent-store/dist/chunk.I6NEYSOQ.mjs","../../node_modules/svelte-persistent-store/dist/chunk.HHIHGWA2.mjs","../../src/store/LocalStorage.js","../../node_modules/svelte-persistent-store/dist/chunk.ZLJ3FCQ6.mjs","../../src/store/SessionStorage.js","../../node_modules/svelte-writable-derived/index.mjs"],"sourcesContent":["/**\r\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\r\n * {@link FilterData} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\r\n * attribute.\r\n *\r\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\r\n * allows filters to be removed by ID easily.\r\n *\r\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\r\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\r\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\r\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\r\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\r\n *\r\n * This class forms the public API which is accessible from the `.filters` getter in the main DynArrayReducer instance.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.filters.add(...);\r\n * dynArray.filters.clear();\r\n * dynArray.filters.length;\r\n * dynArray.filters.remove(...);\r\n * dynArray.filters.removeBy(...);\r\n * dynArray.filters.removeById(...);\r\n * ```\r\n *\r\n * @template T\r\n */\r\nclass AdapterFilters\r\n{\r\n   #filtersAdapter;\r\n   #indexUpdate;\r\n   #mapUnsubscribe = new Map();\r\n\r\n   /**\r\n    * @param {Function} indexUpdate - update function for the indexer.\r\n    *\r\n    * @returns {[AdapterFilters<T>, {filters: FilterData<T>[]}]} Returns this and internal storage for filter adapters.\r\n    */\r\n   constructor(indexUpdate)\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#filtersAdapter = { filters: [] };\r\n\r\n      Object.seal(this);\r\n\r\n      return [this, this.#filtersAdapter];\r\n   }\r\n\r\n   /**\r\n    * @returns {number} Returns the length of the\r\n    */\r\n   get length() { return this.#filtersAdapter.filters.length; }\r\n\r\n   /**\r\n    * Provides an iterator for filters.\r\n    *\r\n    * @returns {Generator<number|undefined, FilterData<T>, *>} Generator / iterator of filters.\r\n    * @yields {FilterData<T>}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      if (this.#filtersAdapter.filters.length === 0) { return; }\r\n\r\n      for (const entry of this.#filtersAdapter.filters)\r\n      {\r\n         yield { ...entry };\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\r\n    */\r\n   add(...filters)\r\n   {\r\n      /**\r\n       * Tracks the number of filters added that have subscriber functionality.\r\n       *\r\n       * @type {number}\r\n       */\r\n      let subscribeCount = 0;\r\n\r\n      for (const filter of filters)\r\n      {\r\n         const filterType = typeof filter;\r\n\r\n         if (filterType !== 'function' && filterType !== 'object' || filter === null)\r\n         {\r\n            throw new TypeError(`DynArrayReducer error: 'filter' is not a function or object.`);\r\n         }\r\n\r\n         let data = void 0;\r\n         let subscribeFn = void 0;\r\n\r\n         switch (filterType)\r\n         {\r\n            case 'function':\r\n               data = {\r\n                  id: void 0,\r\n                  filter,\r\n                  weight: 1\r\n               };\r\n\r\n               subscribeFn = filter.subscribe;\r\n               break;\r\n\r\n            case 'object':\r\n               if (typeof filter.filter !== 'function')\r\n               {\r\n                  throw new TypeError(`DynArrayReducer error: 'filter' attribute is not a function.`);\r\n               }\r\n\r\n               if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\r\n                (filter.weight < 0 || filter.weight > 1))\r\n               {\r\n                  throw new TypeError(\r\n                   `DynArrayReducer error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\r\n               }\r\n\r\n               data = {\r\n                  id: filter.id !== void 0 ? filter.id : void 0,\r\n                  filter: filter.filter,\r\n                  weight: filter.weight || 1\r\n               };\r\n\r\n               subscribeFn = filter.filter.subscribe ?? filter.subscribe;\r\n               break;\r\n         }\r\n\r\n         // Find the index to insert where data.weight is less than existing values weight.\r\n         const index = this.#filtersAdapter.filters.findIndex((value) =>\r\n         {\r\n            return data.weight < value.weight;\r\n         });\r\n\r\n         // If an index was found insert at that location.\r\n         if (index >= 0)\r\n         {\r\n            this.#filtersAdapter.filters.splice(index, 0, data);\r\n         }\r\n         else // push to end of filters.\r\n         {\r\n            this.#filtersAdapter.filters.push(data);\r\n         }\r\n\r\n         if (typeof subscribeFn === 'function')\r\n         {\r\n            const unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n            // Ensure that unsubscribe is a function.\r\n            if (typeof unsubscribe !== 'function')\r\n            {\r\n               throw new TypeError(\r\n                'DynArrayReducer error: Filter has subscribe function, but no unsubscribe function is returned.');\r\n            }\r\n\r\n            // Ensure that the same filter is not subscribed to multiple times.\r\n            if (this.#mapUnsubscribe.has(data.filter))\r\n            {\r\n               throw new Error(\r\n                'DynArrayReducer error: Filter added already has an unsubscribe function registered.');\r\n            }\r\n\r\n            this.#mapUnsubscribe.set(data.filter, unsubscribe);\r\n            subscribeCount++;\r\n         }\r\n      }\r\n\r\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\r\n      // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\r\n      if (subscribeCount < filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   clear()\r\n   {\r\n      this.#filtersAdapter.filters.length = 0;\r\n\r\n      // Unsubscribe from all filters with subscription support.\r\n      for (const unsubscribe of this.#mapUnsubscribe.values())\r\n      {\r\n         unsubscribe();\r\n      }\r\n\r\n      this.#mapUnsubscribe.clear();\r\n\r\n      this.#indexUpdate();\r\n   }\r\n\r\n   /**\r\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\r\n    */\r\n   remove(...filters)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      for (const data of filters)\r\n      {\r\n         // Handle the case that the filter may either be a function or a filter entry / object.\r\n         const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\r\n          data.filter : void 0;\r\n\r\n         if (!actualFilter) { continue; }\r\n\r\n         for (let cntr = this.#filtersAdapter.filters.length; --cntr >= 0;)\r\n         {\r\n            if (this.#filtersAdapter.filters[cntr].filter === actualFilter)\r\n            {\r\n               this.#filtersAdapter.filters.splice(cntr, 1);\r\n\r\n               // Invoke any unsubscribe function for given filter then remove from tracking.\r\n               let unsubscribe = void 0;\r\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function')\r\n               {\r\n                  unsubscribe();\r\n                  this.#mapUnsubscribe.delete(actualFilter);\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      // Update the index a filter was removed.\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\r\n    * Any truthy value returned will remove that filter.\r\n    *\r\n    * @param {function(*, FilterFn<T>, number): boolean} callback - Callback function to evaluate each filter entry.\r\n    */\r\n   removeBy(callback)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      if (typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`DynArrayReducer error: 'callback' is not a function.`);\r\n      }\r\n\r\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\r\n      {\r\n         const remove = callback.call(callback, { ...data });\r\n\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         // Reverse remove boolean to properly filter / remove this filter.\r\n         return !remove;\r\n      });\r\n\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   removeById(...ids)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\r\n      {\r\n         let remove = false;\r\n\r\n         for (const id of ids) { remove |= data.id === id; }\r\n\r\n         // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         return !remove; // Swap here to actually remove the item via array filter method.\r\n      });\r\n\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n}\n\n/**\r\n * @template T\r\n */\r\nclass AdapterSort\r\n{\r\n   #sortAdapter;\r\n   #indexUpdate;\r\n   #unsubscribe;\r\n\r\n   /**\r\n    * @param {Function} indexUpdate - Function to update indexer.\r\n    *\r\n    * @returns {[AdapterSort<T>, {compareFn: CompareFn<T>}]} This and the internal sort adapter data.\r\n    */\r\n   constructor(indexUpdate)\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#sortAdapter = { compareFn: null };\r\n\r\n      Object.seal(this);\r\n\r\n      return [this, this.#sortAdapter];\r\n   }\r\n\r\n   /**\r\n    * @param {CompareFn<T>|SortData<T>}  data -\r\n    *\r\n    * A callback function that compares two values. Return > 0 to sort b before a;\r\n    * < 0 to sort a before b; or 0 to keep original order of a & b.\r\n    *\r\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\r\n    */\r\n   set(data)\r\n   {\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      let compareFn = void 0;\r\n      let subscribeFn = void 0;\r\n\r\n      switch (typeof data)\r\n      {\r\n         case 'function':\r\n            compareFn = data;\r\n            subscribeFn = data.subscribe;\r\n            break;\r\n\r\n         case 'object':\r\n            // Early out if data is null / noop.\r\n            if (data === null) { break; }\r\n\r\n            if (typeof data.compare !== 'function')\r\n            {\r\n               throw new TypeError(`DynArrayReducer error: 'compare' attribute is not a function.`);\r\n            }\r\n\r\n            compareFn = data.compare;\r\n            subscribeFn = data.compare.subscribe ?? data.subscribe;\r\n            break;\r\n      }\r\n\r\n      if (typeof compareFn === 'function')\r\n      {\r\n         this.#sortAdapter.compareFn = compareFn;\r\n      }\r\n      else\r\n      {\r\n         const oldCompareFn = this.#sortAdapter.compareFn;\r\n         this.#sortAdapter.compareFn = null;\r\n\r\n         // Update index if the old compare function exists.\r\n         if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n         return;\r\n      }\r\n\r\n      if (typeof subscribeFn === 'function')\r\n      {\r\n         this.#unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n         // Ensure that unsubscribe is a function.\r\n         if (typeof this.#unsubscribe !== 'function')\r\n         {\r\n            throw new Error(\r\n             `DynArrayReducer error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\r\n         // Only manually update the index if there is no subscriber functionality.\r\n         this.#indexUpdate();\r\n      }\r\n   }\r\n\r\n   reset()\r\n   {\r\n      const oldCompareFn = this.#sortAdapter.compareFn;\r\n\r\n      this.#sortAdapter.compareFn = null;\r\n\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      // Only update index if an old compare function is set.\r\n      if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n   }\r\n}\n\nclass Indexer\r\n{\r\n   constructor(hostItems, hostUpdate)\r\n   {\r\n      this.hostItems = hostItems;\r\n      this.hostUpdate = hostUpdate;\r\n\r\n      const indexAdapter = { index: null, hash: null };\r\n\r\n      const publicAPI = {\r\n         update: this.update.bind(this),\r\n\r\n         /**\r\n          * Provides an iterator over the index array.\r\n          *\r\n          * @returns {Generator<any, void, *>} Iterator.\r\n          * @yields\r\n          */\r\n         [Symbol.iterator]: function *()\r\n         {\r\n            if (!indexAdapter.index) { return; }\r\n\r\n            for (const index of indexAdapter.index) { yield index; }\r\n         }\r\n      };\r\n\r\n      // Define a getter on the public API to get the length / count of index array.\r\n      Object.defineProperties(publicAPI, {\r\n         hash: { get: () => indexAdapter.hash },\r\n         isActive: { get: () => this.isActive() },\r\n         length: { get: () => Array.isArray(indexAdapter.index) ? indexAdapter.index.length : 0 }\r\n      });\r\n\r\n      Object.freeze(publicAPI);\r\n\r\n      indexAdapter.publicAPI = publicAPI;\r\n\r\n      this.indexAdapter = indexAdapter;\r\n\r\n      return [this, indexAdapter];\r\n   }\r\n\r\n   /**\r\n    * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\r\n    * is set to null. Set calculated new hash value to the index adapter hash value.\r\n    *\r\n    * After hash generation compare old and new hash values and perform an update if they are different. If they are\r\n    * equal check for array equality between the old and new index array and perform an update if they are not equal.\r\n    *\r\n    * @param {number[]}    oldIndex - Old index array.\r\n    *\r\n    * @param {number|null} oldHash - Old index hash value.\r\n    */\r\n   calcHashUpdate(oldIndex, oldHash)\r\n   {\r\n      let newHash = null;\r\n      const newIndex = this.indexAdapter.index;\r\n\r\n      if (newIndex)\r\n      {\r\n         for (let cntr = newIndex.length; --cntr >= 0;)\r\n         {\r\n            newHash ^= newIndex[cntr] + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\r\n         }\r\n      }\r\n\r\n      this.indexAdapter.hash = newHash;\r\n\r\n      if (oldHash === newHash ? !s_ARRAY_EQUALS(oldIndex, newIndex) : true) { this.hostUpdate(); }\r\n   }\r\n\r\n   initAdapters(filtersAdapter, sortAdapter)\r\n   {\r\n      this.filtersAdapter = filtersAdapter;\r\n      this.sortAdapter = sortAdapter;\r\n\r\n      this.sortFn = (a, b) =>\r\n      {\r\n         return this.sortAdapter.compareFn(this.hostItems[a], this.hostItems[b]);\r\n      };\r\n   }\r\n\r\n   isActive()\r\n   {\r\n      return this.filtersAdapter.filters.length > 0 || this.sortAdapter.compareFn !== null;\r\n   }\r\n\r\n   /**\r\n    * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\r\n    *\r\n    * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\r\n    * but the maintenance factor is not worth the extra complication.\r\n    *\r\n    * @returns {number[]} New filtered index array.\r\n    */\r\n   reduceImpl()\r\n   {\r\n      const data = [];\r\n\r\n      const filters = this.filtersAdapter.filters;\r\n\r\n      let include = true;\r\n\r\n      for (let cntr = 0, length = this.hostItems.length; cntr < length; cntr++)\r\n      {\r\n         include = true;\r\n\r\n         for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\r\n         {\r\n            if (!filters[filCntr].filter(this.hostItems[cntr]))\r\n            {\r\n               include = false;\r\n               break;\r\n            }\r\n         }\r\n\r\n         if (include) { data.push(cntr); }\r\n      }\r\n\r\n      return data;\r\n   }\r\n\r\n   update()\r\n   {\r\n      const oldIndex = this.indexAdapter.index;\r\n      const oldHash = this.indexAdapter.hash;\r\n\r\n      // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\r\n      if ((this.filtersAdapter.filters.length === 0 && !this.sortAdapter.compareFn) ||\r\n       (this.indexAdapter.index && this.hostItems.length !== this.indexAdapter.index.length))\r\n      {\r\n         this.indexAdapter.index = null;\r\n      }\r\n\r\n      // If there are filters build new index.\r\n      if (this.filtersAdapter.filters.length > 0) { this.indexAdapter.index = this.reduceImpl(); }\r\n\r\n      if (this.sortAdapter.compareFn)\r\n      {\r\n         // If there is no index then create one with keys matching host item length.\r\n         if (!this.indexAdapter.index) { this.indexAdapter.index = [...Array(this.hostItems.length).keys()]; }\r\n\r\n         this.indexAdapter.index.sort(this.sortFn);\r\n      }\r\n\r\n      this.calcHashUpdate(oldIndex, oldHash);\r\n   }\r\n}\r\n\r\n/**\r\n * Checks for array equality between two arrays of numbers.\r\n *\r\n * @param {number[]} a - Array A\r\n *\r\n * @param {number[]} b - Array B\r\n *\r\n * @returns {boolean} Arrays equal\r\n */\r\nfunction s_ARRAY_EQUALS(a, b)\r\n{\r\n   if (a === b) { return true; }\r\n   if (a === null || b === null) { return false; }\r\n\r\n   /* c8 ignore next */\r\n   if (a.length !== b.length) { return false; }\r\n\r\n   for (let cntr = a.length; --cntr >= 0;)\r\n   {\r\n      /* c8 ignore next */\r\n      if (a[cntr] !== b[cntr]) { return false; }\r\n   }\r\n\r\n   return true;\r\n}\n\n/**\r\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\r\n * Svelte store support.\r\n *\r\n * @template T\r\n */\r\nclass DynArrayReducer\r\n{\r\n   #items;\r\n\r\n   #index;\r\n   #indexAdapter;\r\n\r\n   /**\r\n    * @type {AdapterFilters<T>}\r\n    */\r\n   #filters;\r\n\r\n   /**\r\n    * @type {{filters: FilterFn<T>[]}}\r\n    */\r\n   #filtersAdapter;\r\n\r\n   /**\r\n    * @type {AdapterSort<T>}\r\n    */\r\n   #sort;\r\n\r\n   /**\r\n    * @type {{compareFn: CompareFn<T>}}\r\n    */\r\n   #sortAdapter;\r\n\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\r\n    * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\r\n    *\r\n    * @param {Iterable<T>|DynData<T>}   data - Data iterable to store if array or copy otherwise.\r\n    */\r\n   constructor(data = void 0)\r\n   {\r\n      let dataIterable = void 0;\r\n      let filters = void 0;\r\n      let sort = void 0;\r\n\r\n      // Potentially working with DynData.\r\n      if (!s_IS_ITERABLE(data) && typeof data === 'object')\r\n      {\r\n         if (!s_IS_ITERABLE(data.data))\r\n         {\r\n            throw new TypeError(`DynArrayReducer error (DynData): 'data' attribute is not iterable.`);\r\n         }\r\n\r\n         dataIterable = data.data;\r\n\r\n         if (data.filters !== void 0)\r\n         {\r\n            if (s_IS_ITERABLE(data.filters))\r\n            {\r\n               filters = data.filters;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynArrayReducer error (DynData): 'filters' attribute is not iterable.`);\r\n            }\r\n         }\r\n\r\n         if (data.sort !== void 0)\r\n         {\r\n            if (typeof data.sort === 'function')\r\n            {\r\n               sort = data.sort;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynArrayReducer error (DynData): 'sort' attribute is not a function.`);\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         if (!s_IS_ITERABLE(data)) { throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`); }\r\n\r\n         dataIterable = data;\r\n      }\r\n\r\n      // In the case of the main data being an array directly use the array otherwise create a copy.\r\n      this.#items = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\r\n\r\n      [this.#index, this.#indexAdapter] = new Indexer(this.#items, this.#notify.bind(this));\r\n\r\n      [this.#filters, this.#filtersAdapter] = new AdapterFilters(this.#indexAdapter.publicAPI.update);\r\n      [this.#sort, this.#sortAdapter] = new AdapterSort(this.#indexAdapter.publicAPI.update);\r\n\r\n      this.#index.initAdapters(this.#filtersAdapter, this.#sortAdapter);\r\n\r\n      // Add any filters and sort function defined by DynData.\r\n      if (filters) { this.filters.add(...filters); }\r\n      if (sort) { this.sort.set(sort); }\r\n   }\r\n\r\n   /**\r\n    * @returns {AdapterFilters<T>} The filters adapter.\r\n    */\r\n   get filters() { return this.#filters; }\r\n\r\n   /**\r\n    * Returns the Indexer public API.\r\n    *\r\n    * @returns {IndexerAPI & Iterable<number>} Indexer API - is also iterable.\r\n    */\r\n   get index() { return this.#indexAdapter.publicAPI; }\r\n\r\n   /**\r\n    * Gets the main data / items length.\r\n    *\r\n    * @returns {number} Main data / items length.\r\n    */\r\n   get length() { return this.#items.length; }\r\n\r\n   /**\r\n    * @returns {AdapterSort<T>} The sort adapter.\r\n    */\r\n   get sort() { return this.#sort; }\r\n\r\n   /**\r\n    *\r\n    * @param {function(DynArrayReducer<T>): void} handler - Callback function that is invoked on update / changes.\r\n    *                                                       Receives `this` reference.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    *\r\n    */\r\n   #notify()\r\n   {\r\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\r\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\r\n      const subscriptions = this.#subscriptions;\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\r\n   }\r\n\r\n   /**\r\n    * Provides an iterator for data stored in DynArrayReducer.\r\n    *\r\n    * @returns {Generator<*, T, *>} Generator / iterator of all data.\r\n    * @yields {T}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      const items = this.#items;\r\n\r\n      if (items.length === 0) { return; }\r\n\r\n      if (this.#index.isActive())\r\n      {\r\n         for (const entry of this.index) { yield items[entry]; }\r\n      }\r\n      else\r\n      {\r\n         for (const entry of items) { yield entry; }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\r\n *\r\n * @param {*}  data - Data to verify as iterable.\r\n *\r\n * @returns {boolean} Is data iterable.\r\n */\r\nfunction s_IS_ITERABLE(data)\r\n{\r\n   return data !== null && data !== void 0 && typeof data === 'object' && typeof data[Symbol.iterator] === 'function';\r\n}\n\nexport { DynArrayReducer };\n","/**\r\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\r\n * function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isReadableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * and `set` functions.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isWritableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with the update function provided and ignores the first automatic\r\n * update. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} update - function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeIgnoreFirst(store, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\r\n * subscription. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} first - Function to receive first update.\r\n *\r\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeFirstRest(store, first, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n         first(value);\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n","// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      if (storage.getItem(key)) {\n        value = JSON.parse(storage.getItem(key));\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      initial_value = JSON.parse(storage.getItem(key));\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","import {\n  generator\n} from \"./chunk.I6NEYSOQ.mjs\";\n\n// src/local.ts\nvar storage = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/local';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get} LSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class LocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, LSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {*} Value from local storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in local storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new LSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      if (localStorage.getItem(key))\r\n      {\r\n         defaultValue = JSON.parse(localStorage.getItem(key));\r\n      }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import {\n  generator\n} from \"./chunk.I6NEYSOQ.mjs\";\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/session';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get} SSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class SessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, SSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new SSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      if (sessionStorage.getItem(key))\r\n      {\r\n         defaultValue = JSON.parse(sessionStorage.getItem(key));\r\n      }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import { derived, get } from \"svelte/store\";\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#Store_contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#derived), but which\n * has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 2nd parameter.\n * @param {!Function|{withOld: !Function}} reflect Called when the\n * derived store gets a new value via its `set` or `update` methods, and determines new values for\n * the origin stores. [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nexport default function writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, allowDerive = true;\n\tvar reflectOldValues = \"withOld\" in reflect;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (allowDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tvar sendUpstream = (setWith) => {\n\t\tallowDerive = false;\n\t\tif (singleOrigin) {\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tallowDerive = true;\n\t};\n\tif (reflectOldValues) {\n\t\treflect = reflect.withOld;\n\t}\n\tvar reflectIsAsync = reflect.length >= (reflectOldValues ? 3 : 2);\n\tvar cleanup = null;\n\tfunction doReflect(reflecting) {\n\t\tif (cleanup) {\n\t\t\tcleanup();\n\t\t\tcleanup = null;\n\t\t}\n\n\t\tif (reflectOldValues) {\n\t\t\tvar returned = reflect(reflecting, originValues, sendUpstream);\n\t\t} else {\n\t\t\tvar returned = reflect(reflecting, sendUpstream);\n\t\t}\n\t\tif (reflectIsAsync) {\n\t\t\tif (typeof returned == \"function\") {\n\t\t\t\tcleanup = returned;\n\t\t\t}\n\t\t} else {\n\t\t\tsendUpstream(returned);\n\t\t}\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\nexport { writableDerived };\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nexport function propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t}\n}"],"names":["Symbol","iterator","AdapterFilters","constructor","indexUpdate","Map","filters","Object","seal","length","entry","add","subscribeCount","filter","filterType","TypeError","data","subscribeFn","id","weight","subscribe","index","findIndex","value","splice","push","unsubscribe","has","Error","set","clear","values","remove","actualFilter","cntr","get","delete","removeBy","callback","call","removeById","ids","AdapterSort","compareFn","compare","oldCompareFn","reset","Indexer","hostItems","hostUpdate","indexAdapter","hash","publicAPI","update","bind","defineProperties","isActive","Array","isArray","freeze","calcHashUpdate","oldIndex","oldHash","newHash","newIndex","s_ARRAY_EQUALS","initAdapters","filtersAdapter","sortAdapter","sortFn","a","b","reduceImpl","include","filCntr","filLength","keys","sort","DynArrayReducer","dataIterable","s_IS_ITERABLE","handler","sub","items","subscriptions","isReadableStore","store","isWritableStore","subscribeIgnoreFirst","firedFirst","subscribeFirstRest","first","isSimpleDeriver","deriver","generator","storage","readable","key","start","writable","noop","wrap_start","ogSet","wrap_set","new_value","setItem","JSON","stringify","getItem","parse","ogStore","ogWritable","fn","ogGet","run","invalidate","derived","stores","initial_value","single","stores_array","inited","pending","cleanup","sync","input","result","is_function","unsubscribers","map","i","stop","run_all","window","localStorage","g","LocalStorage","defaultValue","storageValue","getStore","s_GET_STORE","swapItemBoolean","newValue","s_CREATE_STORE","err","sessionStorage","SessionStorage","writableDerived","origins","derive","reflect","initial","childDerivedSetter","originValues","allowDerive","reflectOldValues","wrappedDerive","got","returned","childDerived","singleOrigin","sendUpstream","setWith","forEach","withOld","reflectIsAsync","doReflect","reflecting","tryingSet","isUpdated","mutatedBySubscriptions","oldValue","propertyStore","origin","propName","object","props","concat","target"],"mappings":"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"}