{"version":3,"file":"index.js","sources":["../../node_modules/@typhonjs-utils/dynamic-reducer/dist/index.js","../../src/store/dom-events/KeyStore.js","../../node_modules/svelte-persistent-store/dist/chunk.PXUOYU5R.mjs","../../node_modules/svelte-persistent-store/dist/chunk.W4AS553O.mjs","../../src/store/web-storage/TJSLocalStorage.js","../../node_modules/svelte-persistent-store/dist/chunk.QQJ3JZYS.mjs","../../src/store/web-storage/TJSSessionStorage.js","../../src/store/functions.js","../../node_modules/svelte-writable-derived/index.mjs"],"sourcesContent":["class DynReducerUtils {\r\n    /**\r\n     * Checks for array equality between two arrays of numbers.\r\n     *\r\n     * @param a - Array A\r\n     *\r\n     * @param b - Array B\r\n     *\r\n     * @returns Arrays are equal.\r\n     */\r\n    static arrayEquals(a, b) {\r\n        if (a === b) {\r\n            return true;\r\n        }\r\n        if (a === null || b === null) {\r\n            return false;\r\n        }\r\n        /* c8 ignore next */\r\n        if (a.length !== b.length) {\r\n            return false;\r\n        }\r\n        for (let cntr = a.length; --cntr >= 0;) {\r\n            /* c8 ignore next */\r\n            if (a[cntr] !== b[cntr]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Provides a solid string hashing algorithm.\r\n     *\r\n     * Sourced from: https://stackoverflow.com/a/52171480\r\n     *\r\n     * @param str - String to hash.\r\n     *\r\n     * @param seed - A seed value altering the hash.\r\n     *\r\n     * @returns Hash code.\r\n     */\r\n    static hashString(str, seed = 0) {\r\n        let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\r\n        for (let ch, i = 0; i < str.length; i++) {\r\n            ch = str.charCodeAt(i);\r\n            h1 = Math.imul(h1 ^ ch, 2654435761);\r\n            h2 = Math.imul(h2 ^ ch, 1597334677);\r\n        }\r\n        h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\r\n        h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\r\n        return 4294967296 * (2097151 & h2) + (h1 >>> 0);\r\n    }\r\n    /**\r\n     * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\r\n     *\r\n     * Currently objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\r\n     * case, but it is not common to use objects as keys in Maps.\r\n     *\r\n     * @param value - An unknown value to convert to a number.\r\n     */\r\n    static hashUnknown(value) {\r\n        if (value === null || value === void 0) {\r\n            return 0;\r\n        }\r\n        let result = 0;\r\n        switch (typeof value) {\r\n            case 'boolean':\r\n                result = value ? 1 : 0;\r\n                break;\r\n            case 'bigint':\r\n                result = Number(BigInt.asIntN(64, value));\r\n                break;\r\n            case 'function':\r\n                result = this.hashString(value.name);\r\n                break;\r\n            case 'number':\r\n                result = Number.isFinite(value) ? value : 0;\r\n                break;\r\n            case 'object':\r\n                // TODO: consider hashing an object IE `object-hash` and convert to number.\r\n                break;\r\n            case 'string':\r\n                result = this.hashString(value);\r\n                break;\r\n            case 'symbol':\r\n                result = this.hashString(Symbol.keyFor(value));\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @param target -\r\n     *\r\n     * @param Prototype -\r\n     *\r\n     * @returns target constructor function has Prototype.\r\n     */\r\n    static hasPrototype(target, Prototype) {\r\n        /* c8 ignore next */\r\n        if (typeof target !== 'function') {\r\n            return false;\r\n        }\r\n        if (target === Prototype) {\r\n            return true;\r\n        }\r\n        // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n        for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\r\n            if (proto === Prototype) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\r\n     *\r\n     * @param data - Data to verify as iterable.\r\n     *\r\n     * @returns Is data iterable.\r\n     */\r\n    static isIterable(data) {\r\n        return data !== null && data !== void 0 && typeof data === 'object' &&\r\n            typeof data[Symbol.iterator] === 'function';\r\n    }\r\n}\n\n/**\r\n * Provides the `derived` API for all dynamic reducers.\r\n */\r\nclass AdapterDerived {\r\n    #hostData;\r\n    #DerivedReducerCtor;\r\n    #parentIndex;\r\n    #derived = new Map();\r\n    #destroyed = false;\r\n    /**\r\n     * @param hostData - Hosted data structure.\r\n     *\r\n     * @param parentIndex - Any associated parent index API.\r\n     *\r\n     * @param DerivedReducerCtor - The default derived reducer constructor function.\r\n     */\r\n    constructor(hostData, parentIndex, DerivedReducerCtor) {\r\n        this.#hostData = hostData;\r\n        this.#parentIndex = parentIndex;\r\n        this.#DerivedReducerCtor = DerivedReducerCtor;\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Creates a new derived reducer.\r\n     *\r\n     * @param options - Options defining the new derived reducer.\r\n     *\r\n     * @returns Newly created derived reducer.\r\n     */\r\n    create(options) {\r\n        if (this.#destroyed) {\r\n            throw Error(`AdapterDerived.create error: this instance has been destroyed.`);\r\n        }\r\n        let name;\r\n        let rest = {};\r\n        let ctor;\r\n        const DerivedReducerCtor = this.#DerivedReducerCtor;\r\n        if (typeof options === 'string') {\r\n            name = options;\r\n            ctor = DerivedReducerCtor;\r\n        }\r\n        else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor)) {\r\n            ctor = options;\r\n        }\r\n        else if (typeof options === 'object' && options !== null) {\r\n            ({ name, ctor = DerivedReducerCtor, ...rest } = options);\r\n        }\r\n        else {\r\n            throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\r\n        }\r\n        if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor)) {\r\n            throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\r\n        }\r\n        name = name ?? ctor?.name;\r\n        if (typeof name !== 'string') {\r\n            throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`);\r\n        }\r\n        const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\r\n        this.#derived.set(name, derivedReducer);\r\n        return derivedReducer;\r\n    }\r\n    /**\r\n     * Removes all derived reducers and associated subscriptions.\r\n     */\r\n    clear() {\r\n        if (this.#destroyed) {\r\n            return;\r\n        }\r\n        for (const reducer of this.#derived.values()) {\r\n            reducer.destroy();\r\n        }\r\n        this.#derived.clear();\r\n    }\r\n    /**\r\n     * Deletes and destroys a derived reducer by name.\r\n     *\r\n     * @param name - Name of the derived reducer.\r\n     */\r\n    delete(name) {\r\n        if (this.#destroyed) {\r\n            throw Error(`AdapterDerived.delete error: this instance has been destroyed.`);\r\n        }\r\n        const reducer = this.#derived.get(name);\r\n        if (reducer) {\r\n            reducer.destroy();\r\n        }\r\n        return this.#derived.delete(name);\r\n    }\r\n    /**\r\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n     */\r\n    destroy() {\r\n        if (this.#destroyed) {\r\n            return;\r\n        }\r\n        this.clear();\r\n        this.#hostData = [null];\r\n        this.#parentIndex = null;\r\n        this.#destroyed = true;\r\n    }\r\n    /**\r\n     * Returns an existing derived reducer.\r\n     *\r\n     * @param name - Name of derived reducer.\r\n     */\r\n    get(name) {\r\n        if (this.#destroyed) {\r\n            throw Error(`AdapterDerived.get error: this instance has been destroyed.`);\r\n        }\r\n        return this.#derived.get(name);\r\n    }\r\n    /**\r\n     * Updates all managed derived reducer indexes.\r\n     *\r\n     * @param [force] - Force an update to subscribers.\r\n     */\r\n    update(force = false) {\r\n        if (this.#destroyed) {\r\n            return;\r\n        }\r\n        for (const reducer of this.#derived.values()) {\r\n            reducer.index.update(force);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\r\n * {@link DataFilter} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\r\n * attribute.\r\n *\r\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\r\n * allows filters to be removed by ID easily.\r\n *\r\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\r\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\r\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\r\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\r\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\r\n *\r\n * This class forms the public API which is accessible from the `.filters` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.filters.add(...);\r\n * dynArray.filters.clear();\r\n * dynArray.filters.length;\r\n * dynArray.filters.remove(...);\r\n * dynArray.filters.removeBy(...);\r\n * dynArray.filters.removeById(...);\r\n * ```\r\n */\r\nclass AdapterFilters {\r\n    #filtersData;\r\n    #indexUpdate;\r\n    #mapUnsubscribe = new Map();\r\n    /**\r\n     * @param indexUpdate - update function for the indexer.\r\n     *\r\n     * @param filtersAdapter - Stores the filter function data.\r\n     */\r\n    constructor(indexUpdate, filtersAdapter) {\r\n        this.#indexUpdate = indexUpdate;\r\n        this.#filtersData = filtersAdapter;\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * @returns Returns the length of the filter data.\r\n     */\r\n    get length() { return this.#filtersData.filters.length; }\r\n    /**\r\n     * Provides an iterator for filters.\r\n     *\r\n     * @returns Generator / iterator of filters.\r\n     * @yields {DataFilter<T>}\r\n     */\r\n    *[Symbol.iterator]() {\r\n        if (this.#filtersData.filters.length === 0) {\r\n            return;\r\n        }\r\n        for (const entry of this.#filtersData.filters) {\r\n            yield { ...entry };\r\n        }\r\n    }\r\n    /**\r\n     * @param filters -\r\n     */\r\n    add(...filters) {\r\n        /**\r\n         * Tracks the number of filters added that have subscriber functionality.\r\n         */\r\n        let subscribeCount = 0;\r\n        for (const filter of filters) {\r\n            const filterType = typeof filter;\r\n            if (filterType !== 'function' && (filterType !== 'object' || filter === null)) {\r\n                throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\r\n            }\r\n            let data = void 0;\r\n            let subscribeFn = void 0;\r\n            if (filterType === 'function') {\r\n                data = {\r\n                    id: void 0,\r\n                    filter,\r\n                    weight: 1\r\n                };\r\n                subscribeFn = filter.subscribe;\r\n            }\r\n            else if (filterType === 'object') {\r\n                if ('filter' in filter) {\r\n                    if (typeof filter.filter !== 'function') {\r\n                        throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\r\n                    }\r\n                    if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\r\n                        (filter.weight < 0 || filter.weight > 1)) {\r\n                        throw new TypeError(`AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\r\n                    }\r\n                    data = {\r\n                        id: filter.id !== void 0 ? filter.id : void 0,\r\n                        filter: filter.filter,\r\n                        weight: filter.weight || 1\r\n                    };\r\n                    subscribeFn = filter.filter.subscribe ?? filter.subscribe;\r\n                }\r\n                else {\r\n                    throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\r\n                }\r\n            }\r\n            // Find the index to insert where data.weight is less than existing values weight.\r\n            const index = this.#filtersData.filters.findIndex((value) => {\r\n                return data.weight < value.weight;\r\n            });\r\n            // If an index was found insert at that location.\r\n            if (index >= 0) {\r\n                this.#filtersData.filters.splice(index, 0, data);\r\n            }\r\n            else // push to end of filters.\r\n             {\r\n                this.#filtersData.filters.push(data);\r\n            }\r\n            if (typeof subscribeFn === 'function') {\r\n                const unsubscribe = subscribeFn(this.#indexUpdate);\r\n                // Ensure that unsubscribe is a function.\r\n                if (typeof unsubscribe !== 'function') {\r\n                    throw new TypeError('AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\r\n                }\r\n                // Ensure that the same filter is not subscribed to multiple times.\r\n                if (this.#mapUnsubscribe.has(data.filter)) {\r\n                    throw new Error('AdapterFilters error: Filter added already has an unsubscribe function registered.');\r\n                }\r\n                this.#mapUnsubscribe.set(data.filter, unsubscribe);\r\n                subscribeCount++;\r\n            }\r\n        }\r\n        // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\r\n        // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\r\n        if (subscribeCount < filters.length) {\r\n            this.#indexUpdate();\r\n        }\r\n    }\r\n    /**\r\n     * Clears and removes all filters.\r\n     */\r\n    clear() {\r\n        this.#filtersData.filters.length = 0;\r\n        // Unsubscribe from all filters with subscription support.\r\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\r\n            unsubscribe();\r\n        }\r\n        this.#mapUnsubscribe.clear();\r\n        this.#indexUpdate();\r\n    }\r\n    /**\r\n     * @param filters -\r\n     */\r\n    remove(...filters) {\r\n        const length = this.#filtersData.filters.length;\r\n        if (length === 0) {\r\n            return;\r\n        }\r\n        for (const data of filters) {\r\n            // Handle the case that the filter may either be a function or a filter entry / object.\r\n            const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\r\n                data.filter : void 0;\r\n            if (!actualFilter) {\r\n                continue;\r\n            }\r\n            for (let cntr = this.#filtersData.filters.length; --cntr >= 0;) {\r\n                if (this.#filtersData.filters[cntr].filter === actualFilter) {\r\n                    this.#filtersData.filters.splice(cntr, 1);\r\n                    // Invoke any unsubscribe function for given filter then remove from tracking.\r\n                    let unsubscribe = void 0;\r\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function') {\r\n                        unsubscribe();\r\n                        this.#mapUnsubscribe.delete(actualFilter);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Update the index a filter was removed.\r\n        if (length !== this.#filtersData.filters.length) {\r\n            this.#indexUpdate();\r\n        }\r\n    }\r\n    /**\r\n     * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\r\n     * Any truthy value returned will remove that filter.\r\n     *\r\n     * @param callback - Callback function to evaluate each filter entry.\r\n     */\r\n    removeBy(callback) {\r\n        const length = this.#filtersData.filters.length;\r\n        if (length === 0) {\r\n            return;\r\n        }\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\r\n        }\r\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\r\n            const remove = callback.call(callback, { ...data });\r\n            if (remove) {\r\n                let unsubscribe;\r\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\r\n                    unsubscribe();\r\n                    this.#mapUnsubscribe.delete(data.filter);\r\n                }\r\n            }\r\n            // Reverse remove boolean to properly filter / remove this filter.\r\n            return !remove;\r\n        });\r\n        if (length !== this.#filtersData.filters.length) {\r\n            this.#indexUpdate();\r\n        }\r\n    }\r\n    /**\r\n     * @param ids - Removes filters by ID.\r\n     */\r\n    removeById(...ids) {\r\n        const length = this.#filtersData.filters.length;\r\n        if (length === 0) {\r\n            return;\r\n        }\r\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\r\n            let remove = 0;\r\n            for (const id of ids) {\r\n                remove |= (data.id === id ? 1 : 0);\r\n            }\r\n            // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\r\n            if (!!remove) {\r\n                let unsubscribe;\r\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\r\n                    unsubscribe();\r\n                    this.#mapUnsubscribe.delete(data.filter);\r\n                }\r\n            }\r\n            return !remove; // Swap here to actually remove the item via array filter method.\r\n        });\r\n        if (length !== this.#filtersData.filters.length) {\r\n            this.#indexUpdate();\r\n        }\r\n    }\r\n}\n\n/**\r\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\r\n * applied.\r\n */\r\nclass AdapterIndexer {\r\n    derivedAdapter;\r\n    filtersData;\r\n    hostData;\r\n    hostUpdate;\r\n    indexData;\r\n    sortData;\r\n    sortFn;\r\n    destroyed = false;\r\n    /**\r\n     * @param hostData - Hosted data structure.\r\n     *\r\n     * @param hostUpdate - Host update function invoked on index updates.\r\n     *\r\n     * @param [parentIndexer] - Any associated parent index API.\r\n     *\r\n     * @returns Indexer adapter instance.\r\n     */\r\n    constructor(hostData, hostUpdate, parentIndexer) {\r\n        this.hostData = hostData;\r\n        this.hostUpdate = hostUpdate;\r\n        this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\r\n    }\r\n    /**\r\n     * @returns Returns whether the index is active.\r\n     */\r\n    get active() {\r\n        return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\r\n            this.indexData.parent?.active === true;\r\n    }\r\n    /**\r\n     * @returns Returns length of reduced index.\r\n     */\r\n    get length() {\r\n        return this.indexData.index ? this.indexData.index.length : 0;\r\n    }\r\n    /* c8 ignore start */\r\n    /**\r\n     * @returns Returns reversed state.\r\n     */\r\n    get reversed() { return this.indexData.reversed; }\r\n    /* c8 ignore end */\r\n    /**\r\n     * @param reversed - New reversed state.\r\n     */\r\n    set reversed(reversed) { this.indexData.reversed = reversed; }\r\n    // -------------------------------------------------------------------------------------------------------------------\r\n    /**\r\n     * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\r\n     * is set to null. Set calculated new hash value to the index adapter hash value.\r\n     *\r\n     * After hash generation compare old and new hash values and perform an update if they are different. If they are\r\n     * equal check for array equality between the old and new index array and perform an update if they are not equal.\r\n     *\r\n     * @param oldIndex - Old index array.\r\n     *\r\n     * @param oldHash - Old index hash value.\r\n     *\r\n     * @param [force=false] - When true forces an update to subscribers.\r\n     */\r\n    calcHashUpdate(oldIndex, oldHash, force = false) {\r\n        // Use force if a boolean otherwise default to false.\r\n        const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\r\n        let newHash = null;\r\n        const newIndex = this.indexData.index;\r\n        if (newIndex) {\r\n            for (let cntr = newIndex.length; --cntr >= 0;) {\r\n                newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\r\n            }\r\n        }\r\n        this.indexData.hash = newHash;\r\n        if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true)) {\r\n            this.hostUpdate();\r\n        }\r\n    }\r\n    /**\r\n     * Destroys all resources.\r\n     */\r\n    destroy() {\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n        this.indexData.index = null;\r\n        this.indexData.hash = null;\r\n        this.indexData.reversed = null;\r\n        this.indexData.parent = null;\r\n        this.destroyed = true;\r\n    }\r\n    /**\r\n     * Store associated filter and sort data that are constructed after the indexer.\r\n     *\r\n     * @param filtersData - Associated AdapterFilters instance.\r\n     *\r\n     * @param sortData - Associated AdapterSort instance.\r\n     *\r\n     * @param derivedAdapter - Associated AdapterDerived instance.\r\n     */\r\n    initAdapters(filtersData, sortData, derivedAdapter) {\r\n        this.filtersData = filtersData;\r\n        this.sortData = sortData;\r\n        this.derivedAdapter = derivedAdapter;\r\n        this.sortFn = this.createSortFn();\r\n    }\r\n}\n\n/**\r\n * Provides the storage and sequencing of a managed sort function. The sort function set may be a bespoke function or a\r\n * {@link DataSort} object containing an `compare`, and `subscribe` attributes; `compare` is the only required\r\n * attribute.\r\n *\r\n * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\r\n * If a subscribe function is provided the sort function can notify any updates that may change sort order and this\r\n * triggers an index update.\r\n *\r\n * This class forms the public API which is accessible from the `.sort` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.sort.clear();\r\n * dynArray.sort.set(...);\r\n * ```\r\n */\r\nclass AdapterSort {\r\n    #sortData;\r\n    #indexUpdate;\r\n    #unsubscribe;\r\n    /**\r\n     * @param indexUpdate - Function to update indexer.\r\n     *\r\n     * @param sortData - Storage for compare function.\r\n     */\r\n    constructor(indexUpdate, sortData) {\r\n        this.#indexUpdate = indexUpdate;\r\n        this.#sortData = sortData;\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Clears & removes any assigned sort function and triggers an index update.\r\n     */\r\n    clear() {\r\n        const oldCompareFn = this.#sortData.compareFn;\r\n        this.#sortData.compareFn = null;\r\n        if (typeof this.#unsubscribe === 'function') {\r\n            this.#unsubscribe();\r\n            this.#unsubscribe = void 0;\r\n        }\r\n        // Only update index if an old compare function is set.\r\n        if (typeof oldCompareFn === 'function') {\r\n            this.#indexUpdate();\r\n        }\r\n    }\r\n    /**\r\n     * @param data - A callback function that compares two values. Return > 0 to sort b before a;\r\n     * < 0 to sort a before b; or 0 to keep original order of a & b.\r\n     *\r\n     * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\r\n     *\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\r\n     */\r\n    set(data) {\r\n        if (typeof this.#unsubscribe === 'function') {\r\n            this.#unsubscribe();\r\n            this.#unsubscribe = void 0;\r\n        }\r\n        let compareFn = void 0;\r\n        let subscribeFn = void 0;\r\n        switch (typeof data) {\r\n            case 'function':\r\n                compareFn = data;\r\n                subscribeFn = data.subscribe;\r\n                break;\r\n            case 'object':\r\n                // Early out if data is null / noop.\r\n                if (data === null) {\r\n                    break;\r\n                }\r\n                if (typeof data.compare !== 'function') {\r\n                    throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\r\n                }\r\n                compareFn = data.compare;\r\n                subscribeFn = data.compare.subscribe ?? data.subscribe;\r\n                break;\r\n        }\r\n        if (typeof compareFn === 'function') {\r\n            this.#sortData.compareFn = compareFn;\r\n        }\r\n        else {\r\n            const oldCompareFn = this.#sortData.compareFn;\r\n            this.#sortData.compareFn = null;\r\n            // Update index if the old compare function exists.\r\n            if (typeof oldCompareFn === 'function') {\r\n                this.#indexUpdate();\r\n            }\r\n            return;\r\n        }\r\n        if (typeof subscribeFn === 'function') {\r\n            this.#unsubscribe = subscribeFn(this.#indexUpdate);\r\n            // Ensure that unsubscribe is a function.\r\n            if (typeof this.#unsubscribe !== 'function') {\r\n                throw new Error(`AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\r\n            }\r\n        }\r\n        else {\r\n            // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\r\n            // Only manually update the index if there is no subscriber functionality.\r\n            this.#indexUpdate();\r\n        }\r\n    }\r\n}\n\n/**\r\n * Provides the public API for accessing the index API.\r\n *\r\n * This class forms the public API which is accessible from the `.index` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.index.active;\r\n * dynArray.index.hash;\r\n * dynArray.index.length;\r\n * dynArray.index.update(...);\r\n * ```\r\n */\r\nclass IndexerAPI {\r\n    #indexData;\r\n    /**\r\n     * Provides a getter to determine if the index is active.\r\n     */\r\n    active;\r\n    /**\r\n     * Provides length of reduced / indexed elements.\r\n     */\r\n    length;\r\n    /**\r\n     * Manually invoke an update of the index.\r\n     *\r\n     * @param force - Force update to any subscribers.\r\n     */\r\n    update;\r\n    constructor(adapterIndexer) {\r\n        this.#indexData = adapterIndexer.indexData;\r\n        this.update = adapterIndexer.update.bind(adapterIndexer);\r\n        // Defines getters on the public API to get the index hash, active state, and index length.\r\n        Object.defineProperties(this, {\r\n            active: { get: () => adapterIndexer.active },\r\n            length: { get: () => adapterIndexer.length }\r\n        });\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * - Current hash value of the index.\r\n     */\r\n    get hash() {\r\n        return this.#indexData.hash;\r\n    }\r\n    /**\r\n     * Provides an iterator over the index array.\r\n     *\r\n     * @returns Iterator / generator\r\n     * @yields {K}\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const indexData = this.#indexData;\r\n        if (!indexData.index) {\r\n            return;\r\n        }\r\n        const reversed = indexData.reversed;\r\n        const length = indexData.index.length;\r\n        if (reversed) {\r\n            for (let cntr = length; --cntr >= 0;) {\r\n                yield indexData.index[cntr];\r\n            }\r\n        }\r\n        else {\r\n            for (let cntr = 0; cntr < length; cntr++) {\r\n                yield indexData.index[cntr];\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * Provides the public API for derived reducers. There are several ways to create a derived reducer from utilizing the\r\n * default implementation or passing in a constructor function / class for a custom derived reducer.\r\n *\r\n * This class forms the public API which is accessible from the `.derived` getter in the main reducer implementation.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.derived.clear();\r\n * dynArray.derived.create(...);\r\n * dynArray.derived.delete(...);\r\n * dynArray.derived.destroy();\r\n * dynArray.derived.get(...);\r\n * ```\r\n */\r\nclass DerivedAPI {\r\n    /**\r\n     * Removes all derived reducers and associated subscriptions.\r\n     */\r\n    clear;\r\n    /**\r\n     * @param options - Options for creating a reducer.\r\n     *\r\n     * @returns Newly created derived reducer.\r\n     */\r\n    create;\r\n    /**\r\n     * Deletes and destroys a derived reducer.\r\n     *\r\n     * @param name - Name of the derived reducer\r\n     */\r\n    delete;\r\n    /**\r\n     * Removes all derived reducers, associated subscriptions, and cleans up all resources.\r\n     */\r\n    destroy;\r\n    /**\r\n     * Returns an existing derived reducer.\r\n     *\r\n     * @param name - Name of derived reducer.\r\n     */\r\n    get;\r\n    constructor(adapterDerived) {\r\n        this.clear = adapterDerived.clear.bind(adapterDerived);\r\n        this.create = adapterDerived.create.bind(adapterDerived);\r\n        this.delete = adapterDerived.delete.bind(adapterDerived);\r\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\r\n        this.get = adapterDerived.get.bind(adapterDerived);\r\n        Object.freeze(this);\r\n    }\r\n}\n\n/**\r\n */\r\nclass Indexer$1 extends AdapterIndexer {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    createSortFn() {\r\n        return (a, b) => this.sortData.compareFn(this.hostData[0][a], this.hostData[0][b]);\r\n    }\r\n    /**\r\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\r\n     *\r\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\r\n     * but the maintenance factor is not worth the extra complication.\r\n     *\r\n     * @returns New filtered index array.\r\n     */\r\n    reduceImpl() {\r\n        const data = [];\r\n        const array = this.hostData[0];\r\n        if (!array) {\r\n            return data;\r\n        }\r\n        const filters = this.filtersData.filters;\r\n        let include = true;\r\n        const parentIndex = this.indexData.parent;\r\n        // Source index data is coming from an active parent index.\r\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\r\n            for (const adjustedIndex of parentIndex) {\r\n                const value = array[adjustedIndex];\r\n                include = true;\r\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\r\n                    if (!filters[filCntr].filter(value)) {\r\n                        include = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (include) {\r\n                    data.push(adjustedIndex);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let cntr = 0, length = array.length; cntr < length; cntr++) {\r\n                include = true;\r\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\r\n                    if (!filters[filCntr].filter(array[cntr])) {\r\n                        include = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (include) {\r\n                    data.push(cntr);\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    /**\r\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\r\n     * pass in true to force an update to subscribers.\r\n     *\r\n     * @param [force=false] - When true forces an update to subscribers.\r\n     */\r\n    update(force = false) {\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n        const oldIndex = this.indexData.index;\r\n        const oldHash = this.indexData.hash;\r\n        const array = this.hostData[0];\r\n        const parentIndex = this.indexData.parent;\r\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\r\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\r\n            (this.indexData.index && array?.length !== this.indexData.index.length)) {\r\n            this.indexData.index = null;\r\n        }\r\n        // If there are filters build new index.\r\n        if (this.filtersData.filters.length > 0) {\r\n            this.indexData.index = this.reduceImpl();\r\n        }\r\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\r\n        if (!this.indexData.index && parentIndex?.active) {\r\n            this.indexData.index = [...parentIndex];\r\n        }\r\n        if (this.sortData.compareFn && Array.isArray(array)) {\r\n            // If there is no index then create one with keys matching host item length.\r\n            if (!this.indexData.index) {\r\n                this.indexData.index = [...Array(array.length).keys()];\r\n            }\r\n            this.indexData.index.sort(this.sortFn);\r\n        }\r\n        this.calcHashUpdate(oldIndex, oldHash, force);\r\n        // Update all derived reducers.\r\n        this.derivedAdapter?.update(force);\r\n    }\r\n}\n\n/**\r\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\r\n */\r\nclass DerivedArrayReducer {\r\n    #array;\r\n    #derived;\r\n    #derivedPublicAPI;\r\n    #filters;\r\n    #filtersData = { filters: [] };\r\n    #index;\r\n    #indexPublicAPI;\r\n    #reversed = false;\r\n    #sort;\r\n    #sortData = { compareFn: null };\r\n    #subscriptions = [];\r\n    #destroyed = false;\r\n    /**\r\n     * @param array - Data host array.\r\n     *\r\n     * @param parentIndex - Parent indexer.\r\n     *\r\n     * @param options - Any filters and sort functions to apply.\r\n     */\r\n    constructor(array, parentIndex, options) {\r\n        this.#array = array;\r\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this), parentIndex);\r\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\r\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\r\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\r\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n        let filters = void 0;\r\n        let sort = void 0;\r\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\r\n            if (options.filters !== void 0) {\r\n                if (DynReducerUtils.isIterable(options.filters)) {\r\n                    filters = options.filters;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\r\n                }\r\n            }\r\n            if (options.sort !== void 0) {\r\n                if (typeof options.sort === 'function') {\r\n                    sort = options.sort;\r\n                }\r\n                else if (typeof options.sort === 'object' && options.sort !== null) {\r\n                    sort = options.sort;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\r\n                }\r\n            }\r\n        }\r\n        // Add any filters and sort function defined by DataDynArray.\r\n        if (filters) {\r\n            this.filters.add(...filters);\r\n        }\r\n        if (sort) {\r\n            this.sort.set(sort);\r\n        }\r\n        // Invoke an custom initialization for child classes.\r\n        this.initialize();\r\n    }\r\n    /**\r\n     * Returns the internal data of this instance. Be careful!\r\n     *\r\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\r\n     * performed to the data externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and\r\n     * notify all subscribers.\r\n     *\r\n     * @returns The internal data.\r\n     */\r\n    get data() { return this.#array[0]; }\r\n    /**\r\n     * @returns Derived public API.\r\n     */\r\n    get derived() { return this.#derivedPublicAPI; }\r\n    /**\r\n     * @returns The filters adapter.\r\n     */\r\n    get filters() { return this.#filters; }\r\n    /**\r\n     * Returns the Indexer public API.\r\n     *\r\n     * @returns Indexer API - is also iterable.\r\n     */\r\n    get index() { return this.#indexPublicAPI; }\r\n    /**\r\n     * Returns whether this derived reducer is destroyed.\r\n     */\r\n    get destroyed() { return this.#destroyed; }\r\n    /**\r\n     * @returns Main data / items length or indexed length.\r\n     */\r\n    get length() {\r\n        const array = this.#array[0];\r\n        return this.#index.active ? this.index.length :\r\n            array ? array.length : 0;\r\n    }\r\n    /**\r\n     * @returns Gets current reversed state.\r\n     */\r\n    get reversed() { return this.#reversed; }\r\n    /**\r\n     * @returns The sort adapter.\r\n     */\r\n    get sort() { return this.#sort; }\r\n    /**\r\n     * Sets reversed state and notifies subscribers.\r\n     *\r\n     * @param reversed - New reversed state.\r\n     */\r\n    set reversed(reversed) {\r\n        if (typeof reversed !== 'boolean') {\r\n            throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\r\n        }\r\n        this.#reversed = reversed;\r\n        this.#index.reversed = reversed;\r\n        // Recalculate index and force an update to any subscribers.\r\n        this.index.update(true);\r\n    }\r\n    /**\r\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n     */\r\n    destroy() {\r\n        this.#destroyed = true;\r\n        // Remove any external data reference and perform a final update.\r\n        this.#array = [null];\r\n        this.#index.update(true);\r\n        // Remove all subscriptions.\r\n        this.#subscriptions.length = 0;\r\n        this.#derived.destroy();\r\n        this.#index.destroy();\r\n        this.#filters.clear();\r\n        this.#sort.clear();\r\n    }\r\n    /**\r\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\r\n     * child classes to avoid implementing the constructor.\r\n     *\r\n     * @protected\r\n     */\r\n    initialize() { }\r\n    /**\r\n     * Provides an iterator for data stored in DerivedArrayReducer.\r\n     *\r\n     * @returns Generator / iterator of all data.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const array = this.#array[0];\r\n        if (this.#destroyed || array === null || array?.length === 0) {\r\n            return;\r\n        }\r\n        if (this.#index.active) {\r\n            for (const entry of this.index) {\r\n                yield array[entry];\r\n            }\r\n        }\r\n        else {\r\n            if (this.reversed) {\r\n                for (let cntr = array.length; --cntr >= 0;) {\r\n                    yield array[cntr];\r\n                }\r\n            }\r\n            else {\r\n                for (let cntr = 0; cntr < array.length; cntr++) {\r\n                    yield array[cntr];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // -------------------------------------------------------------------------------------------------------------------\r\n    /**\r\n     * Subscribe to this DerivedArrayReducer.\r\n     *\r\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n     *\r\n     * @returns Unsubscribe function.\r\n     */\r\n    subscribe(handler) {\r\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n        handler(this); // call handler with current value\r\n        // Return unsubscribe function.\r\n        return () => {\r\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n            if (index >= 0) {\r\n                this.#subscriptions.splice(index, 1);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Updates subscribers on changes.\r\n     */\r\n    #updateSubscribers() {\r\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\r\n            this.#subscriptions[cntr](this);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\r\n * Svelte store support.\r\n */\r\nclass DynArrayReducer {\r\n    #array = [null];\r\n    #derived;\r\n    #derivedPublicAPI;\r\n    #filters;\r\n    #filtersData = { filters: [] };\r\n    #index;\r\n    #indexPublicAPI;\r\n    #reversed = false;\r\n    #sort;\r\n    #sortData = { compareFn: null };\r\n    #subscriptions = [];\r\n    #destroyed = false;\r\n    /**\r\n     * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\r\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\r\n     *\r\n     * @param [data] - Data iterable to store if array or copy otherwise.\r\n     */\r\n    constructor(data) {\r\n        let dataIterable = void 0;\r\n        let filters = void 0;\r\n        let sort = void 0;\r\n        if (data === null) {\r\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\r\n        }\r\n        if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data)) {\r\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\r\n        }\r\n        if (data !== void 0 && Symbol.iterator in data) {\r\n            dataIterable = data;\r\n        }\r\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\r\n            if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data)) {\r\n                throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\r\n            }\r\n            dataIterable = data.data;\r\n            if (data.filters !== void 0) {\r\n                if (DynReducerUtils.isIterable(data.filters)) {\r\n                    filters = data.filters;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\r\n                }\r\n            }\r\n            if (data.sort !== void 0) {\r\n                if (typeof data.sort === 'function') {\r\n                    sort = data.sort;\r\n                }\r\n                else if (typeof data.sort === 'object' && data.sort !== null) {\r\n                    sort = data.sort;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\r\n                }\r\n            }\r\n        }\r\n        // In the case of the main data being an array directly use the array otherwise create a copy.\r\n        if (dataIterable) {\r\n            this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\r\n        }\r\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this));\r\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\r\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\r\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\r\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n        // Add any filters and sort function defined by DataDynArray.\r\n        if (filters) {\r\n            this.filters.add(...filters);\r\n        }\r\n        if (sort) {\r\n            this.sort.set(sort);\r\n        }\r\n        // Invoke an custom initialization for child classes.\r\n        this.initialize();\r\n    }\r\n    /**\r\n     * Returns the internal data of this instance. Be careful!\r\n     *\r\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\r\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\r\n     * index and notify all subscribers.\r\n     *\r\n     * @returns The internal data.\r\n     */\r\n    get data() { return this.#array[0]; }\r\n    /**\r\n     * @returns Derived public API.\r\n     */\r\n    get derived() { return this.#derivedPublicAPI; }\r\n    /**\r\n     * @returns The filters adapter.\r\n     */\r\n    get filters() { return this.#filters; }\r\n    /**\r\n     * @returns Returns the Indexer public API.\r\n     */\r\n    get index() { return this.#indexPublicAPI; }\r\n    /**\r\n     * Returns whether this instance is destroyed.\r\n     */\r\n    get destroyed() { return this.#destroyed; }\r\n    /**\r\n     * Gets the main data / items length.\r\n     *\r\n     * @returns {number} Main data / items length.\r\n     */\r\n    get length() {\r\n        const array = this.#array[0];\r\n        return this.#index.active ? this.#indexPublicAPI.length :\r\n            array ? array.length : 0;\r\n    }\r\n    /**\r\n     * Gets current reversed state.\r\n     *\r\n     * @returns {boolean} Reversed state.\r\n     */\r\n    get reversed() { return this.#reversed; }\r\n    /**\r\n     * @returns The sort adapter.\r\n     */\r\n    get sort() { return this.#sort; }\r\n    /**\r\n     * Sets reversed state and notifies subscribers.\r\n     *\r\n     * @param reversed - New reversed state.\r\n     */\r\n    set reversed(reversed) {\r\n        if (typeof reversed !== 'boolean') {\r\n            throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\r\n        }\r\n        this.#reversed = reversed;\r\n        this.#index.reversed = reversed;\r\n        // Recalculate index and force an update to any subscribers.\r\n        this.index.update(true);\r\n    }\r\n    /**\r\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n     */\r\n    destroy() {\r\n        if (this.#destroyed) {\r\n            return;\r\n        }\r\n        this.#destroyed = true;\r\n        this.#derived.destroy();\r\n        // Set the backing data to null and provide a final update.\r\n        this.#array = [null];\r\n        this.index.update(true);\r\n        // Remove all subscriptions.\r\n        this.#subscriptions.length = 0;\r\n        this.#index.destroy();\r\n        this.#filters.clear();\r\n        this.#sort.clear();\r\n    }\r\n    /**\r\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\r\n     * child classes to avoid implementing the constructor.\r\n     *\r\n     * @protected\r\n     */\r\n    initialize() { }\r\n    /**\r\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\r\n     * `replace` is set to true.\r\n     *\r\n     * @param data - New data to set to internal data.\r\n     *\r\n     * @param replace=false - New data to set to internal data.\r\n     */\r\n    setData(data, replace = false) {\r\n        if (data !== null && !DynReducerUtils.isIterable(data)) {\r\n            throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\r\n        }\r\n        if (typeof replace !== 'boolean') {\r\n            throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\r\n        }\r\n        const array = this.#array[0];\r\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\r\n        // from an iterable.\r\n        if (!Array.isArray(array) || replace) {\r\n            if (data) {\r\n                this.#array[0] = Array.isArray(data) ? data : [...data];\r\n            }\r\n        }\r\n        else {\r\n            if (data) {\r\n                // Remove all entries in internal data. This will not replace any initially set array.\r\n                array.length = 0;\r\n                // Add all new data.\r\n                array.push(...data);\r\n            }\r\n            else {\r\n                this.#array[0] = null;\r\n            }\r\n        }\r\n        // Recalculate index and force an update to any subscribers.\r\n        this.index.update(true);\r\n    }\r\n    /**\r\n     * Add a subscriber to this DynArrayReducer instance.\r\n     *\r\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n     *\r\n     * @returns Unsubscribe function.\r\n     */\r\n    subscribe(handler) {\r\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n        handler(this); // call handler with current value\r\n        // Return unsubscribe function.\r\n        return () => {\r\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n            if (index >= 0) {\r\n                this.#subscriptions.splice(index, 1);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Updates subscribers on changes.\r\n     */\r\n    #updateSubscribers() {\r\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\r\n            this.#subscriptions[cntr](this);\r\n        }\r\n    }\r\n    /**\r\n     * Provides an iterator for data stored in DynArrayReducer.\r\n     *\r\n     * @returns Generator / iterator of all data.\r\n     * @yields {T}\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const array = this.#array[0];\r\n        if (this.#destroyed || array === null || array?.length === 0) {\r\n            return;\r\n        }\r\n        if (this.#index.active) {\r\n            for (const entry of this.index) {\r\n                yield array[entry];\r\n            }\r\n        }\r\n        else {\r\n            if (this.reversed) {\r\n                for (let cntr = array.length; --cntr >= 0;) {\r\n                    yield array[cntr];\r\n                }\r\n            }\r\n            else {\r\n                for (let cntr = 0; cntr < array.length; cntr++) {\r\n                    yield array[cntr];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n */\r\nclass Indexer extends AdapterIndexer {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    createSortFn() {\r\n        return (a, b) => this.sortData.compareFn(this.hostData[0].get(a), this.hostData[0].get(b));\r\n    }\r\n    /**\r\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\r\n     *\r\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\r\n     * but the maintenance factor is not worth the extra complication.\r\n     *\r\n     * @returns New filtered index array.\r\n     */\r\n    reduceImpl() {\r\n        const data = [];\r\n        const map = this.hostData[0];\r\n        if (!map) {\r\n            return data;\r\n        }\r\n        const filters = this.filtersData.filters;\r\n        let include = true;\r\n        const parentIndex = this.indexData.parent;\r\n        // Source index data is coming from an active parent index.\r\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\r\n            for (const key of parentIndex) {\r\n                const value = map.get(key);\r\n                include = true;\r\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\r\n                    if (!filters[filCntr].filter(value)) {\r\n                        include = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (include) {\r\n                    data.push(key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key of map.keys()) {\r\n                include = true;\r\n                const value = map.get(key);\r\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\r\n                    if (!filters[filCntr].filter(value)) {\r\n                        include = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (include) {\r\n                    data.push(key);\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    /**\r\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\r\n     * pass in true to force an update to subscribers.\r\n     *\r\n     * @param [force=false] - When true forces an update to subscribers.\r\n     */\r\n    update(force = false) {\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n        const oldIndex = this.indexData.index;\r\n        const oldHash = this.indexData.hash;\r\n        const map = this.hostData[0];\r\n        const parentIndex = this.indexData.parent;\r\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\r\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\r\n            (this.indexData.index && map?.size !== this.indexData.index.length)) {\r\n            this.indexData.index = null;\r\n        }\r\n        // If there are filters build new index.\r\n        if (this.filtersData.filters.length > 0) {\r\n            this.indexData.index = this.reduceImpl();\r\n        }\r\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\r\n        if (!this.indexData.index && parentIndex?.active) {\r\n            this.indexData.index = [...parentIndex];\r\n        }\r\n        if (this.sortData.compareFn && map instanceof Map) {\r\n            // If there is no index then create one with keys matching host item length.\r\n            if (!this.indexData.index) {\r\n                this.indexData.index = this.indexData.index = [...map.keys()];\r\n            }\r\n            this.indexData.index.sort(this.sortFn);\r\n        }\r\n        this.calcHashUpdate(oldIndex, oldHash, force);\r\n        // Update all derived reducers.\r\n        this.derivedAdapter?.update(force);\r\n    }\r\n}\n\n/**\r\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\r\n */\r\nclass DerivedMapReducer {\r\n    #map;\r\n    #derived;\r\n    #derivedPublicAPI;\r\n    #filters;\r\n    #filtersData = { filters: [] };\r\n    #index;\r\n    #indexPublicAPI;\r\n    #reversed = false;\r\n    #sort;\r\n    #sortData = { compareFn: null };\r\n    #subscriptions = [];\r\n    #destroyed = false;\r\n    /**\r\n     * @param map - Data host Map.\r\n     *\r\n     * @param parentIndex - Parent indexer.\r\n     *\r\n     * @param options - Any filters and sort functions to apply.\r\n     */\r\n    constructor(map, parentIndex, options) {\r\n        this.#map = map;\r\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\r\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\r\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\r\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\r\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n        let filters = void 0;\r\n        let sort = void 0;\r\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\r\n            if (options.filters !== void 0) {\r\n                if (DynReducerUtils.isIterable(options.filters)) {\r\n                    filters = options.filters;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\r\n                }\r\n            }\r\n            if (options.sort !== void 0) {\r\n                if (typeof options.sort === 'function') {\r\n                    sort = options.sort;\r\n                }\r\n                else if (typeof options.sort === 'object' && options.sort !== null) {\r\n                    sort = options.sort;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\r\n                }\r\n            }\r\n        }\r\n        // Add any filters and sort function defined by DataDynArray.\r\n        if (filters) {\r\n            this.filters.add(...filters);\r\n        }\r\n        if (sort) {\r\n            this.sort.set(sort);\r\n        }\r\n        // Invoke an custom initialization for child classes.\r\n        this.initialize();\r\n    }\r\n    /**\r\n     * Returns the internal data of this instance. Be careful!\r\n     *\r\n     * Note: The returned map is the same map set by the main reducer. If any changes are performed to the data\r\n     * externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and notify all subscribers.\r\n     *\r\n     * @returns The internal data.\r\n     */\r\n    get data() { return this.#map[0]; }\r\n    /**\r\n     * @returns Derived public API.\r\n     */\r\n    get derived() { return this.#derivedPublicAPI; }\r\n    /**\r\n     * @returns The filters adapter.\r\n     */\r\n    get filters() { return this.#filters; }\r\n    /**\r\n     * Returns the Indexer public API.\r\n     *\r\n     * @returns Indexer API - is also iterable.\r\n     */\r\n    get index() { return this.#indexPublicAPI; }\r\n    /**\r\n     * Returns whether this derived reducer is destroyed.\r\n     */\r\n    get destroyed() { return this.#destroyed; }\r\n    /**\r\n     * @returns Main data / items length or indexed length.\r\n     */\r\n    get length() {\r\n        const map = this.#map[0];\r\n        return this.#index.active ? this.index.length :\r\n            map ? map.size : 0;\r\n    }\r\n    /**\r\n     * @returns Gets current reversed state.\r\n     */\r\n    get reversed() { return this.#reversed; }\r\n    /**\r\n     * @returns The sort adapter.\r\n     */\r\n    get sort() { return this.#sort; }\r\n    /**\r\n     * Sets reversed state and notifies subscribers.\r\n     *\r\n     * @param reversed - New reversed state.\r\n     */\r\n    set reversed(reversed) {\r\n        if (typeof reversed !== 'boolean') {\r\n            throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\r\n        }\r\n        this.#reversed = reversed;\r\n        this.#index.reversed = reversed;\r\n        // Recalculate index and force an update to any subscribers.\r\n        this.index.update(true);\r\n    }\r\n    /**\r\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n     */\r\n    destroy() {\r\n        this.#destroyed = true;\r\n        // Remove any external data reference and perform a final update.\r\n        this.#map = [null];\r\n        this.#index.update(true);\r\n        // Remove all subscriptions.\r\n        this.#subscriptions.length = 0;\r\n        this.#derived.destroy();\r\n        this.#index.destroy();\r\n        this.#filters.clear();\r\n        this.#sort.clear();\r\n    }\r\n    /**\r\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\r\n     * child classes to avoid implementing the constructor.\r\n     *\r\n     * @protected\r\n     */\r\n    initialize() { }\r\n    /**\r\n     * Provides an iterator for data stored in DerivedMapReducer.\r\n     *\r\n     * @returns Generator / iterator of all data.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const map = this.#map[0];\r\n        if (this.#destroyed || map === null || map?.size === 0) {\r\n            return;\r\n        }\r\n        if (this.#index.active) {\r\n            for (const key of this.index) {\r\n                yield map.get(key);\r\n            }\r\n        }\r\n        else {\r\n            if (this.reversed) {\r\n                // TODO: Not efficient due to creating temporary values array.\r\n                const values = [...map.values()];\r\n                for (let cntr = values.length; --cntr >= 0;) {\r\n                    yield values[cntr];\r\n                }\r\n            }\r\n            else {\r\n                for (const value of map.values()) {\r\n                    yield value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // -------------------------------------------------------------------------------------------------------------------\r\n    /**\r\n     * Subscribe to this DerivedMapReducer.\r\n     *\r\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n     *\r\n     * @returns Unsubscribe function.\r\n     */\r\n    subscribe(handler) {\r\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n        handler(this); // call handler with current value\r\n        // Return unsubscribe function.\r\n        return () => {\r\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n            if (index >= 0) {\r\n                this.#subscriptions.splice(index, 1);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Updates subscribers on changes.\r\n     */\r\n    #updateSubscribers() {\r\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\r\n            this.#subscriptions[cntr](this);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Provides a managed Map with non-destructive reducing / filtering / sorting capabilities with subscription /\r\n * Svelte store support.\r\n */\r\nclass DynMapReducer {\r\n    #map = [null];\r\n    #derived;\r\n    #derivedPublicAPI;\r\n    #filters;\r\n    #filtersData = { filters: [] };\r\n    #index;\r\n    #indexPublicAPI;\r\n    #reversed = false;\r\n    #sort;\r\n    #sortData = { compareFn: null };\r\n    #subscriptions = [];\r\n    #destroyed = false;\r\n    /**\r\n     * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\r\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\r\n     *\r\n     * @param [data] - Data iterable to store if array or copy otherwise.\r\n     */\r\n    constructor(data) {\r\n        let dataMap = void 0;\r\n        let filters = void 0;\r\n        let sort = void 0;\r\n        if (data === null) {\r\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\r\n        }\r\n        if (data !== void 0 && typeof data !== 'object' && !(data instanceof Map)) {\r\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\r\n        }\r\n        if (data !== void 0 && data instanceof Map) {\r\n            dataMap = data;\r\n        }\r\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\r\n            if (data.data !== void 0 && !(data.data instanceof Map)) {\r\n                throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\r\n            }\r\n            dataMap = data.data;\r\n            if (data.filters !== void 0) {\r\n                if (DynReducerUtils.isIterable(data.filters)) {\r\n                    filters = data.filters;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\r\n                }\r\n            }\r\n            if (data.sort !== void 0) {\r\n                if (typeof data.sort === 'function') {\r\n                    sort = data.sort;\r\n                }\r\n                else if (typeof data.sort === 'object' && data.sort !== null) {\r\n                    sort = data.sort;\r\n                }\r\n                else {\r\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\r\n                }\r\n            }\r\n        }\r\n        // In the case of the main data being an array directly use the array otherwise create a copy.\r\n        if (dataMap) {\r\n            this.#map[0] = dataMap;\r\n        }\r\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this));\r\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\r\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\r\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\r\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\r\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\r\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\r\n        // Add any filters and sort function defined by DataDynMap.\r\n        if (filters) {\r\n            this.filters.add(...filters);\r\n        }\r\n        if (sort) {\r\n            this.sort.set(sort);\r\n        }\r\n        // Invoke an custom initialization for child classes.\r\n        this.initialize();\r\n    }\r\n    /**\r\n     * Returns the internal data of this instance. Be careful!\r\n     *\r\n     * Note: When a map is set as data then that map is used as the internal data. If any changes are\r\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\r\n     * index and notify all subscribers.\r\n     *\r\n     * @returns The internal data.\r\n     */\r\n    get data() { return this.#map[0]; }\r\n    /**\r\n     * @returns Derived public API.\r\n     */\r\n    get derived() { return this.#derivedPublicAPI; }\r\n    /**\r\n     * @returns The filters adapter.\r\n     */\r\n    get filters() { return this.#filters; }\r\n    /**\r\n     * @returns Returns the Indexer public API.\r\n     */\r\n    get index() { return this.#indexPublicAPI; }\r\n    /**\r\n     * Returns whether this instance is destroyed.\r\n     */\r\n    get destroyed() { return this.#destroyed; }\r\n    /**\r\n     * Gets the main data / items length.\r\n     *\r\n     * @returns {number} Main data / items length.\r\n     */\r\n    get length() {\r\n        const map = this.#map[0];\r\n        return this.#index.active ? this.#indexPublicAPI.length :\r\n            map ? map.size : 0;\r\n    }\r\n    /**\r\n     * Gets current reversed state.\r\n     *\r\n     * @returns {boolean} Reversed state.\r\n     */\r\n    get reversed() { return this.#reversed; }\r\n    /**\r\n     * @returns The sort adapter.\r\n     */\r\n    get sort() { return this.#sort; }\r\n    /**\r\n     * Sets reversed state and notifies subscribers.\r\n     *\r\n     * @param reversed - New reversed state.\r\n     */\r\n    set reversed(reversed) {\r\n        if (typeof reversed !== 'boolean') {\r\n            throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\r\n        }\r\n        this.#reversed = reversed;\r\n        this.#index.reversed = reversed;\r\n        // Recalculate index and force an update to any subscribers.\r\n        this.index.update(true);\r\n    }\r\n    /**\r\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\r\n     */\r\n    destroy() {\r\n        if (this.#destroyed) {\r\n            return;\r\n        }\r\n        this.#destroyed = true;\r\n        this.#derived.destroy();\r\n        // Set the backing data to null and provide a final update.\r\n        this.#map = [null];\r\n        this.index.update(true);\r\n        // Remove all subscriptions.\r\n        this.#subscriptions.length = 0;\r\n        this.#index.destroy();\r\n        this.#filters.clear();\r\n        this.#sort.clear();\r\n    }\r\n    /**\r\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\r\n     * child classes to avoid implementing the constructor.\r\n     *\r\n     * @protected\r\n     */\r\n    initialize() { }\r\n    /**\r\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\r\n     * `replace` is set to true.\r\n     *\r\n     * @param data - New data to set to internal data.\r\n     *\r\n     * @param replace=false - New data to set to internal data.\r\n     */\r\n    setData(data, replace = false) {\r\n        if (data !== null && !(data instanceof Map)) {\r\n            throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\r\n        }\r\n        if (typeof replace !== 'boolean') {\r\n            throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\r\n        }\r\n        const map = this.#map[0];\r\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\r\n        // from an iterable.\r\n        if (!(map instanceof Map) || replace) {\r\n            this.#map[0] = data instanceof Map ? data : null;\r\n        }\r\n        else if (data instanceof Map && map instanceof Map) {\r\n            // Create a set of all current entry IDs.\r\n            const removeKeySet = new Set(map.keys());\r\n            for (const key of data.keys()) {\r\n                map.set(key, data.get(key));\r\n                if (removeKeySet.has(key)) {\r\n                    removeKeySet.delete(key);\r\n                }\r\n            }\r\n            // Remove entries that are no longer in data.\r\n            for (const key of removeKeySet) {\r\n                map.delete(key);\r\n            }\r\n        }\r\n        else if (data === null) {\r\n            this.#map[0] = null;\r\n        }\r\n        // Recalculate index and force an update to any subscribers.\r\n        this.index.update(true);\r\n    }\r\n    /**\r\n     * Add a subscriber to this DynMapReducer instance.\r\n     *\r\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\r\n     *\r\n     * @returns Unsubscribe function.\r\n     */\r\n    subscribe(handler) {\r\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n        handler(this); // call handler with current value\r\n        // Return unsubscribe function.\r\n        return () => {\r\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n            if (index >= 0) {\r\n                this.#subscriptions.splice(index, 1);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Updates subscribers on changes.\r\n     */\r\n    #updateSubscribers() {\r\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\r\n            this.#subscriptions[cntr](this);\r\n        }\r\n    }\r\n    /**\r\n     * Provides an iterator for data stored in DynMapReducer.\r\n     *\r\n     * @returns Generator / iterator of all data.\r\n     * @yields {T}\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const map = this.#map[0];\r\n        if (this.#destroyed || map === null || map?.size === 0) {\r\n            return;\r\n        }\r\n        if (this.#index.active) {\r\n            for (const key of this.index) {\r\n                yield map.get(key);\r\n            }\r\n        }\r\n        else {\r\n            if (this.reversed) {\r\n                // TODO: Not efficient due to creating temporary values array.\r\n                const values = [...map.values()];\r\n                for (let cntr = values.length; --cntr >= 0;) {\r\n                    yield values[cntr];\r\n                }\r\n            }\r\n            else {\r\n                for (const value of map.values()) {\r\n                    yield value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\nexport { DerivedArrayReducer, DerivedMapReducer, DynArrayReducer, DynMapReducer };\n//# sourceMappingURL=index.js.map\n","import { isIterable } from '@typhonjs-svelte/lib/util';\r\n\r\n/**\r\n * Provides a readable store to track keys actively pressed. KeyStore is designed to be used with the {@link keyforward}\r\n * action.\r\n */\r\nexport class KeyStore\r\n{\r\n   #keySet;\r\n\r\n   /**\r\n    * @type {Map<string, number>}\r\n    */\r\n   #keyMap = new Map();\r\n\r\n   /**\r\n    * @type {KeyStoreOptions}\r\n    */\r\n   #options = { preventDefault: true, useCode: true, stopPropagation: true };\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(KeyStore): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @param {Iterable<string>}  [keyNames] -\r\n    *\r\n    * @param {KeyStoreOptions}   [options] - Optional parameters\r\n    */\r\n   constructor(keyNames, options)\r\n   {\r\n      if (!isIterable(keyNames))\r\n      {\r\n         throw new TypeError(`'keyNames' is not an iterable list.`);\r\n      }\r\n\r\n      this.setOptions(options);\r\n\r\n      this.#keySet = new Set(keyNames);\r\n   }\r\n\r\n   /**\r\n    * Add given key to the tracking key set.\r\n    *\r\n    * @param {string}   key - Key to add.\r\n    */\r\n   addKey(key)\r\n   {\r\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\r\n\r\n      this.#keySet.add(key);\r\n   }\r\n\r\n   /**\r\n    * @returns {boolean} True if any keys in the key set are pressed.\r\n    */\r\n\r\n   /**\r\n    * Returns true if any of given keys are pressed. If `keys` is undefined then the result is true if any keys being\r\n    * tracked are pressed.\r\n    *\r\n    * @param {string|Iterable<string>|undefined} keys - Zero or more key strings or list to verify if any pressed.\r\n    *\r\n    * @returns {boolean} True if any keys set are pressed.\r\n    */\r\n   anyPressed(keys)\r\n   {\r\n      // When no keys given then check if any key is pressed.\r\n      if (keys === void 0) { return this.#keyMap.size > 0; }\r\n\r\n      const isList = isIterable(keys);\r\n\r\n      if (typeof keys !== 'string' && !isList)\r\n      {\r\n         throw new TypeError(`'keys' is not a string or iterable list of strings.`);\r\n      }\r\n\r\n      let result = false;\r\n\r\n      if (isList)\r\n      {\r\n         for (const key of keys)\r\n         {\r\n            if (this.#keyMap.has(key))\r\n            {\r\n               result = true;\r\n               break;\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         if (this.#keyMap.has(keys)) { result = true; }\r\n      }\r\n\r\n      return result;\r\n   }\r\n\r\n   /**\r\n    * Is the given key in the tracking key set.\r\n    *\r\n    * @param {string}   key - Key to check.\r\n    */\r\n   hasKey(key)\r\n   {\r\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\r\n\r\n      this.#keySet.has(key);\r\n   }\r\n\r\n   /**\r\n    * Returns true if all given keys are pressed.\r\n    *\r\n    * @param {string|Iterable<string>} keys - One or more key strings to verify if pressed.\r\n    *\r\n    * @returns {boolean} Are all keys pressed.\r\n    */\r\n   isPressed(keys)\r\n   {\r\n      const isList = isIterable(keys);\r\n\r\n      if (typeof keys !== 'string' && !isList)\r\n      {\r\n         throw new TypeError(`'keys' is not a string or iterable list of strings.`);\r\n      }\r\n\r\n      let result = true;\r\n\r\n      if (isList)\r\n      {\r\n         for (const key of keys)\r\n         {\r\n            if (!this.#keyMap.has(key))\r\n            {\r\n               result = false;\r\n               break;\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         if (!this.#keyMap.has(keys)) { result = false; }\r\n      }\r\n\r\n      return result;\r\n   }\r\n\r\n   /**\r\n    * Handle keydown event adding any key from the tracked key set.\r\n    *\r\n    * @param {KeyboardEvent}  event - KeyboardEvent.\r\n    */\r\n   keydown(event)\r\n   {\r\n      const key = this.#options.useCode ? event.code : event.key;\r\n\r\n      if (this.#keySet.has(key))\r\n      {\r\n         if (!this.#keyMap.has(key))\r\n         {\r\n            this.#keyMap.set(key, 1);\r\n            this._updateSubscribers();\r\n         }\r\n\r\n         if (this.#options.preventDefault) { event.preventDefault(); }\r\n         if (this.#options.stopPropagation) { event.stopPropagation(); }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {IterableIterator<string>} Returns current pressed keys iterator.\r\n    */\r\n   keysPressed()\r\n   {\r\n      return this.#keyMap.keys();\r\n   }\r\n\r\n   /**\r\n    * @returns {IterableIterator<string>} Returns currently tracked keys iterator.\r\n    */\r\n   keysTracked()\r\n   {\r\n      return this.#keySet.keys();\r\n   }\r\n\r\n   /**\r\n    * Handle keyup event removing any key from the tracked key set.\r\n    *\r\n    * @param {KeyboardEvent}  event - KeyboardEvent.\r\n    */\r\n   keyup(event)\r\n   {\r\n      const key = this.#options.useCode ? event.code : event.key;\r\n\r\n      if (this.#keySet.has(key))\r\n      {\r\n         if (this.#keyMap.has(key))\r\n         {\r\n            this.#keyMap.delete(key);\r\n            this._updateSubscribers();\r\n         }\r\n\r\n         if (this.#options.preventDefault) { event.preventDefault(); }\r\n         if (this.#options.stopPropagation) { event.stopPropagation(); }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Remove the given key from the tracking key set.\r\n    *\r\n    * @param {string}   key - Key to remove.\r\n    */\r\n   removeKey(key)\r\n   {\r\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\r\n\r\n      if (this.#keySet.has(key))\r\n      {\r\n         this.#keySet.delete(key);\r\n\r\n         if (this.#keyMap.has(key))\r\n         {\r\n            this.#keyMap.delete(key);\r\n            this._updateSubscribers();\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Update options.\r\n    *\r\n    * @param {KeyStoreOptions}   options - Options to set.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (typeof options?.preventDefault === 'boolean') { this.#options.preventDefault = options.preventDefault; }\r\n      if (typeof options?.useCode === 'boolean') { this.#options.useCode = options.useCode; }\r\n      if (typeof options?.stopPropagation === 'boolean') { this.#options.stopPropagation = options.stopPropagation; }\r\n   }\r\n\r\n   /**\r\n    * @param {string}   key - key or key code to lookup.\r\n    *\r\n    * @returns {number} 1 if currently pressed and 0 if not pressed.\r\n    */\r\n   value(key)\r\n   {\r\n      return this.#keyMap.has(key) ? 1 : 0;\r\n   }\r\n\r\n   // Store subscriber implementation --------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @param {function(KeyStore): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers.\r\n    *\r\n    * @protected\r\n    */\r\n   _updateSubscribers()\r\n   {\r\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](this); }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} KeyStoreOptions\r\n *\r\n * @property {boolean}  [preventDefault=true] - Invoke `preventDefault` on key events.\r\n *\r\n * @property {boolean}  [useCode=true] - When true use `event.code` otherwise use `event.key` to get active key.\r\n *\r\n * @property {boolean}  [stopPropagation=true] - Invoke `stopPropagation` on key events.\r\n */\r\n","// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/local.ts\nvar storage = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/local';\r\n\r\nexport class TJSLocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, import('svelte/store').Writable>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new writable store for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The new store.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = localStorage.getItem(key);\r\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the stores Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = TJSLocalStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         try\r\n         {\r\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\r\n         }\r\n         catch (err)\r\n         {\r\n            value = defaultValue;\r\n         }\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         try\r\n         {\r\n            const newValue = JSON.stringify(defaultValue);\r\n\r\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n            localStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\r\n         }\r\n         catch (err) { /* */ }\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(localStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/session';\r\n\r\nexport class TJSSessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, import('svelte/store').Writable>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Creates a new store for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The new store.\r\n    */\r\n   static #createStore(key, defaultValue = void 0)\r\n   {\r\n      try\r\n      {\r\n         const value = sessionStorage.getItem(key);\r\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @param {string}               key - Key to lookup in stores map.\r\n    *\r\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0)\r\n   {\r\n      let store = this.#stores.get(key);\r\n      if (store === void 0)\r\n      {\r\n         store = TJSSessionStorage.#createStore(key, defaultValue);\r\n         this.#stores.set(key, store);\r\n      }\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         try\r\n         {\r\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\r\n         }\r\n         catch (err)\r\n         {\r\n            value = defaultValue;\r\n         }\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         try\r\n         {\r\n            const newValue = JSON.stringify(defaultValue);\r\n\r\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n            sessionStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\r\n         }\r\n         catch (err) { /* */ }\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {import('svelte/store').Writable} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return this.#getStore(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionStorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionStorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!JSON.parse(sessionStorage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n","/**\r\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\r\n * function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isReadableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * function and an `update` function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isUpdatableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * `set`, and `update` functions.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isWritableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with the update function provided and ignores the first automatic\r\n * update. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} update - function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeIgnoreFirst(store, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) =>\r\n   {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n      }\r\n      else\r\n      {\r\n         update(value);\r\n      }\r\n   });\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\r\n * subscription. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} first - Function to receive first update.\r\n *\r\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeFirstRest(store, first, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) =>\r\n   {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n         first(value);\r\n      }\r\n      else\r\n      {\r\n         update(value);\r\n      }\r\n   });\r\n}\r\n","import { derived, get } from \"svelte/store\";\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function} reflect Called when the derived store gets a new value via its `set` or\n * `update` methods, and determines new values for the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nexport default function writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = reflect.length >= 2;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tfunction doReflect(reflecting) {\n\t\tvar setWith = reflect(reflecting, originValues);\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\nexport { writableDerived };\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nexport function propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t(reflecting, object) => {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reflecting, object) => {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t}\n}"],"names":["ogWritable","ogGet","storage","g","writable"],"mappings":"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"}