{"version":3,"file":"index.js","sources":["../../node_modules/@typhonjs-utils/dyn-array-reducer/dist/DynArrayReducer.js","../../src/store/functions.js","../../node_modules/svelte-persistent-store/dist/chunk.PXUOYU5R.mjs","../../node_modules/svelte-persistent-store/dist/chunk.W4AS553O.mjs","../../src/store/LocalStorage.js","../../node_modules/svelte-persistent-store/dist/chunk.QQJ3JZYS.mjs","../../src/store/SessionStorage.js","../../node_modules/svelte-writable-derived/index.mjs"],"sourcesContent":["/**\r\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\r\n * {@link FilterData} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\r\n * attribute.\r\n *\r\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\r\n * allows filters to be removed by ID easily.\r\n *\r\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\r\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\r\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\r\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\r\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\r\n *\r\n * This class forms the public API which is accessible from the `.filters` getter in the main DynArrayReducer instance.\r\n * ```\r\n * const dynArray = new DynArrayReducer([...]);\r\n * dynArray.filters.add(...);\r\n * dynArray.filters.clear();\r\n * dynArray.filters.length;\r\n * dynArray.filters.remove(...);\r\n * dynArray.filters.removeBy(...);\r\n * dynArray.filters.removeById(...);\r\n * ```\r\n *\r\n * @template T\r\n */\r\nclass AdapterFilters\r\n{\r\n   #filtersAdapter;\r\n   #indexUpdate;\r\n   #mapUnsubscribe = new Map();\r\n\r\n   /**\r\n    * @param {Function} indexUpdate - update function for the indexer.\r\n    *\r\n    * @returns {[AdapterFilters<T>, {filters: FilterData<T>[]}]} Returns this and internal storage for filter adapters.\r\n    */\r\n   constructor(indexUpdate)\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#filtersAdapter = { filters: [] };\r\n\r\n      Object.seal(this);\r\n\r\n      return [this, this.#filtersAdapter];\r\n   }\r\n\r\n   /**\r\n    * @returns {number} Returns the length of the\r\n    */\r\n   get length() { return this.#filtersAdapter.filters.length; }\r\n\r\n   /**\r\n    * Provides an iterator for filters.\r\n    *\r\n    * @returns {Generator<number|undefined, FilterData<T>, *>} Generator / iterator of filters.\r\n    * @yields {FilterData<T>}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      if (this.#filtersAdapter.filters.length === 0) { return; }\r\n\r\n      for (const entry of this.#filtersAdapter.filters)\r\n      {\r\n         yield { ...entry };\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\r\n    */\r\n   add(...filters)\r\n   {\r\n      /**\r\n       * Tracks the number of filters added that have subscriber functionality.\r\n       *\r\n       * @type {number}\r\n       */\r\n      let subscribeCount = 0;\r\n\r\n      for (const filter of filters)\r\n      {\r\n         const filterType = typeof filter;\r\n\r\n         if (filterType !== 'function' && filterType !== 'object' || filter === null)\r\n         {\r\n            throw new TypeError(`DynArrayReducer error: 'filter' is not a function or object.`);\r\n         }\r\n\r\n         let data = void 0;\r\n         let subscribeFn = void 0;\r\n\r\n         switch (filterType)\r\n         {\r\n            case 'function':\r\n               data = {\r\n                  id: void 0,\r\n                  filter,\r\n                  weight: 1\r\n               };\r\n\r\n               subscribeFn = filter.subscribe;\r\n               break;\r\n\r\n            case 'object':\r\n               if (typeof filter.filter !== 'function')\r\n               {\r\n                  throw new TypeError(`DynArrayReducer error: 'filter' attribute is not a function.`);\r\n               }\r\n\r\n               if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\r\n                (filter.weight < 0 || filter.weight > 1))\r\n               {\r\n                  throw new TypeError(\r\n                   `DynArrayReducer error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\r\n               }\r\n\r\n               data = {\r\n                  id: filter.id !== void 0 ? filter.id : void 0,\r\n                  filter: filter.filter,\r\n                  weight: filter.weight || 1\r\n               };\r\n\r\n               subscribeFn = filter.filter.subscribe ?? filter.subscribe;\r\n               break;\r\n         }\r\n\r\n         // Find the index to insert where data.weight is less than existing values weight.\r\n         const index = this.#filtersAdapter.filters.findIndex((value) =>\r\n         {\r\n            return data.weight < value.weight;\r\n         });\r\n\r\n         // If an index was found insert at that location.\r\n         if (index >= 0)\r\n         {\r\n            this.#filtersAdapter.filters.splice(index, 0, data);\r\n         }\r\n         else // push to end of filters.\r\n         {\r\n            this.#filtersAdapter.filters.push(data);\r\n         }\r\n\r\n         if (typeof subscribeFn === 'function')\r\n         {\r\n            const unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n            // Ensure that unsubscribe is a function.\r\n            if (typeof unsubscribe !== 'function')\r\n            {\r\n               throw new TypeError(\r\n                'DynArrayReducer error: Filter has subscribe function, but no unsubscribe function is returned.');\r\n            }\r\n\r\n            // Ensure that the same filter is not subscribed to multiple times.\r\n            if (this.#mapUnsubscribe.has(data.filter))\r\n            {\r\n               throw new Error(\r\n                'DynArrayReducer error: Filter added already has an unsubscribe function registered.');\r\n            }\r\n\r\n            this.#mapUnsubscribe.set(data.filter, unsubscribe);\r\n            subscribeCount++;\r\n         }\r\n      }\r\n\r\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\r\n      // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\r\n      if (subscribeCount < filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   clear()\r\n   {\r\n      this.#filtersAdapter.filters.length = 0;\r\n\r\n      // Unsubscribe from all filters with subscription support.\r\n      for (const unsubscribe of this.#mapUnsubscribe.values())\r\n      {\r\n         unsubscribe();\r\n      }\r\n\r\n      this.#mapUnsubscribe.clear();\r\n\r\n      this.#indexUpdate();\r\n   }\r\n\r\n   /**\r\n    * @param {...(FilterFn<T>|FilterData<T>)}   filters -\r\n    */\r\n   remove(...filters)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      for (const data of filters)\r\n      {\r\n         // Handle the case that the filter may either be a function or a filter entry / object.\r\n         const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\r\n          data.filter : void 0;\r\n\r\n         if (!actualFilter) { continue; }\r\n\r\n         for (let cntr = this.#filtersAdapter.filters.length; --cntr >= 0;)\r\n         {\r\n            if (this.#filtersAdapter.filters[cntr].filter === actualFilter)\r\n            {\r\n               this.#filtersAdapter.filters.splice(cntr, 1);\r\n\r\n               // Invoke any unsubscribe function for given filter then remove from tracking.\r\n               let unsubscribe = void 0;\r\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function')\r\n               {\r\n                  unsubscribe();\r\n                  this.#mapUnsubscribe.delete(actualFilter);\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      // Update the index a filter was removed.\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   /**\r\n    * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\r\n    * Any truthy value returned will remove that filter.\r\n    *\r\n    * @param {function(*, FilterFn<T>, number): boolean} callback - Callback function to evaluate each filter entry.\r\n    */\r\n   removeBy(callback)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      if (typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`DynArrayReducer error: 'callback' is not a function.`);\r\n      }\r\n\r\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\r\n      {\r\n         const remove = callback.call(callback, { ...data });\r\n\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         // Reverse remove boolean to properly filter / remove this filter.\r\n         return !remove;\r\n      });\r\n\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n\r\n   removeById(...ids)\r\n   {\r\n      const length = this.#filtersAdapter.filters.length;\r\n\r\n      if (length === 0) { return; }\r\n\r\n      this.#filtersAdapter.filters = this.#filtersAdapter.filters.filter((data) =>\r\n      {\r\n         let remove = false;\r\n\r\n         for (const id of ids) { remove |= data.id === id; }\r\n\r\n         // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\r\n         if (remove)\r\n         {\r\n            let unsubscribe;\r\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function')\r\n            {\r\n               unsubscribe();\r\n               this.#mapUnsubscribe.delete(data.filter);\r\n            }\r\n         }\r\n\r\n         return !remove; // Swap here to actually remove the item via array filter method.\r\n      });\r\n\r\n      if (length !== this.#filtersAdapter.filters.length) { this.#indexUpdate(); }\r\n   }\r\n}\n\n/**\r\n * @template T\r\n */\r\nclass AdapterSort\r\n{\r\n   #sortAdapter;\r\n   #indexUpdate;\r\n   #unsubscribe;\r\n\r\n   /**\r\n    * @param {Function} indexUpdate - Function to update indexer.\r\n    *\r\n    * @returns {[AdapterSort<T>, {compareFn: CompareFn<T>}]} This and the internal sort adapter data.\r\n    */\r\n   constructor(indexUpdate)\r\n   {\r\n      this.#indexUpdate = indexUpdate;\r\n\r\n      this.#sortAdapter = { compareFn: null };\r\n\r\n      Object.seal(this);\r\n\r\n      return [this, this.#sortAdapter];\r\n   }\r\n\r\n   /**\r\n    * @param {CompareFn<T>|SortData<T>}  data -\r\n    *\r\n    * A callback function that compares two values. Return > 0 to sort b before a;\r\n    * < 0 to sort a before b; or 0 to keep original order of a & b.\r\n    *\r\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\r\n    */\r\n   set(data)\r\n   {\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      let compareFn = void 0;\r\n      let subscribeFn = void 0;\r\n\r\n      switch (typeof data)\r\n      {\r\n         case 'function':\r\n            compareFn = data;\r\n            subscribeFn = data.subscribe;\r\n            break;\r\n\r\n         case 'object':\r\n            // Early out if data is null / noop.\r\n            if (data === null) { break; }\r\n\r\n            if (typeof data.compare !== 'function')\r\n            {\r\n               throw new TypeError(`DynArrayReducer error: 'compare' attribute is not a function.`);\r\n            }\r\n\r\n            compareFn = data.compare;\r\n            subscribeFn = data.compare.subscribe ?? data.subscribe;\r\n            break;\r\n      }\r\n\r\n      if (typeof compareFn === 'function')\r\n      {\r\n         this.#sortAdapter.compareFn = compareFn;\r\n      }\r\n      else\r\n      {\r\n         const oldCompareFn = this.#sortAdapter.compareFn;\r\n         this.#sortAdapter.compareFn = null;\r\n\r\n         // Update index if the old compare function exists.\r\n         if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n         return;\r\n      }\r\n\r\n      if (typeof subscribeFn === 'function')\r\n      {\r\n         this.#unsubscribe = subscribeFn(this.#indexUpdate);\r\n\r\n         // Ensure that unsubscribe is a function.\r\n         if (typeof this.#unsubscribe !== 'function')\r\n         {\r\n            throw new Error(\r\n             `DynArrayReducer error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\r\n         }\r\n      }\r\n      else\r\n      {\r\n         // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\r\n         // Only manually update the index if there is no subscriber functionality.\r\n         this.#indexUpdate();\r\n      }\r\n   }\r\n\r\n   reset()\r\n   {\r\n      const oldCompareFn = this.#sortAdapter.compareFn;\r\n\r\n      this.#sortAdapter.compareFn = null;\r\n\r\n      if (typeof this.#unsubscribe === 'function')\r\n      {\r\n         this.#unsubscribe();\r\n         this.#unsubscribe = void 0;\r\n      }\r\n\r\n      // Only update index if an old compare function is set.\r\n      if (typeof oldCompareFn === 'function') { this.#indexUpdate(); }\r\n   }\r\n}\n\nclass Indexer\r\n{\r\n   constructor(hostItems, hostUpdate)\r\n   {\r\n      this.hostItems = hostItems;\r\n      this.hostUpdate = hostUpdate;\r\n\r\n      const indexAdapter = { index: null, hash: null };\r\n\r\n      const publicAPI = {\r\n         update: this.update.bind(this),\r\n\r\n         /**\r\n          * Provides an iterator over the index array.\r\n          *\r\n          * @returns {Generator<any, void, *>} Iterator.\r\n          * @yields\r\n          */\r\n         [Symbol.iterator]: function *()\r\n         {\r\n            if (!indexAdapter.index) { return; }\r\n\r\n            for (const index of indexAdapter.index) { yield index; }\r\n         }\r\n      };\r\n\r\n      // Define a getter on the public API to get the length / count of index array.\r\n      Object.defineProperties(publicAPI, {\r\n         hash: { get: () => indexAdapter.hash },\r\n         isActive: { get: () => this.isActive() },\r\n         length: { get: () => Array.isArray(indexAdapter.index) ? indexAdapter.index.length : 0 }\r\n      });\r\n\r\n      Object.freeze(publicAPI);\r\n\r\n      indexAdapter.publicAPI = publicAPI;\r\n\r\n      this.indexAdapter = indexAdapter;\r\n\r\n      return [this, indexAdapter];\r\n   }\r\n\r\n   /**\r\n    * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\r\n    * is set to null. Set calculated new hash value to the index adapter hash value.\r\n    *\r\n    * After hash generation compare old and new hash values and perform an update if they are different. If they are\r\n    * equal check for array equality between the old and new index array and perform an update if they are not equal.\r\n    *\r\n    * @param {number[]}    oldIndex - Old index array.\r\n    *\r\n    * @param {number|null} oldHash - Old index hash value.\r\n    */\r\n   calcHashUpdate(oldIndex, oldHash)\r\n   {\r\n      let newHash = null;\r\n      const newIndex = this.indexAdapter.index;\r\n\r\n      if (newIndex)\r\n      {\r\n         for (let cntr = newIndex.length; --cntr >= 0;)\r\n         {\r\n            newHash ^= newIndex[cntr] + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\r\n         }\r\n      }\r\n\r\n      this.indexAdapter.hash = newHash;\r\n\r\n      if (oldHash === newHash ? !s_ARRAY_EQUALS(oldIndex, newIndex) : true) { this.hostUpdate(); }\r\n   }\r\n\r\n   initAdapters(filtersAdapter, sortAdapter)\r\n   {\r\n      this.filtersAdapter = filtersAdapter;\r\n      this.sortAdapter = sortAdapter;\r\n\r\n      this.sortFn = (a, b) =>\r\n      {\r\n         return this.sortAdapter.compareFn(this.hostItems[a], this.hostItems[b]);\r\n      };\r\n   }\r\n\r\n   isActive()\r\n   {\r\n      return this.filtersAdapter.filters.length > 0 || this.sortAdapter.compareFn !== null;\r\n   }\r\n\r\n   /**\r\n    * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\r\n    *\r\n    * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\r\n    * but the maintenance factor is not worth the extra complication.\r\n    *\r\n    * @returns {number[]} New filtered index array.\r\n    */\r\n   reduceImpl()\r\n   {\r\n      const data = [];\r\n\r\n      const filters = this.filtersAdapter.filters;\r\n\r\n      let include = true;\r\n\r\n      for (let cntr = 0, length = this.hostItems.length; cntr < length; cntr++)\r\n      {\r\n         include = true;\r\n\r\n         for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++)\r\n         {\r\n            if (!filters[filCntr].filter(this.hostItems[cntr]))\r\n            {\r\n               include = false;\r\n               break;\r\n            }\r\n         }\r\n\r\n         if (include) { data.push(cntr); }\r\n      }\r\n\r\n      return data;\r\n   }\r\n\r\n   update()\r\n   {\r\n      const oldIndex = this.indexAdapter.index;\r\n      const oldHash = this.indexAdapter.hash;\r\n\r\n      // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\r\n      if ((this.filtersAdapter.filters.length === 0 && !this.sortAdapter.compareFn) ||\r\n       (this.indexAdapter.index && this.hostItems.length !== this.indexAdapter.index.length))\r\n      {\r\n         this.indexAdapter.index = null;\r\n      }\r\n\r\n      // If there are filters build new index.\r\n      if (this.filtersAdapter.filters.length > 0) { this.indexAdapter.index = this.reduceImpl(); }\r\n\r\n      if (this.sortAdapter.compareFn)\r\n      {\r\n         // If there is no index then create one with keys matching host item length.\r\n         if (!this.indexAdapter.index) { this.indexAdapter.index = [...Array(this.hostItems.length).keys()]; }\r\n\r\n         this.indexAdapter.index.sort(this.sortFn);\r\n      }\r\n\r\n      this.calcHashUpdate(oldIndex, oldHash);\r\n   }\r\n}\r\n\r\n/**\r\n * Checks for array equality between two arrays of numbers.\r\n *\r\n * @param {number[]} a - Array A\r\n *\r\n * @param {number[]} b - Array B\r\n *\r\n * @returns {boolean} Arrays equal\r\n */\r\nfunction s_ARRAY_EQUALS(a, b)\r\n{\r\n   if (a === b) { return true; }\r\n   if (a === null || b === null) { return false; }\r\n\r\n   /* c8 ignore next */\r\n   if (a.length !== b.length) { return false; }\r\n\r\n   for (let cntr = a.length; --cntr >= 0;)\r\n   {\r\n      /* c8 ignore next */\r\n      if (a[cntr] !== b[cntr]) { return false; }\r\n   }\r\n\r\n   return true;\r\n}\n\n/**\r\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\r\n * Svelte store support.\r\n *\r\n * @template T\r\n */\r\nclass DynArrayReducer\r\n{\r\n   #items;\r\n\r\n   #index;\r\n   #indexAdapter;\r\n\r\n   /**\r\n    * @type {AdapterFilters<T>}\r\n    */\r\n   #filters;\r\n\r\n   /**\r\n    * @type {{filters: FilterFn<T>[]}}\r\n    */\r\n   #filtersAdapter;\r\n\r\n   /**\r\n    * @type {AdapterSort<T>}\r\n    */\r\n   #sort;\r\n\r\n   /**\r\n    * @type {{compareFn: CompareFn<T>}}\r\n    */\r\n   #sortAdapter;\r\n\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\r\n    * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\r\n    *\r\n    * @param {Iterable<T>|DynData<T>}   data - Data iterable to store if array or copy otherwise.\r\n    */\r\n   constructor(data = void 0)\r\n   {\r\n      let dataIterable = void 0;\r\n      let filters = void 0;\r\n      let sort = void 0;\r\n\r\n      // Potentially working with DynData.\r\n      if (!s_IS_ITERABLE(data) && typeof data === 'object')\r\n      {\r\n         if (!s_IS_ITERABLE(data.data))\r\n         {\r\n            throw new TypeError(`DynArrayReducer error (DynData): 'data' attribute is not iterable.`);\r\n         }\r\n\r\n         dataIterable = data.data;\r\n\r\n         if (data.filters !== void 0)\r\n         {\r\n            if (s_IS_ITERABLE(data.filters))\r\n            {\r\n               filters = data.filters;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynArrayReducer error (DynData): 'filters' attribute is not iterable.`);\r\n            }\r\n         }\r\n\r\n         if (data.sort !== void 0)\r\n         {\r\n            if (typeof data.sort === 'function')\r\n            {\r\n               sort = data.sort;\r\n            }\r\n            else\r\n            {\r\n               throw new TypeError(`DynArrayReducer error (DynData): 'sort' attribute is not a function.`);\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         if (!s_IS_ITERABLE(data)) { throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`); }\r\n\r\n         dataIterable = data;\r\n      }\r\n\r\n      // In the case of the main data being an array directly use the array otherwise create a copy.\r\n      this.#items = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\r\n\r\n      [this.#index, this.#indexAdapter] = new Indexer(this.#items, this.#notify.bind(this));\r\n\r\n      [this.#filters, this.#filtersAdapter] = new AdapterFilters(this.#indexAdapter.publicAPI.update);\r\n      [this.#sort, this.#sortAdapter] = new AdapterSort(this.#indexAdapter.publicAPI.update);\r\n\r\n      this.#index.initAdapters(this.#filtersAdapter, this.#sortAdapter);\r\n\r\n      // Add any filters and sort function defined by DynData.\r\n      if (filters) { this.filters.add(...filters); }\r\n      if (sort) { this.sort.set(sort); }\r\n   }\r\n\r\n   /**\r\n    * @returns {AdapterFilters<T>} The filters adapter.\r\n    */\r\n   get filters() { return this.#filters; }\r\n\r\n   /**\r\n    * Returns the Indexer public API.\r\n    *\r\n    * @returns {IndexerAPI & Iterable<number>} Indexer API - is also iterable.\r\n    */\r\n   get index() { return this.#indexAdapter.publicAPI; }\r\n\r\n   /**\r\n    * Gets the main data / items length.\r\n    *\r\n    * @returns {number} Main data / items length.\r\n    */\r\n   get length() { return this.#items.length; }\r\n\r\n   /**\r\n    * @returns {AdapterSort<T>} The sort adapter.\r\n    */\r\n   get sort() { return this.#sort; }\r\n\r\n   /**\r\n    *\r\n    * @param {function(DynArrayReducer<T>): void} handler - Callback function that is invoked on update / changes.\r\n    *                                                       Receives `this` reference.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    *\r\n    */\r\n   #notify()\r\n   {\r\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\r\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\r\n      const subscriptions = this.#subscriptions;\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\r\n   }\r\n\r\n   /**\r\n    * Provides an iterator for data stored in DynArrayReducer.\r\n    *\r\n    * @returns {Generator<*, T, *>} Generator / iterator of all data.\r\n    * @yields {T}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      const items = this.#items;\r\n\r\n      if (items.length === 0) { return; }\r\n\r\n      if (this.#index.isActive())\r\n      {\r\n         for (const entry of this.index) { yield items[entry]; }\r\n      }\r\n      else\r\n      {\r\n         for (const entry of items) { yield entry; }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\r\n *\r\n * @param {*}  data - Data to verify as iterable.\r\n *\r\n * @returns {boolean} Is data iterable.\r\n */\r\nfunction s_IS_ITERABLE(data)\r\n{\r\n   return data !== null && data !== void 0 && typeof data === 'object' && typeof data[Symbol.iterator] === 'function';\r\n}\n\nexport { DynArrayReducer };\n","/**\r\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\r\n * function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isReadableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * function and an `update` function.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isUpdatableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\r\n * `set`, and `update` functions.\r\n *\r\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\r\n *\r\n * @param {*}  store - variable to test that might be a store.\r\n *\r\n * @returns {boolean} Whether the variable tested has the shape of a store.\r\n */\r\nexport function isWritableStore(store)\r\n{\r\n   if (store === null || store === void 0) { return false; }\r\n\r\n   switch (typeof store)\r\n   {\r\n      case 'function':\r\n      case 'object':\r\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\r\n   }\r\n\r\n   return false;\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with the update function provided and ignores the first automatic\r\n * update. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} update - function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeIgnoreFirst(store, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n\r\n/**\r\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\r\n * subscription. All future updates are dispatched to the update function.\r\n *\r\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\r\n *  Store to subscribe to...\r\n *\r\n * @param {import('svelte/store').Updater} first - Function to receive first update.\r\n *\r\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\r\n *\r\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\r\n */\r\nexport function subscribeFirstRest(store, first, update)\r\n{\r\n   let firedFirst = false;\r\n\r\n   return store.subscribe((value) => {\r\n      if (!firedFirst)\r\n      {\r\n         firedFirst = true;\r\n         first(value);\r\n      }\r\n      else {\r\n         update(value);\r\n      }\r\n   })\r\n}\r\n","// src/generator.ts\nimport {writable as ogWritable, get as ogGet} from \"svelte/store\";\nimport {run_all, noop, is_function} from \"svelte/internal\";\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = ogWritable(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(ogGet(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: ogGet\n  };\n}\n\nexport {\n  generator\n};\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/local.ts\nvar storage = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/local';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get} LSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class LocalStorage\r\n{\r\n   /**\r\n    * @type {Map<string, LSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {*} Value from local storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = localStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in localstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in local storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in localstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in local storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new LSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      const value = localStorage.getItem(key);\r\n      if (value) { defaultValue = JSON.parse(value); }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n\r\n\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import {\n  generator\n} from \"./chunk.PXUOYU5R.mjs\";\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar readable = g.readable;\nvar writable = g.writable;\nvar derived = g.derived;\nvar get = g.get;\n\nexport {\n  readable,\n  writable,\n  derived,\n  get\n};\n","import { writable }  from 'svelte-persistent-store/session';\r\nimport { get }       from 'svelte/store';\r\n\r\n/**\r\n * @typedef {import('svelte/store').Writable & import('svelte/store').get} SSStore - The backing Svelte store; a writable w/ get method attached.\r\n */\r\n\r\nexport class SessionStorage\r\n{\r\n   /**\r\n    * @type {Map<string, SSStore>}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * Get value from the sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = sessionStorage.getItem(key);\r\n\r\n      if (storageValue !== void 0)\r\n      {\r\n         value = JSON.parse(storageValue);\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {LSStore} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue)\r\n   {\r\n      return s_GET_STORE(this.#stores, key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in sessionstorage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in session storage.\r\n    *\r\n    * @param {string}   key - Key to lookup in sessionstorage.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = s_GET_STORE(this.#stores, key, defaultValue);\r\n      const value = store.get();\r\n      const newValue = typeof value === 'boolean' ? !value : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n}\r\n\r\n/**\r\n * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\r\n *\r\n * @param {Map<string, LSStore>} stores - Map containing Svelte stores.\r\n *\r\n * @param {string}               key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}              [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The store for the given key.\r\n */\r\nfunction s_GET_STORE(stores, key, defaultValue = void 0)\r\n{\r\n   let store = stores.get(key);\r\n   if (store === void 0)\r\n   {\r\n      store = s_CREATE_STORE(key, defaultValue);\r\n      stores.set(key, store);\r\n   }\r\n\r\n   return store;\r\n}\r\n\r\n/**\r\n * Creates a new SSStore for the given key.\r\n *\r\n * @param {string}   key - Key to lookup in stores map.\r\n *\r\n * @param {boolean}  [defaultValue] - A default value to set for the store.\r\n *\r\n * @returns {LSStore} The new LSStore.\r\n */\r\nfunction s_CREATE_STORE(key, defaultValue = void 0)\r\n{\r\n   try\r\n   {\r\n      const value = sessionStorage.getItem(key);\r\n      if (value) { defaultValue = JSON.parse(value); }\r\n   }\r\n   catch (err) { /**/ }\r\n\r\n   const store = writable(key, defaultValue);\r\n   store.get = () => get(store);\r\n\r\n   return store;\r\n}\r\n","import { derived, get } from \"svelte/store\";\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#Store_contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#derived), but which\n * has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 2nd parameter.\n * @param {!Function|{withOld: !Function}} reflect Called when the\n * derived store gets a new value via its `set` or `update` methods, and determines new values for\n * the origin stores. [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#derived)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nexport default function writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, allowDerive = true;\n\tvar reflectOldValues = \"withOld\" in reflect;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (allowDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tvar sendUpstream = (setWith) => {\n\t\tallowDerive = false;\n\t\tif (singleOrigin) {\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tallowDerive = true;\n\t};\n\tif (reflectOldValues) {\n\t\treflect = reflect.withOld;\n\t}\n\tvar reflectIsAsync = reflect.length >= (reflectOldValues ? 3 : 2);\n\tvar cleanup = null;\n\tfunction doReflect(reflecting) {\n\t\tif (cleanup) {\n\t\t\tcleanup();\n\t\t\tcleanup = null;\n\t\t}\n\n\t\tif (reflectOldValues) {\n\t\t\tvar returned = reflect(reflecting, originValues, sendUpstream);\n\t\t} else {\n\t\t\tvar returned = reflect(reflecting, sendUpstream);\n\t\t}\n\t\tif (reflectIsAsync) {\n\t\t\tif (typeof returned == \"function\") {\n\t\t\t\tcleanup = returned;\n\t\t\t}\n\t\t} else {\n\t\t\tsendUpstream(returned);\n\t\t}\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\nexport { writableDerived };\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nexport function propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t}\n}"],"names":["Symbol","iterator","AdapterFilters","constructor","indexUpdate","Map","filters","Object","seal","length","entry","_objectSpread","add","subscribeCount","filter","filterType","TypeError","data","subscribeFn","id","weight","subscribe","index","findIndex","value","splice","push","unsubscribe","has","Error","set","clear","values","remove","actualFilter","cntr","get","delete","removeBy","callback","call","removeById","ids","AdapterSort","compareFn","compare","oldCompareFn","reset","Indexer","hostItems","hostUpdate","indexAdapter","hash","publicAPI","update","bind","defineProperties","isActive","Array","isArray","freeze","calcHashUpdate","oldIndex","oldHash","newHash","newIndex","s_ARRAY_EQUALS","initAdapters","filtersAdapter","sortAdapter","sortFn","a","b","reduceImpl","include","filCntr","filLength","keys","sort","DynArrayReducer","dataIterable","s_IS_ITERABLE","handler","sub","items","subscriptions","isReadableStore","store","isUpdatableStore","isWritableStore","subscribeIgnoreFirst","firedFirst","subscribeFirstRest","first","isSimpleDeriver","deriver","generator","storage","readable","key","start","writable","noop","wrap_start","ogSet","wrap_set","new_value","setItem","JSON","stringify","storageValue","getItem","parse","err","ogStore","ogWritable","fn","ogGet","run","invalidate","derived","stores","initial_value","single","stores_array","inited","pending","cleanup","sync","input","result","is_function","unsubscribers","map","i","stop","run_all","window","localStorage","g","LocalStorage","_stores","defaultValue","getStore","s_GET_STORE","swapItemBoolean","newValue","s_CREATE_STORE","sessionStorage","SessionStorage","writableDerived","origins","derive","reflect","initial","childDerivedSetter","originValues","allowDerive","reflectOldValues","wrappedDerive","got","returned","childDerived","singleOrigin","sendUpstream","setWith","forEach","withOld","reflectIsAsync","doReflect","reflecting","tryingSet","isUpdated","mutatedBySubscriptions","oldValue","propertyStore","origin","propName","object","props","concat","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DKA,gBAAAA,GAAAA,MAAM,CAACC;;AA5DZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAN,CACA;AAKG;AACH;AACA;AACA;AACA;EACGC,WAAW,CAACC,WAAD,EACX;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,YAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EARkB,IAAIC,GAAJ,EAAA;AAQlB,KAAA,CAAA,CAAA;;AACG,IAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,EAAoBD,WAApB,CAAA,CAAA;;IAEA,qBAAuB,CAAA,IAAA,EAAA,eAAA,EAAA;AAAEE,MAAAA,OAAO,EAAE,EAAA;KAAlC,CAAA,CAAA;;IAEAC,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAA,CAAA;AAEA,IAAA,OAAO,CAAC,IAAD,EAAO,qBAAA,CAAA,IAAP,EAAP,eAAA,CAAA,CAAA,CAAA;AACF,GAAA;AAED;AACH;AACA;;;AACa,EAAA,IAANC,MAAM,GAAG;IAAE,OAAO,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBH,OAArB,CAA6BG,MAApC,CAAA;AAA6C,GAAA;AAE5D;AACH;AACA;AACA;AACA;AACA;;;EACG,EACA,gBAAA,CAAA,GAAA;AACG,IAAA,IAAI,6CAAqBH,OAArB,CAA6BG,MAA7B,KAAwC,CAA5C,EAA+C;AAAE,MAAA,OAAA;AAAS,KAAA;;AAE1D,IAAA,KAAK,MAAMC,KAAX,IAAoB,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBJ,OAAzC,EACA;AACG,MAAA,MAAAK,cAAA,CAAA,EAAA,EAAWD,KAAX,CAAA,CAAA;AACF,KAAA;AACH,GAAA;AAED;AACH;AACA;;;EACGE,GAAG,CAAC,GAAGN,OAAJ,EACH;AAAA,IAAA,IAAA,qBAAA,CAAA;;AACG;AACN;AACA;AACA;AACA;IACM,IAAIO,cAAc,GAAG,CAArB,CAAA;;AAEA,IAAA,KAAK,MAAMC,MAAX,IAAqBR,OAArB,EACA;MACG,MAAMS,UAAU,GAAG,OAAOD,MAA1B,CAAA;;MAEA,IAAIC,UAAU,KAAK,UAAf,IAA6BA,UAAU,KAAK,QAA5C,IAAwDD,MAAM,KAAK,IAAvE,EACA;AACG,QAAA,MAAM,IAAIE,SAAJ,CAAe,CAAA,4DAAA,CAAf,CAAN,CAAA;AACF,OAAA;;MAED,IAAIC,IAAI,GAAG,KAAK,CAAhB,CAAA;MACA,IAAIC,WAAW,GAAG,KAAK,CAAvB,CAAA;;AAEA,MAAA,QAAQH,UAAR;AAEG,QAAA,KAAK,UAAL;AACGE,UAAAA,IAAI,GAAG;YACJE,EAAE,EAAE,KAAK,CADL;YAEJL,MAFI;AAGJM,YAAAA,MAAM,EAAE,CAAA;WAHX,CAAA;UAMAF,WAAW,GAAGJ,MAAM,CAACO,SAArB,CAAA;AACA,UAAA,MAAA;;AAEH,QAAA,KAAK,QAAL;AACG,UAAA,IAAI,OAAOP,MAAM,CAACA,MAAd,KAAyB,UAA7B,EACA;AACG,YAAA,MAAM,IAAIE,SAAJ,CAAe,CAAA,4DAAA,CAAf,CAAN,CAAA;AACF,WAAA;;UAED,IAAIF,MAAM,CAACM,MAAP,KAAkB,KAAK,CAAvB,IAA4B,OAAON,MAAM,CAACM,MAAd,KAAyB,QAArD,IACFN,MAAM,CAACM,MAAP,GAAgB,CAAhB,IAAqBN,MAAM,CAACM,MAAP,GAAgB,CADvC,EAEA;AACG,YAAA,MAAM,IAAIJ,SAAJ,CACJ,CAAA,oFAAA,CADI,CAAN,CAAA;AAEF,WAAA;;AAEDC,UAAAA,IAAI,GAAG;AACJE,YAAAA,EAAE,EAAEL,MAAM,CAACK,EAAP,KAAc,KAAK,CAAnB,GAAuBL,MAAM,CAACK,EAA9B,GAAmC,KAAK,CADxC;YAEJL,MAAM,EAAEA,MAAM,CAACA,MAFX;AAGJM,YAAAA,MAAM,EAAEN,MAAM,CAACM,MAAP,IAAiB,CAAA;WAH5B,CAAA;UAMAF,WAAW,GAAA,CAAA,qBAAA,GAAGJ,MAAM,CAACA,MAAP,CAAcO,SAAjB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA8BP,MAAM,CAACO,SAAhD,CAAA;AACA,UAAA,MAAA;AAhCN,OAXH;;;MA+CG,MAAMC,KAAK,GAAG,qBAAqBhB,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BiB,SAA7B,CAAwCC,KAAD,IACrD;AACG,QAAA,OAAOP,IAAI,CAACG,MAAL,GAAcI,KAAK,CAACJ,MAA3B,CAAA;OAFW,CAAd,CA/CH;;;MAqDG,IAAIE,KAAK,IAAI,CAAb,EACA;QACG,qBAAqBhB,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BmB,MAA7B,CAAoCH,KAApC,EAA2C,CAA3C,EAA8CL,IAA9C,CAAA,CAAA;AACF,OAHD;AAKA,QAAA;AACG,UAAA,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBX,OAArB,CAA6BoB,IAA7B,CAAkCT,IAAlC,CAAA,CAAA;AACF,SAAA;;AAED,MAAA,IAAI,OAAOC,WAAP,KAAuB,UAA3B,EACA;AACG,QAAA,MAAMS,WAAW,GAAGT,WAAW,uBAAC,IAAD,EAAA,YAAA,CAAA,CAA/B,CADH;;AAIG,QAAA,IAAI,OAAOS,WAAP,KAAuB,UAA3B,EACA;AACG,UAAA,MAAM,IAAIX,SAAJ,CACL,gGADK,CAAN,CAAA;AAEF,SARJ;;;AAWG,QAAA,IAAI,6CAAqBY,GAArB,CAAyBX,IAAI,CAACH,MAA9B,CAAJ,EACA;AACG,UAAA,MAAM,IAAIe,KAAJ,CACL,qFADK,CAAN,CAAA;AAEF,SAAA;;AAED,QAAA,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBC,GAArB,CAAyBb,IAAI,CAACH,MAA9B,EAAsCa,WAAtC,CAAA,CAAA;;QACAd,cAAc,EAAA,CAAA;AAChB,OAAA;AACH,KA5FJ;AA+FG;;;AACA,IAAA,IAAIA,cAAc,GAAGP,OAAO,CAACG,MAA7B,EAAqC;AAAE,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAAsB,KAAA;AAC/D,GAAA;;AAEDsB,EAAAA,KAAK,GACL;AACG,IAAA,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBzB,OAArB,CAA6BG,MAA7B,GAAsC,CAAtC,CADH;;AAIG,IAAA,KAAK,MAAMkB,WAAX,IAA0B,qBAAqBK,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,MAArB,EAA1B,EACA;MACGL,WAAW,EAAA,CAAA;AACb,KAAA;;AAED,IAAA,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBI,KAArB,EAAA,CAAA;;AAEA,IAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AACF,GAAA;AAED;AACH;AACA;;;EACGE,MAAM,CAAC,GAAG3B,OAAJ,EACN;AACG,IAAA,MAAMG,MAAM,GAAG,qBAAqBH,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BG,MAA5C,CAAA;;IAEA,IAAIA,MAAM,KAAK,CAAf,EAAkB;AAAE,MAAA,OAAA;AAAS,KAAA;;AAE7B,IAAA,KAAK,MAAMQ,IAAX,IAAmBX,OAAnB,EACA;AACG;MACA,MAAM4B,YAAY,GAAG,OAAOjB,IAAP,KAAgB,UAAhB,GAA6BA,IAA7B,GAAoCA,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,QAAjC,GACxDA,IAAI,CAACH,MADmD,GAC1C,KAAK,CADpB,CAAA;;MAGA,IAAI,CAACoB,YAAL,EAAmB;AAAE,QAAA,SAAA;AAAW,OAAA;;AAEhC,MAAA,KAAK,IAAIC,IAAI,GAAG,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqB7B,OAArB,CAA6BG,MAA7C,EAAqD,EAAE0B,IAAF,IAAU,CAA/D,GACA;QACG,IAAI,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqB7B,OAArB,CAA6B6B,IAA7B,EAAmCrB,MAAnC,KAA8CoB,YAAlD,EACA;UACG,qBAAqB5B,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BmB,MAA7B,CAAoCU,IAApC,EAA0C,CAA1C,EADH;;;UAIG,IAAIR,WAAW,GAAG,KAAK,CAAvB,CAAA;;UACA,IAAI,QAAQA,WAAW,GAAG,qBAAqBS,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,GAArB,CAAyBF,YAAzB,CAAtB,CAAkE,KAAA,UAAtE,EACA;YACGP,WAAW,EAAA,CAAA;;YACX,qBAAqBU,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,MAArB,CAA4BH,YAA5B,CAAA,CAAA;AACF,WAAA;AACH,SAAA;AACH,OAAA;AACH,KA5BJ;;;AA+BG,IAAA,IAAIzB,MAAM,KAAK,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBH,OAArB,CAA6BG,MAA5C,EAAoD;AAAE,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAAsB,KAAA;AAC9E,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;;;EACG6B,QAAQ,CAACC,QAAD,EACR;AACG,IAAA,MAAM9B,MAAM,GAAG,qBAAqBH,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BG,MAA5C,CAAA;;IAEA,IAAIA,MAAM,KAAK,CAAf,EAAkB;AAAE,MAAA,OAAA;AAAS,KAAA;;AAE7B,IAAA,IAAI,OAAO8B,QAAP,KAAoB,UAAxB,EACA;AACG,MAAA,MAAM,IAAIvB,SAAJ,CAAe,CAAA,oDAAA,CAAf,CAAN,CAAA;AACF,KAAA;;IAED,qBAAqBV,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,GAA+B,qBAAqBA,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BQ,MAA7B,CAAqCG,IAAD,IACnE;MACG,MAAMgB,MAAM,GAAGM,QAAQ,CAACC,IAAT,CAAcD,QAAd,EAA6BtB,cAAAA,CAAAA,EAAAA,EAAAA,IAA7B,CAAf,CAAA,CAAA;;AAEA,MAAA,IAAIgB,MAAJ,EACA;AACG,QAAA,IAAIN,WAAJ,CAAA;;AACA,QAAA,IAAI,QAAQA,WAAW,GAAG,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBS,GAArB,CAAyBnB,IAAI,CAACH,MAA9B,CAAtB,CAAiE,KAAA,UAArE,EACA;UACGa,WAAW,EAAA,CAAA;;AACX,UAAA,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBU,MAArB,CAA4BpB,IAAI,CAACH,MAAjC,CAAA,CAAA;AACF,SAAA;AACH,OAXJ;;;AAcG,MAAA,OAAO,CAACmB,MAAR,CAAA;AACF,KAhB8B,CAA/B,CAAA;;AAkBA,IAAA,IAAIxB,MAAM,KAAK,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBH,OAArB,CAA6BG,MAA5C,EAAoD;AAAE,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAAsB,KAAA;AAC9E,GAAA;;EAEDgC,UAAU,CAAC,GAAGC,GAAJ,EACV;AACG,IAAA,MAAMjC,MAAM,GAAG,qBAAqBH,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BG,MAA5C,CAAA;;IAEA,IAAIA,MAAM,KAAK,CAAf,EAAkB;AAAE,MAAA,OAAA;AAAS,KAAA;;IAE7B,qBAAqBH,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,GAA+B,qBAAqBA,CAAAA,IAAAA,EAAAA,eAAAA,CAAAA,CAAAA,OAArB,CAA6BQ,MAA7B,CAAqCG,IAAD,IACnE;MACG,IAAIgB,MAAM,GAAG,KAAb,CAAA;;AAEA,MAAA,KAAK,MAAMd,EAAX,IAAiBuB,GAAjB,EAAsB;AAAET,QAAAA,MAAM,IAAIhB,IAAI,CAACE,EAAL,KAAYA,EAAtB,CAAA;AAA2B,OAHtD;;;AAMG,MAAA,IAAIc,MAAJ,EACA;AACG,QAAA,IAAIN,WAAJ,CAAA;;AACA,QAAA,IAAI,QAAQA,WAAW,GAAG,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBS,GAArB,CAAyBnB,IAAI,CAACH,MAA9B,CAAtB,CAAiE,KAAA,UAArE,EACA;UACGa,WAAW,EAAA,CAAA;;AACX,UAAA,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBU,MAArB,CAA4BpB,IAAI,CAACH,MAAjC,CAAA,CAAA;AACF,SAAA;AACH,OAAA;;MAED,OAAO,CAACmB,MAAR,CAhBH;AAiBC,KAlB8B,CAA/B,CAAA;;AAoBA,IAAA,IAAIxB,MAAM,KAAK,qBAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAqBH,OAArB,CAA6BG,MAA5C,EAAoD;AAAE,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAAsB,KAAA;AAC9E,GAAA;;AAvQJ,CAAA;AA0QA;AACA;AACA;;;;;;;;;AACA,MAAMkC,WAAN,CACA;AAKG;AACH;AACA;AACA;AACA;EACGxC,WAAW,CAACC,WAAD,EACX;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,YAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,aAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,YAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AACG,IAAA,qBAAA,CAAA,IAAA,EAAA,aAAA,EAAoBA,WAApB,CAAA,CAAA;;IAEA,qBAAoB,CAAA,IAAA,EAAA,YAAA,EAAA;AAAEwC,MAAAA,SAAS,EAAE,IAAA;KAAjC,CAAA,CAAA;;IAEArC,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAA,CAAA;AAEA,IAAA,OAAO,CAAC,IAAD,EAAO,qBAAA,CAAA,IAAP,EAAP,YAAA,CAAA,CAAA,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;EACGsB,GAAG,CAACb,IAAD,EACH;AAAA,IAAA,IAAA,qBAAA,CAAA;;AACG,IAAA,IAAI,OAAO,qBAAA,CAAA,IAAP,EAA6B,YAAA,CAAA,KAAA,UAAjC,EACA;AACG,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AACA,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,EAAoB,KAAK,CAAzB,CAAA,CAAA;AACF,KAAA;;IAED,IAAI2B,SAAS,GAAG,KAAK,CAArB,CAAA;IACA,IAAI1B,WAAW,GAAG,KAAK,CAAvB,CAAA;;AAEA,IAAA,QAAQ,OAAOD,IAAf;AAEG,MAAA,KAAK,UAAL;AACG2B,QAAAA,SAAS,GAAG3B,IAAZ,CAAA;QACAC,WAAW,GAAGD,IAAI,CAACI,SAAnB,CAAA;AACA,QAAA,MAAA;;AAEH,MAAA,KAAK,QAAL;AACG;QACA,IAAIJ,IAAI,KAAK,IAAb,EAAmB;AAAE,UAAA,MAAA;AAAQ,SAAA;;AAE7B,QAAA,IAAI,OAAOA,IAAI,CAAC4B,OAAZ,KAAwB,UAA5B,EACA;AACG,UAAA,MAAM,IAAI7B,SAAJ,CAAe,CAAA,6DAAA,CAAf,CAAN,CAAA;AACF,SAAA;;QAED4B,SAAS,GAAG3B,IAAI,CAAC4B,OAAjB,CAAA;QACA3B,WAAW,GAAA,CAAA,qBAAA,GAAGD,IAAI,CAAC4B,OAAL,CAAaxB,SAAhB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA6BJ,IAAI,CAACI,SAA7C,CAAA;AACA,QAAA,MAAA;AAlBN,KAAA;;AAqBA,IAAA,IAAI,OAAOuB,SAAP,KAAqB,UAAzB,EACA;MACG,qBAAkBA,CAAAA,IAAAA,EAAAA,YAAAA,CAAAA,CAAAA,SAAlB,GAA8BA,SAA9B,CAAA;AACF,KAHD,MAKA;MACG,MAAME,YAAY,GAAG,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAkBF,SAAvC,CAAA;;AACA,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAkBA,SAAlB,GAA8B,IAA9B,CAFH;;AAKG,MAAA,IAAI,OAAOE,YAAP,KAAwB,UAA5B,EAAwC;AAAE,QAAA,qBAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAAsB,OAAA;;AAChE,MAAA,OAAA;AACF,KAAA;;AAED,IAAA,IAAI,OAAO5B,WAAP,KAAuB,UAA3B,EACA;AACG,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,EAAoBA,WAAW,CAAA,qBAAA,CAAC,IAAD,EAAA,aAAA,CAAA,CAA/B,EADH;;;AAIG,MAAA,IAAI,OAAO,qBAAA,CAAA,IAAP,EAA6B,YAAA,CAAA,KAAA,UAAjC,EACA;AACG,QAAA,MAAM,IAAIW,KAAJ,CACJ,CAAA,gGAAA,CADI,CAAN,CAAA;AAEF,OAAA;AACH,KAVD,MAYA;AACG;AACA;AACA,MAAA,qBAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AACF,KAAA;AACH,GAAA;;AAEDkB,EAAAA,KAAK,GACL;IACG,MAAMD,YAAY,GAAG,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAkBF,SAAvC,CAAA;;IAEA,qBAAkBA,CAAAA,IAAAA,EAAAA,YAAAA,CAAAA,CAAAA,SAAlB,GAA8B,IAA9B,CAAA;;AAEA,IAAA,IAAI,OAAO,qBAAA,CAAA,IAAP,EAA6B,YAAA,CAAA,KAAA,UAAjC,EACA;AACG,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AACA,MAAA,qBAAA,CAAA,IAAA,EAAA,YAAA,EAAoB,KAAK,CAAzB,CAAA,CAAA;AACF,KATJ;;;AAYG,IAAA,IAAI,OAAOE,YAAP,KAAwB,UAA5B,EAAwC;AAAE,MAAA,qBAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAAsB,KAAA;AAClE,GAAA;;AA5GJ,CAAA;;AA+GA,MAAME,OAAN,CACA;AACG7C,EAAAA,WAAW,CAAC8C,SAAD,EAAYC,UAAZ,EACX;IACG,IAAKD,CAAAA,SAAL,GAAiBA,SAAjB,CAAA;IACA,IAAKC,CAAAA,UAAL,GAAkBA,UAAlB,CAAA;AAEA,IAAA,MAAMC,YAAY,GAAG;AAAE7B,MAAAA,KAAK,EAAE,IAAT;AAAe8B,MAAAA,IAAI,EAAE,IAAA;KAA1C,CAAA;AAEA,IAAA,MAAMC,SAAS,GAAG;AACfC,MAAAA,MAAM,EAAE,IAAKA,CAAAA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CADO;;AAGf;AACT;AACA;AACA;AACA;AACA;AACS,MAAA,CAACvD,MAAM,CAACC,QAAR,GAAmB,aACnB;AACG,QAAA,IAAI,CAACkD,YAAY,CAAC7B,KAAlB,EAAyB;AAAE,UAAA,OAAA;AAAS,SAAA;;AAEpC,QAAA,KAAK,MAAMA,KAAX,IAAoB6B,YAAY,CAAC7B,KAAjC,EAAwC;AAAE,UAAA,MAAMA,KAAN,CAAA;AAAc,SAAA;AAC1D,OAAA;AAdc,KAAlB,CANH;;AAwBGf,IAAAA,MAAM,CAACiD,gBAAP,CAAwBH,SAAxB,EAAmC;AAChCD,MAAAA,IAAI,EAAE;QAAEhB,GAAG,EAAE,MAAMe,YAAY,CAACC,IAAAA;OADA;AAEhCK,MAAAA,QAAQ,EAAE;QAAErB,GAAG,EAAE,MAAM,IAAA,CAAKqB,QAAL,EAAA;OAFS;AAGhChD,MAAAA,MAAM,EAAE;AAAE2B,QAAAA,GAAG,EAAE,MAAMsB,KAAK,CAACC,OAAN,CAAcR,YAAY,CAAC7B,KAA3B,IAAoC6B,YAAY,CAAC7B,KAAb,CAAmBb,MAAvD,GAAgE,CAAA;AAA7E,OAAA;KAHX,CAAA,CAAA;IAMAF,MAAM,CAACqD,MAAP,CAAcP,SAAd,CAAA,CAAA;IAEAF,YAAY,CAACE,SAAb,GAAyBA,SAAzB,CAAA;IAEA,IAAKF,CAAAA,YAAL,GAAoBA,YAApB,CAAA;AAEA,IAAA,OAAO,CAAC,IAAD,EAAOA,YAAP,CAAP,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACGU,EAAAA,cAAc,CAACC,QAAD,EAAWC,OAAX,EACd;IACG,IAAIC,OAAO,GAAG,IAAd,CAAA;AACA,IAAA,MAAMC,QAAQ,GAAG,IAAKd,CAAAA,YAAL,CAAkB7B,KAAnC,CAAA;;AAEA,IAAA,IAAI2C,QAAJ,EACA;MACG,KAAK,IAAI9B,IAAI,GAAG8B,QAAQ,CAACxD,MAAzB,EAAiC,EAAE0B,IAAF,IAAU,CAA3C,GACA;AACG6B,QAAAA,OAAO,IAAIC,QAAQ,CAAC9B,IAAD,CAAR,GAAiB,UAAjB,IAA+B6B,OAAO,IAAI,CAA1C,CAAA,IAAgDA,OAAO,IAAI,CAA3D,CAAX,CAAA;AACF,OAAA;AACH,KAAA;;AAED,IAAA,IAAA,CAAKb,YAAL,CAAkBC,IAAlB,GAAyBY,OAAzB,CAAA;;AAEA,IAAA,IAAID,OAAO,KAAKC,OAAZ,GAAsB,CAACE,cAAc,CAACJ,QAAD,EAAWG,QAAX,CAArC,GAA4D,IAAhE,EAAsE;AAAE,MAAA,IAAA,CAAKf,UAAL,EAAA,CAAA;AAAoB,KAAA;AAC9F,GAAA;;AAEDiB,EAAAA,YAAY,CAACC,cAAD,EAAiBC,WAAjB,EACZ;IACG,IAAKD,CAAAA,cAAL,GAAsBA,cAAtB,CAAA;IACA,IAAKC,CAAAA,WAAL,GAAmBA,WAAnB,CAAA;;AAEA,IAAA,IAAA,CAAKC,MAAL,GAAc,CAACC,CAAD,EAAIC,CAAJ,KACd;AACG,MAAA,OAAO,KAAKH,WAAL,CAAiBzB,SAAjB,CAA2B,KAAKK,SAAL,CAAesB,CAAf,CAA3B,EAA8C,IAAKtB,CAAAA,SAAL,CAAeuB,CAAf,CAA9C,CAAP,CAAA;KAFH,CAAA;AAIF,GAAA;;AAEDf,EAAAA,QAAQ,GACR;AACG,IAAA,OAAO,IAAKW,CAAAA,cAAL,CAAoB9D,OAApB,CAA4BG,MAA5B,GAAqC,CAArC,IAA0C,IAAK4D,CAAAA,WAAL,CAAiBzB,SAAjB,KAA+B,IAAhF,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AACG6B,EAAAA,UAAU,GACV;IACG,MAAMxD,IAAI,GAAG,EAAb,CAAA;AAEA,IAAA,MAAMX,OAAO,GAAG,IAAK8D,CAAAA,cAAL,CAAoB9D,OAApC,CAAA;IAEA,IAAIoE,OAAO,GAAG,IAAd,CAAA;;AAEA,IAAA,KAAK,IAAIvC,IAAI,GAAG,CAAX,EAAc1B,MAAM,GAAG,IAAKwC,CAAAA,SAAL,CAAexC,MAA3C,EAAmD0B,IAAI,GAAG1B,MAA1D,EAAkE0B,IAAI,EAAtE,EACA;AACGuC,MAAAA,OAAO,GAAG,IAAV,CAAA;;AAEA,MAAA,KAAK,IAAIC,OAAO,GAAG,CAAd,EAAiBC,SAAS,GAAGtE,OAAO,CAACG,MAA1C,EAAkDkE,OAAO,GAAGC,SAA5D,EAAuED,OAAO,EAA9E,EACA;AACG,QAAA,IAAI,CAACrE,OAAO,CAACqE,OAAD,CAAP,CAAiB7D,MAAjB,CAAwB,IAAA,CAAKmC,SAAL,CAAed,IAAf,CAAxB,CAAL,EACA;AACGuC,UAAAA,OAAO,GAAG,KAAV,CAAA;AACA,UAAA,MAAA;AACF,SAAA;AACH,OAAA;;AAED,MAAA,IAAIA,OAAJ,EAAa;QAAEzD,IAAI,CAACS,IAAL,CAAUS,IAAV,CAAA,CAAA;AAAkB,OAAA;AACnC,KAAA;;AAED,IAAA,OAAOlB,IAAP,CAAA;AACF,GAAA;;AAEDqC,EAAAA,MAAM,GACN;AACG,IAAA,MAAMQ,QAAQ,GAAG,IAAKX,CAAAA,YAAL,CAAkB7B,KAAnC,CAAA;AACA,IAAA,MAAMyC,OAAO,GAAG,IAAA,CAAKZ,YAAL,CAAkBC,IAAlC,CAFH;;AAKG,IAAA,IAAK,IAAKgB,CAAAA,cAAL,CAAoB9D,OAApB,CAA4BG,MAA5B,KAAuC,CAAvC,IAA4C,CAAC,IAAK4D,CAAAA,WAAL,CAAiBzB,SAA/D,IACF,IAAKO,CAAAA,YAAL,CAAkB7B,KAAlB,IAA2B,IAAA,CAAK2B,SAAL,CAAexC,MAAf,KAA0B,IAAA,CAAK0C,YAAL,CAAkB7B,KAAlB,CAAwBb,MAD/E,EAEA;AACG,MAAA,IAAA,CAAK0C,YAAL,CAAkB7B,KAAlB,GAA0B,IAA1B,CAAA;AACF,KATJ;;;IAYG,IAAI,IAAA,CAAK8C,cAAL,CAAoB9D,OAApB,CAA4BG,MAA5B,GAAqC,CAAzC,EAA4C;AAAE,MAAA,IAAA,CAAK0C,YAAL,CAAkB7B,KAAlB,GAA0B,IAAA,CAAKmD,UAAL,EAA1B,CAAA;AAA8C,KAAA;;AAE5F,IAAA,IAAI,IAAKJ,CAAAA,WAAL,CAAiBzB,SAArB,EACA;AACG;AACA,MAAA,IAAI,CAAC,IAAA,CAAKO,YAAL,CAAkB7B,KAAvB,EAA8B;AAAE,QAAA,IAAA,CAAK6B,YAAL,CAAkB7B,KAAlB,GAA0B,CAAC,GAAGoC,KAAK,CAAC,IAAKT,CAAAA,SAAL,CAAexC,MAAhB,CAAL,CAA6BoE,IAA7B,EAAJ,CAA1B,CAAA;AAAqE,OAAA;;AAErG,MAAA,IAAA,CAAK1B,YAAL,CAAkB7B,KAAlB,CAAwBwD,IAAxB,CAA6B,KAAKR,MAAlC,CAAA,CAAA;AACF,KAAA;;AAED,IAAA,IAAA,CAAKT,cAAL,CAAoBC,QAApB,EAA8BC,OAA9B,CAAA,CAAA;AACF,GAAA;;AAjJJ,CAAA;AAoJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,cAAT,CAAwBK,CAAxB,EAA2BC,CAA3B,EACA;EACG,IAAID,CAAC,KAAKC,CAAV,EAAa;AAAE,IAAA,OAAO,IAAP,CAAA;AAAc,GAAA;;AAC7B,EAAA,IAAID,CAAC,KAAK,IAAN,IAAcC,CAAC,KAAK,IAAxB,EAA8B;AAAE,IAAA,OAAO,KAAP,CAAA;AAAe,GAAA;AAE/C;;;AACA,EAAA,IAAID,CAAC,CAAC9D,MAAF,KAAa+D,CAAC,CAAC/D,MAAnB,EAA2B;AAAE,IAAA,OAAO,KAAP,CAAA;AAAe,GAAA;;EAE5C,KAAK,IAAI0B,IAAI,GAAGoC,CAAC,CAAC9D,MAAlB,EAA0B,EAAE0B,IAAF,IAAU,CAApC,GACA;AACG;IACA,IAAIoC,CAAC,CAACpC,IAAD,CAAD,KAAYqC,CAAC,CAACrC,IAAD,CAAjB,EAAyB;AAAE,MAAA,OAAO,KAAP,CAAA;AAAe,KAAA;AAC5C,GAAA;;AAED,EAAA,OAAO,IAAP,CAAA;AACF,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAgKKnC,iBAAAA,GAAAA,MAAM,CAACC;;AA/JZ,MAAM8E,eAAN,CACA;AAMG;AACH;AACA;;AAGG;AACH;AACA;;AAGG;AACH;AACA;;AAGG;AACH;AACA;;AAKG;AACH;AACA;AACA;AACA;AACA;AACG5E,EAAAA,WAAW,CAACc,IAAI,GAAG,KAAK,CAAb,EACX;AAAA,IAAA,2BAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,MAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,MAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,aAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,gBAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,aAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,cAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;MAAA,KATiB,EAAA,EAAA;AASjB,KAAA,CAAA,CAAA;;IACG,IAAI+D,YAAY,GAAG,KAAK,CAAxB,CAAA;IACA,IAAI1E,OAAO,GAAG,KAAK,CAAnB,CAAA;AACA,IAAA,IAAIwE,IAAI,GAAG,KAAK,CAAhB,CAHH;;IAMG,IAAI,CAACG,aAAa,CAAChE,IAAD,CAAd,IAAwB,OAAOA,IAAP,KAAgB,QAA5C,EACA;AACG,MAAA,IAAI,CAACgE,aAAa,CAAChE,IAAI,CAACA,IAAN,CAAlB,EACA;AACG,QAAA,MAAM,IAAID,SAAJ,CAAe,CAAA,kEAAA,CAAf,CAAN,CAAA;AACF,OAAA;;MAEDgE,YAAY,GAAG/D,IAAI,CAACA,IAApB,CAAA;;AAEA,MAAA,IAAIA,IAAI,CAACX,OAAL,KAAiB,KAAK,CAA1B,EACA;AACG,QAAA,IAAI2E,aAAa,CAAChE,IAAI,CAACX,OAAN,CAAjB,EACA;UACGA,OAAO,GAAGW,IAAI,CAACX,OAAf,CAAA;AACF,SAHD,MAKA;AACG,UAAA,MAAM,IAAIU,SAAJ,CAAe,CAAA,qEAAA,CAAf,CAAN,CAAA;AACF,SAAA;AACH,OAAA;;AAED,MAAA,IAAIC,IAAI,CAAC6D,IAAL,KAAc,KAAK,CAAvB,EACA;AACG,QAAA,IAAI,OAAO7D,IAAI,CAAC6D,IAAZ,KAAqB,UAAzB,EACA;UACGA,IAAI,GAAG7D,IAAI,CAAC6D,IAAZ,CAAA;AACF,SAHD,MAKA;AACG,UAAA,MAAM,IAAI9D,SAAJ,CAAe,CAAA,oEAAA,CAAf,CAAN,CAAA;AACF,SAAA;AACH,OAAA;AACH,KAhCD,MAkCA;AACG,MAAA,IAAI,CAACiE,aAAa,CAAChE,IAAD,CAAlB,EAA0B;AAAE,QAAA,MAAM,IAAID,SAAJ,CAAe,CAAA,8CAAA,CAAf,CAAN,CAAA;AAAwE,OAAA;;AAEpGgE,MAAAA,YAAY,GAAG/D,IAAf,CAAA;AACF,KA5CJ;;;IA+CG,qBAAcyC,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,KAAK,CAACC,OAAN,CAAcqB,YAAd,CAA8BA,GAAAA,YAA9B,GAA6C,CAAC,GAAGA,YAAJ,CAA3D,CAAA,CAAA;;AAEA,IAAA,CAAA,gCAAA,CAAC,IAAD,EAAA,MAAA,CAAA,CAAA,KAAA,EAAA,gCAAA,CAAc,IAAd,EAAA,aAAA,CAAA,CAAA,KAAA,CAAA,GAAoC,IAAIhC,OAAJ,CAAA,qBAAA,CAAY,IAAZ,EAAA,MAAA,CAAA,EAAyB,sBAAaO,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,QAAAA,CAAAA,CAAAA,IAAb,CAAkB,IAAlB,CAAzB,CAApC,CAAA;IAEA,CAAC,gCAAA,CAAA,IAAD,EAAgB,QAAA,CAAA,CAAA,KAAA,EAAA,gCAAA,CAAA,IAAhB,EAAwC,gBAAA,CAAA,CAAA,KAAA,CAAA,GAAA,IAAIrD,cAAJ,CAAmB,qBAAmBmD,CAAAA,IAAAA,EAAAA,aAAAA,CAAAA,CAAAA,SAAnB,CAA6BC,MAAhD,CAAxC,CAAA;IACA,CAAC,gCAAA,CAAA,IAAD,EAAa,KAAA,CAAA,CAAA,KAAA,EAAA,gCAAA,CAAA,IAAb,EAAkC,aAAA,CAAA,CAAA,KAAA,CAAA,GAAA,IAAIX,WAAJ,CAAgB,qBAAmBU,CAAAA,IAAAA,EAAAA,aAAAA,CAAAA,CAAAA,SAAnB,CAA6BC,MAA7C,CAAlC,CAAA;;AAEA,IAAA,qBAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAYa,YAAZ,CAAyB,qBAAA,CAAA,IAAzB,EAA+C,gBAAA,CAAA,EAAA,qBAAA,CAAA,IAA/C,kBAtDH;;;AAyDG,IAAA,IAAI7D,OAAJ,EAAa;AAAE,MAAA,IAAA,CAAKA,OAAL,CAAaM,GAAb,CAAiB,GAAGN,OAApB,CAAA,CAAA;AAA+B,KAAA;;AAC9C,IAAA,IAAIwE,IAAJ,EAAU;AAAE,MAAA,IAAA,CAAKA,IAAL,CAAUhD,GAAV,CAAcgD,IAAd,CAAA,CAAA;AAAsB,KAAA;AACpC,GAAA;AAED;AACH;AACA;;;AACc,EAAA,IAAPxE,OAAO,GAAG;AAAE,IAAA,OAAA,qBAAA,CAAO,IAAP,EAAA,QAAA,CAAA,CAAA;AAAuB,GAAA;AAEvC;AACH;AACA;AACA;AACA;;;AACY,EAAA,IAALgB,KAAK,GAAG;AAAE,IAAA,OAAO,2CAAmB+B,SAA1B,CAAA;AAAsC,GAAA;AAEpD;AACH;AACA;AACA;AACA;;;AACa,EAAA,IAAN5C,MAAM,GAAG;AAAE,IAAA,OAAO,oCAAYA,MAAnB,CAAA;AAA4B,GAAA;AAE3C;AACH;AACA;;;AACW,EAAA,IAAJqE,IAAI,GAAG;AAAE,IAAA,OAAA,qBAAA,CAAO,IAAP,EAAA,KAAA,CAAA,CAAA;AAAoB,GAAA;AAEjC;AACH;AACA;AACA;AACA;AACA;AACA;;;EACGzD,SAAS,CAAC6D,OAAD,EACT;AACG,IAAA,qBAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAoBxD,IAApB,CAAyBwD,OAAzB,CAAA,CADH;;;AAGGA,IAAAA,OAAO,CAAC,IAAD,CAAP,CAHH;AAKG;;AACA,IAAA,OAAO,MACP;MACG,MAAM5D,KAAK,GAAG,qBAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAoBC,SAApB,CAA+B4D,GAAD,IAASA,GAAG,KAAKD,OAA/C,CAAd,CAAA;;MACA,IAAI5D,KAAK,IAAI,CAAb,EAAgB;AAAE,QAAA,qBAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAoBG,MAApB,CAA2BH,KAA3B,EAAkC,CAAlC,CAAA,CAAA;AAAuC,OAAA;KAH5D,CAAA;AAKF,GAAA;AAED;AACH;AACA;;;AASG;AACH;AACA;AACA;AACA;AACA;EACG,EACA,iBAAA,CAAA,GAAA;IACG,MAAM8D,KAAK,GAAG,qBAAA,CAAA,IAAH,EAAX,MAAA,CAAA,CAAA;;AAEA,IAAA,IAAIA,KAAK,CAAC3E,MAAN,KAAiB,CAArB,EAAwB;AAAE,MAAA,OAAA;AAAS,KAAA;;IAEnC,IAAI,qBAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAYgD,QAAZ,EAAJ,EACA;AACG,MAAA,KAAK,MAAM/C,KAAX,IAAoB,IAAA,CAAKY,KAAzB,EAAgC;QAAE,MAAM8D,KAAK,CAAC1E,KAAD,CAAX,CAAA;AAAqB,OAAA;AACzD,KAHD,MAKA;AACG,MAAA,KAAK,MAAMA,KAAX,IAAoB0E,KAApB,EAA2B;AAAE,QAAA,MAAM1E,KAAN,CAAA;AAAc,OAAA;AAC7C,KAAA;AACH,GAAA;;AA5KJ,CAAA;AA+KA;AACA;AACA;AACA;AACA;AACA;AACA;;;AApCG,SAAA,QAAA,GAAA;AACG;AACA;EACA,MAAM2E,aAAa,GAAG,qBAAA,CAAA,IAAH,EAAnB,cAAA,CAAA,CAAA;;AACA,EAAA,KAAK,IAAIlD,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGkD,aAAa,CAAC5E,MAAxC,EAAgD0B,IAAI,EAApD,EAAwD;AAAEkD,IAAAA,aAAa,CAAClD,IAAD,CAAb,CAAoB,IAApB,CAAA,CAAA;AAA4B,GAAA;AACxF,CAAA;;AAgCJ,SAAS8C,aAAT,CAAuBhE,IAAvB,EACA;EACG,OAAOA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,IAAoC,OAAOA,IAAP,KAAgB,QAApD,IAAgE,OAAOA,IAAI,CAACjB,MAAM,CAACC,QAAR,CAAX,KAAiC,UAAxG,CAAA;AACF;;ACxwBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqF,eAAT,CAAyBC,KAAzB,EACP;EACG,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAArC,EAAwC;AAAE,IAAA,OAAO,KAAP,CAAA;AAAe,GAAA;;AAEzD,EAAA,QAAQ,OAAOA,KAAf;AAEG,IAAA,KAAK,UAAL,CAAA;AACA,IAAA,KAAK,QAAL;AACG,MAAA,OAAO,OAAOA,KAAK,CAAClE,SAAb,KAA2B,UAAlC,CAAA;AAJN,GAAA;;AAOA,EAAA,OAAO,KAAP,CAAA;AACF,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASmE,gBAAT,CAA0BD,KAA1B,EACP;EACG,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAArC,EAAwC;AAAE,IAAA,OAAO,KAAP,CAAA;AAAe,GAAA;;AAEzD,EAAA,QAAQ,OAAOA,KAAf;AAEG,IAAA,KAAK,UAAL,CAAA;AACA,IAAA,KAAK,QAAL;AACG,MAAA,OAAO,OAAOA,KAAK,CAAClE,SAAb,KAA2B,UAA3B,IAAyC,OAAOkE,KAAK,CAACjC,MAAb,KAAwB,UAAxE,CAAA;AAJN,GAAA;;AAOA,EAAA,OAAO,KAAP,CAAA;AACF,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASmC,eAAT,CAAyBF,KAAzB,EACP;EACG,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAArC,EAAwC;AAAE,IAAA,OAAO,KAAP,CAAA;AAAe,GAAA;;AAEzD,EAAA,QAAQ,OAAOA,KAAf;AAEG,IAAA,KAAK,UAAL,CAAA;AACA,IAAA,KAAK,QAAL;AACG,MAAA,OAAO,OAAOA,KAAK,CAAClE,SAAb,KAA2B,UAA3B,IAAyC,OAAOkE,KAAK,CAACzD,GAAb,KAAqB,UAArE,CAAA;AAJN,GAAA;;AAOA,EAAA,OAAO,KAAP,CAAA;AACF,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS4D,oBAAT,CAA8BH,KAA9B,EAAqCjC,MAArC,EACP;EACG,IAAIqC,UAAU,GAAG,KAAjB,CAAA;AAEA,EAAA,OAAOJ,KAAK,CAAClE,SAAN,CAAiBG,KAAD,IAAW;IAC/B,IAAI,CAACmE,UAAL,EACA;AACGA,MAAAA,UAAU,GAAG,IAAb,CAAA;AACF,KAHD,MAIK;MACFrC,MAAM,CAAC9B,KAAD,CAAN,CAAA;AACF,KAAA;AACH,GARM,CAAP,CAAA;AASF,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASoE,kBAAT,CAA4BL,KAA5B,EAAmCM,KAAnC,EAA0CvC,MAA1C,EACP;EACG,IAAIqC,UAAU,GAAG,KAAjB,CAAA;AAEA,EAAA,OAAOJ,KAAK,CAAClE,SAAN,CAAiBG,KAAD,IAAW;IAC/B,IAAI,CAACmE,UAAL,EACA;AACGA,MAAAA,UAAU,GAAG,IAAb,CAAA;MACAE,KAAK,CAACrE,KAAD,CAAL,CAAA;AACF,KAJD,MAKK;MACF8B,MAAM,CAAC9B,KAAD,CAAN,CAAA;AACF,KAAA;AACH,GATM,CAAP,CAAA;AAUF;;AC7HD;;AAGA,SAASsE,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,EAAA,OAAOA,OAAO,CAACtF,MAAR,GAAiB,CAAxB,CAAA;AACD,CAAA;;AACD,SAASuF,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,EAAA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB3E,KAAvB,EAA8B4E,KAA9B,EAAqC;IACnC,OAAO;MACL/E,SAAS,EAAEgF,QAAQ,CAACF,GAAD,EAAM3E,KAAN,EAAa4E,KAAb,CAAR,CAA4B/E,SAAAA;KADzC,CAAA;AAGD,GAAA;;EACD,SAASgF,QAAT,CAAkBF,GAAlB,EAAuB3E,KAAvB,EAA8B4E,KAAK,GAAGE,IAAtC,EAA4C;IAC1C,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAA,OAAOJ,KAAK,CAAC,SAASK,QAAT,CAAkBC,SAAlB,EAA6B;AACxC,QAAA,IAAIT,OAAJ,EAAa;UACXA,OAAO,CAACU,OAAR,CAAgBR,GAAhB,EAAqBS,IAAI,CAACC,SAAL,CAAeH,SAAf,CAArB,CAAA,CAAA;AACD,SAAA;;QACD,OAAOF,KAAK,CAACE,SAAD,CAAZ,CAAA;AACD,OALW,CAAZ,CAAA;AAMD,KAAA;;AACD,IAAA,IAAIT,OAAJ,EAAa;AACX,MAAA,MAAMa,YAAY,GAAGb,OAAO,CAACc,OAAR,CAAgBZ,GAAhB,CAArB,CAAA;;MACA,IAAI;AACF,QAAA,IAAIW,YAAJ,EAAkB;AAChBtF,UAAAA,KAAK,GAAGoF,IAAI,CAACI,KAAL,CAAWF,YAAX,CAAR,CAAA;AACD,SAAA;AACF,OAJD,CAIE,OAAOG,GAAP,EAAY,EACb;;MACDhB,OAAO,CAACU,OAAR,CAAgBR,GAAhB,EAAqBS,IAAI,CAACC,SAAL,CAAerF,KAAf,CAArB,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,MAAM0F,OAAO,GAAGC,UAAU,CAAC3F,KAAD,EAAQ4E,KAAK,GAAGG,UAAH,GAAgB,KAAK,CAAlC,CAA1B,CAAA;;IACA,SAASzE,GAAT,CAAa4E,SAAb,EAAwB;AACtB,MAAA,IAAIT,OAAJ,EAAa;QACXA,OAAO,CAACU,OAAR,CAAgBR,GAAhB,EAAqBS,IAAI,CAACC,SAAL,CAAeH,SAAf,CAArB,CAAA,CAAA;AACD,OAAA;;MACDQ,OAAO,CAACpF,GAAR,CAAY4E,SAAZ,CAAA,CAAA;AACD,KAAA;;IACD,SAASpD,MAAT,CAAgB8D,EAAhB,EAAoB;MAClBtF,GAAG,CAACsF,EAAE,CAACC,GAAK,CAACH,OAAD,CAAN,CAAH,CAAH,CAAA;AACD,KAAA;;AACD,IAAA,SAAS7F,SAAT,CAAmBiG,GAAnB,EAAwBC,UAAU,GAAGjB,IAArC,EAA2C;AACzC,MAAA,OAAOY,OAAO,CAAC7F,SAAR,CAAkBiG,GAAlB,EAAuBC,UAAvB,CAAP,CAAA;AACD,KAAA;;IACD,OAAO;MAACzF,GAAD;MAAMwB,MAAN;AAAcjC,MAAAA,SAAAA;KAArB,CAAA;AACD,GAAA;;EACD,SAASmG,OAAT,CAAiBrB,GAAjB,EAAsBsB,MAAtB,EAA8BL,EAA9B,EAAkCM,aAAlC,EAAiD;IAC/C,MAAMC,MAAM,GAAG,CAACjE,KAAK,CAACC,OAAN,CAAc8D,MAAd,CAAhB,CAAA;IACA,MAAMG,YAAY,GAAGD,MAAM,GAAG,CAACF,MAAD,CAAH,GAAcA,MAAzC,CAAA;;IACA,IAAIxB,OAAO,IAAIA,OAAO,CAACc,OAAR,CAAgBZ,GAAhB,CAAf,EAAqC;MACnC,IAAI;QACFuB,aAAa,GAAGd,IAAI,CAACI,KAAL,CAAWf,OAAO,CAACc,OAAR,CAAgBZ,GAAhB,CAAX,CAAhB,CAAA;AACD,OAFD,CAEE,OAAOc,GAAP,EAAY,EACb;AACF,KAAA;;AACD,IAAA,OAAOf,QAAQ,CAACC,GAAD,EAAMuB,aAAN,EAAsB5F,GAAD,IAAS;MAC3C,IAAI+F,MAAM,GAAG,KAAb,CAAA;MACA,MAAM7F,MAAM,GAAG,EAAf,CAAA;MACA,IAAI8F,OAAO,GAAG,CAAd,CAAA;MACA,IAAIC,OAAO,GAAGzB,IAAd,CAAA;;MACA,MAAM0B,IAAI,GAAG,MAAM;AACjB,QAAA,IAAIF,OAAJ,EAAa;AACX,UAAA,OAAA;AACD,SAAA;;QACDC,OAAO,EAAA,CAAA;QACP,MAAME,KAAK,GAAGN,MAAM,GAAG3F,MAAM,CAAC,CAAD,CAAT,GAAeA,MAAnC,CAAA;;AACA,QAAA,IAAI8D,eAAe,CAACsB,EAAD,CAAnB,EAAyB;AACvBtF,UAAAA,GAAG,CAACsF,EAAE,CAACa,KAAD,CAAH,CAAH,CAAA;AACD,SAFD,MAEO;AACL,UAAA,MAAMC,MAAM,GAAGd,EAAE,CAACa,KAAD,EAAQnG,GAAR,CAAjB,CAAA;UACAiG,OAAO,GAAGI,WAAW,CAACD,MAAD,CAAX,GAAsBA,MAAtB,GAA+B5B,IAAzC,CAAA;AACD,SAAA;OAXH,CAAA;;AAaA,MAAA,MAAM8B,aAAa,GAAGR,YAAY,CAACS,GAAb,CAAiB,CAAC9C,KAAD,EAAQ+C,CAAR,KAAc/C,KAAK,CAAClE,SAAN,CAAiBG,KAAD,IAAW;AAC9EQ,QAAAA,MAAM,CAACsG,CAAD,CAAN,GAAY9G,KAAZ,CAAA;AACAsG,QAAAA,OAAO,IAAI,EAAE,CAAKQ,IAAAA,CAAP,CAAX,CAAA;;AACA,QAAA,IAAIT,MAAJ,EAAY;UACVG,IAAI,EAAA,CAAA;AACL,SAAA;AACF,OANoD,EAMlD,MAAM;QACPF,OAAO,IAAI,KAAKQ,CAAhB,CAAA;AACD,OARoD,CAA/B,CAAtB,CAAA;AASAT,MAAAA,MAAM,GAAG,IAAT,CAAA;MACAG,IAAI,EAAA,CAAA;MACJ,OAAO,SAASO,IAAT,GAAgB;QACrBC,OAAO,CAACJ,aAAD,CAAP,CAAA;QACAL,OAAO,EAAA,CAAA;OAFT,CAAA;AAID,KAjCc,CAAf,CAAA;AAkCD,GAAA;;EACD,OAAO;IACL7B,QADK;IAELG,QAFK;IAGLmB,OAHK;AAILpF,IAAAA,GAAG,EAAEiF,GAAAA;GAJP,CAAA;AAMD;;AC3FD,IAAIpB,SAAO,GAAG,OAAOwC,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACC,YAAvC,GAAsD,KAAK,CAAzE,CAAA;AACA,IAAIC,GAAC,GAAG3C,SAAS,CAACC,SAAD,CAAjB,CAAA;AAEA,IAAII,UAAQ,GAAGsC,GAAC,CAACtC,QAAjB;;ACLA;AACA;AACA;;;;AAEO,MAAMuC,YAAN,CACP;AAAA,EAAA,WAAA,GAAA;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAAC,SAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAIa,IAAIxI,GAAJ,EAAA;AAJb,KAAA,CAAA,CAAA;AAAA,GAAA;;AAMG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG0G,EAAAA,OAAO,CAACZ,GAAD,EAAM2C,YAAN,EACP;IACG,IAAItH,KAAK,GAAGsH,YAAZ,CAAA;AAEA,IAAA,MAAMhC,YAAY,GAAG4B,YAAY,CAAC3B,OAAb,CAAqBZ,GAArB,CAArB,CAAA;;AAEA,IAAA,IAAIW,YAAY,KAAK,KAAK,CAA1B,EACA;AACGtF,MAAAA,KAAK,GAAGoF,IAAI,CAACI,KAAL,CAAWF,YAAX,CAAR,CAAA;AACF,KAAA;;AAED,IAAA,OAAOtF,KAAP,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACGuH,EAAAA,QAAQ,CAAC5C,GAAD,EAAM2C,YAAN,EACR;AACG,IAAA,OAAOE,aAAW,CAAC,qBAAA,CAAA,IAAD,cAAe7C,GAAf,EAAoB2C,YAApB,CAAlB,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;;;AACGnC,EAAAA,OAAO,CAACR,GAAD,EAAM3E,KAAN,EACP;AACG,IAAA,MAAM+D,KAAK,GAAGyD,aAAW,uBAAC,IAAD,EAAAH,SAAA,CAAA,EAAe1C,GAAf,CAAzB,CAAA;IACAZ,KAAK,CAACzD,GAAN,CAAUN,KAAV,CAAA,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACGyH,EAAAA,eAAe,CAAC9C,GAAD,EAAM2C,YAAN,EACf;IACG,MAAMvD,KAAK,GAAGyD,aAAW,CAAA,qBAAA,CAAC,IAAD,EAAe7C,SAAAA,CAAAA,EAAAA,GAAf,EAAoB2C,YAApB,CAAzB,CAAA;AACA,IAAA,MAAMtH,KAAK,GAAG+D,KAAK,CAACnD,GAAN,EAAd,CAAA;IACA,MAAM8G,QAAQ,GAAG,OAAO1H,KAAP,KAAiB,SAAjB,GAA6B,CAACA,KAA9B,GAAsC,KAAvD,CAAA;IAEA+D,KAAK,CAACzD,GAAN,CAAUoH,QAAV,CAAA,CAAA;AACA,IAAA,OAAOA,QAAP,CAAA;AACF,GAAA;;AA1EJ,CAAA;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,aAAT,CAAqBvB,MAArB,EAA6BtB,GAA7B,EAAkC2C,YAAY,GAAG,KAAK,CAAtD,EACA;AACG,EAAA,IAAIvD,KAAK,GAAGkC,MAAM,CAACrF,GAAP,CAAW+D,GAAX,CAAZ,CAAA;;AACA,EAAA,IAAIZ,KAAK,KAAK,KAAK,CAAnB,EACA;AACGA,IAAAA,KAAK,GAAG4D,gBAAc,CAAChD,GAAD,EAAM2C,YAAN,CAAtB,CAAA;AACArB,IAAAA,MAAM,CAAC3F,GAAP,CAAWqE,GAAX,EAAgBZ,KAAhB,CAAA,CAAA;AACF,GAAA;;AAED,EAAA,OAAOA,KAAP,CAAA;AACF,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4D,gBAAT,CAAwBhD,GAAxB,EAA6B2C,YAAY,GAAG,KAAK,CAAjD,EACA;EACG,IACA;AACG,IAAA,MAAMtH,KAAK,GAAGkH,YAAY,CAAC3B,OAAb,CAAqBZ,GAArB,CAAd,CAAA;;AACA,IAAA,IAAI3E,KAAJ,EAAW;AAAEsH,MAAAA,YAAY,GAAGlC,IAAI,CAACI,KAAL,CAAWxF,KAAX,CAAf,CAAA;AAAmC,KAAA;GAHnD,CAKA,OAAOyF,GAAP,EAAY;AAAE;AAAM,GAAA;;AAEpB,EAAA,MAAM1B,KAAK,GAAGc,UAAQ,CAACF,GAAD,EAAM2C,YAAN,CAAtB,CAAA;;AAGAvD,EAAAA,KAAK,CAACnD,GAAN,GAAY,MAAMA,GAAG,CAACmD,KAAD,CAArB,CAAA;;AAEA,EAAA,OAAOA,KAAP,CAAA;AACF;;AC/HD,IAAIU,OAAO,GAAG,OAAOwC,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACW,cAAvC,GAAwD,KAAK,CAA3E,CAAA;AACA,IAAIT,CAAC,GAAG3C,SAAS,CAACC,OAAD,CAAjB,CAAA;AAEA,IAAII,QAAQ,GAAGsC,CAAC,CAACtC,QAAjB;;ACLA;AACA;AACA;;;;AAEO,MAAMgD,cAAN,CACP;AAAA,EAAA,WAAA,GAAA;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,OAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAIa,IAAIhJ,GAAJ,EAAA;AAJb,KAAA,CAAA,CAAA;AAAA,GAAA;;AAMG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG0G,EAAAA,OAAO,CAACZ,GAAD,EAAM2C,YAAN,EACP;IACG,IAAItH,KAAK,GAAGsH,YAAZ,CAAA;AAEA,IAAA,MAAMhC,YAAY,GAAGsC,cAAc,CAACrC,OAAf,CAAuBZ,GAAvB,CAArB,CAAA;;AAEA,IAAA,IAAIW,YAAY,KAAK,KAAK,CAA1B,EACA;AACGtF,MAAAA,KAAK,GAAGoF,IAAI,CAACI,KAAL,CAAWF,YAAX,CAAR,CAAA;AACF,KAAA;;AAED,IAAA,OAAOtF,KAAP,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACGuH,EAAAA,QAAQ,CAAC5C,GAAD,EAAM2C,YAAN,EACR;AACG,IAAA,OAAOE,WAAW,CAAC,qBAAA,CAAA,IAAD,YAAe7C,GAAf,EAAoB2C,YAApB,CAAlB,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;;;AACGnC,EAAAA,OAAO,CAACR,GAAD,EAAM3E,KAAN,EACP;AACG,IAAA,MAAM+D,KAAK,GAAGyD,WAAW,uBAAC,IAAD,EAAA,OAAA,CAAA,EAAe7C,GAAf,CAAzB,CAAA;IACAZ,KAAK,CAACzD,GAAN,CAAUN,KAAV,CAAA,CAAA;AACF,GAAA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACGyH,EAAAA,eAAe,CAAC9C,GAAD,EAAM2C,YAAN,EACf;IACG,MAAMvD,KAAK,GAAGyD,WAAW,CAAA,qBAAA,CAAC,IAAD,EAAe7C,OAAAA,CAAAA,EAAAA,GAAf,EAAoB2C,YAApB,CAAzB,CAAA;AACA,IAAA,MAAMtH,KAAK,GAAG+D,KAAK,CAACnD,GAAN,EAAd,CAAA;IACA,MAAM8G,QAAQ,GAAG,OAAO1H,KAAP,KAAiB,SAAjB,GAA6B,CAACA,KAA9B,GAAsC,KAAvD,CAAA;IAEA+D,KAAK,CAACzD,GAAN,CAAUoH,QAAV,CAAA,CAAA;AACA,IAAA,OAAOA,QAAP,CAAA;AACF,GAAA;;AA1EJ,CAAA;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,WAAT,CAAqBvB,MAArB,EAA6BtB,GAA7B,EAAkC2C,YAAY,GAAG,KAAK,CAAtD,EACA;AACG,EAAA,IAAIvD,KAAK,GAAGkC,MAAM,CAACrF,GAAP,CAAW+D,GAAX,CAAZ,CAAA;;AACA,EAAA,IAAIZ,KAAK,KAAK,KAAK,CAAnB,EACA;AACGA,IAAAA,KAAK,GAAG4D,cAAc,CAAChD,GAAD,EAAM2C,YAAN,CAAtB,CAAA;AACArB,IAAAA,MAAM,CAAC3F,GAAP,CAAWqE,GAAX,EAAgBZ,KAAhB,CAAA,CAAA;AACF,GAAA;;AAED,EAAA,OAAOA,KAAP,CAAA;AACF,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4D,cAAT,CAAwBhD,GAAxB,EAA6B2C,YAAY,GAAG,KAAK,CAAjD,EACA;EACG,IACA;AACG,IAAA,MAAMtH,KAAK,GAAG4H,cAAc,CAACrC,OAAf,CAAuBZ,GAAvB,CAAd,CAAA;;AACA,IAAA,IAAI3E,KAAJ,EAAW;AAAEsH,MAAAA,YAAY,GAAGlC,IAAI,CAACI,KAAL,CAAWxF,KAAX,CAAf,CAAA;AAAmC,KAAA;GAHnD,CAKA,OAAOyF,GAAP,EAAY;AAAE;AAAM,GAAA;;AAEpB,EAAA,MAAM1B,KAAK,GAAGc,QAAQ,CAACF,GAAD,EAAM2C,YAAN,CAAtB,CAAA;;AACAvD,EAAAA,KAAK,CAACnD,GAAN,GAAY,MAAMA,GAAG,CAACmD,KAAD,CAArB,CAAA;;AAEA,EAAA,OAAOA,KAAP,CAAA;AACF;;ACjID;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAAS+D,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,OAA1C,EAAmDC,OAAnD,EAA4D;AAC1E,EAAA,IAAIC,kBAAJ;AAAA,MAAwBC,YAAxB;MAAsCC,WAAW,GAAG,IAApD,CAAA;AACA,EAAA,IAAIC,gBAAgB,IAAG,SAAaL,IAAAA,OAAhB,CAApB,CAAA;;AACA,EAAA,IAAIM,aAAa,GAAG,CAACC,GAAD,EAAMlI,GAAN,KAAc;AACjC6H,IAAAA,kBAAkB,GAAG7H,GAArB,CAAA;;AACA,IAAA,IAAIgI,gBAAJ,EAAsB;AACrBF,MAAAA,YAAY,GAAGI,GAAf,CAAA;AACA,KAAA;;AACD,IAAA,IAAIH,WAAJ,EAAiB;AAChB,MAAA,IAAII,QAAQ,GAAGT,MAAM,CAACQ,GAAD,EAAMlI,GAAN,CAArB,CAAA;;AACA,MAAA,IAAI0H,MAAM,CAAC/I,MAAP,GAAgB,CAApB,EAAuB;QACtBqB,GAAG,CAACmI,QAAD,CAAH,CAAA;AACA,OAFD,MAEO;AACN,QAAA,OAAOA,QAAP,CAAA;AACA,OAAA;AACD,KAAA;GAZF,CAAA;;EAcA,IAAIC,YAAY,GAAG1C,OAAO,CAAC+B,OAAD,EAAUQ,aAAV,EAAyBL,OAAzB,CAA1B,CAAA;EAEA,IAAIS,YAAY,GAAG,CAACzG,KAAK,CAACC,OAAN,CAAc4F,OAAd,CAApB,CAAA;;EACA,IAAIa,YAAY,GAAIC,OAAD,IAAa;AAC/BR,IAAAA,WAAW,GAAG,KAAd,CAAA;;AACA,IAAA,IAAIM,YAAJ,EAAkB;MACjBZ,OAAO,CAACzH,GAAR,CAAYuI,OAAZ,CAAA,CAAA;AACA,KAFD,MAEO;AACNA,MAAAA,OAAO,CAACC,OAAR,CAAiB,CAAC9I,KAAD,EAAQ8G,CAAR,KAAc;AAC9BiB,QAAAA,OAAO,CAACjB,CAAD,CAAP,CAAWxG,GAAX,CAAeN,KAAf,CAAA,CAAA;OADD,CAAA,CAAA;AAGA,KAAA;;AACDqI,IAAAA,WAAW,GAAG,IAAd,CAAA;GATD,CAAA;;AAWA,EAAA,IAAIC,gBAAJ,EAAsB;IACrBL,OAAO,GAAGA,OAAO,CAACc,OAAlB,CAAA;AACA,GAAA;;EACD,IAAIC,cAAc,GAAGf,OAAO,CAAChJ,MAAR,KAAmBqJ,gBAAgB,GAAG,CAAH,GAAO,CAA1C,CAArB,CAAA;EACA,IAAI/B,OAAO,GAAG,IAAd,CAAA;;EACA,SAAS0C,SAAT,CAAmBC,UAAnB,EAA+B;AAC9B,IAAA,IAAI3C,OAAJ,EAAa;MACZA,OAAO,EAAA,CAAA;AACPA,MAAAA,OAAO,GAAG,IAAV,CAAA;AACA,KAAA;;AAED,IAAA,IAAI+B,gBAAJ,EAAsB;MACrB,IAAIG,QAAQ,GAAGR,OAAO,CAACiB,UAAD,EAAad,YAAb,EAA2BQ,YAA3B,CAAtB,CAAA;AACA,KAFD,MAEO;AACN,MAAA,IAAIH,QAAQ,GAAGR,OAAO,CAACiB,UAAD,EAAaN,YAAb,CAAtB,CAAA;AACA,KAAA;;AACD,IAAA,IAAII,cAAJ,EAAoB;AACnB,MAAA,IAAI,OAAOP,QAAP,IAAmB,UAAvB,EAAmC;AAClClC,QAAAA,OAAO,GAAGkC,QAAV,CAAA;AACA,OAAA;AACD,KAJD,MAIO;MACNG,YAAY,CAACH,QAAD,CAAZ,CAAA;AACA,KAAA;AACD,GAAA;;EAED,IAAIU,SAAS,GAAG,KAAhB,CAAA;;EACA,SAASrH,MAAT,CAAgB8D,EAAhB,EAAoB;AACnB,IAAA,IAAIwD,SAAJ,EAAeC,sBAAf,EAAuCC,QAAvC,EAAiD5B,QAAjD,CAAA;;AACA,IAAA,IAAIyB,SAAJ,EAAe;AACdzB,MAAAA,QAAQ,GAAG9B,EAAE,CAAEhF,GAAG,CAAC8H,YAAD,CAAL,CAAb,CAAA;MACAP,kBAAkB,CAACT,QAAD,CAAlB,CAAA;AACA,MAAA,OAAA;AACA,KAAA;;AACD,IAAA,IAAIvH,WAAW,GAAGuI,YAAY,CAAC7I,SAAb,CAAyBG,KAAD,IAAW;MACpD,IAAI,CAACmJ,SAAL,EAAgB;AACfG,QAAAA,QAAQ,GAAGtJ,KAAX,CAAA;AACA,OAFD,MAEO,IAAI,CAACoJ,SAAL,EAAgB;AACtBA,QAAAA,SAAS,GAAG,IAAZ,CAAA;AACA,OAFM,MAEA;AACNC,QAAAA,sBAAsB,GAAG,IAAzB,CAAA;AACA,OAAA;AACD,KARiB,CAAlB,CAAA;AASA3B,IAAAA,QAAQ,GAAG9B,EAAE,CAAC0D,QAAD,CAAb,CAAA;AACAH,IAAAA,SAAS,GAAG,IAAZ,CAAA;IACAhB,kBAAkB,CAACT,QAAD,CAAlB,CAAA;IACAvH,WAAW,EAAA,CAAA;AACXgJ,IAAAA,SAAS,GAAG,KAAZ,CAAA;;AACA,IAAA,IAAIE,sBAAJ,EAA4B;AAC3B3B,MAAAA,QAAQ,GAAG9G,GAAG,CAAC8H,YAAD,CAAd,CAAA;AACA,KAAA;;AACD,IAAA,IAAIU,SAAJ,EAAe;MACdH,SAAS,CAACvB,QAAD,CAAT,CAAA;AACA,KAAA;AACD,GAAA;;EACD,OAAO;IACN7H,SAAS,EAAE6I,YAAY,CAAC7I,SADlB;;IAENS,GAAG,CAACN,KAAD,EAAQ;MAAE8B,MAAM,CAAE,MAAM9B,KAAR,CAAN,CAAA;KAFP;;AAGN8B,IAAAA,MAAAA;GAHD,CAAA;AAKA,CAAA;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASyH,aAAT,CAAuBC,MAAvB,EAA+BC,QAA/B,EAAyC;AAC/C,EAAA,IAAI,CAACvH,KAAK,CAACC,OAAN,CAAcsH,QAAd,CAAL,EAA8B;IAC7B,OAAO3B,eAAe,CACrB0B,MADqB,EAEpBE,MAAD,IAAYA,MAAM,CAACD,QAAD,CAFG,EAGrB;AAAEV,MAAAA,OAAO,CAACG,UAAD,EAAaQ,MAAb,EAAqB;AAC7BA,QAAAA,MAAM,CAACD,QAAD,CAAN,GAAmBP,UAAnB,CAAA;AACA,QAAA,OAAOQ,MAAP,CAAA;AACA,OAAA;;AAHD,KAHqB,CAAtB,CAAA;AAQA,GATD,MASO;AACN,IAAA,IAAIC,KAAK,GAAGF,QAAQ,CAACG,MAAT,EAAZ,CAAA;AACA,IAAA,OAAO9B,eAAe,CACrB0B,MADqB,EAEpBxJ,KAAD,IAAW;AACV,MAAA,KAAK,IAAI8G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6C,KAAK,CAAC1K,MAA1B,EAAkC,EAAE6H,CAApC,EAAuC;AACtC9G,QAAAA,KAAK,GAAGA,KAAK,CAAE2J,KAAK,CAAC7C,CAAD,CAAP,CAAb,CAAA;AACA,OAAA;;AACD,MAAA,OAAO9G,KAAP,CAAA;AACA,KAPoB,EAQrB;AAAE+I,MAAAA,OAAO,CAACG,UAAD,EAAaQ,MAAb,EAAqB;QAC7B,IAAIG,MAAM,GAAGH,MAAb,CAAA;;AACA,QAAA,KAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6C,KAAK,CAAC1K,MAAN,GAAe,CAAnC,EAAsC,EAAE6H,CAAxC,EAA2C;AAC1C+C,UAAAA,MAAM,GAAGA,MAAM,CAAEF,KAAK,CAAC7C,CAAD,CAAP,CAAf,CAAA;AACA,SAAA;;QACD+C,MAAM,CAAEF,KAAK,CAACA,KAAK,CAAC1K,MAAN,GAAe,CAAhB,CAAP,CAAN,GAAoCiK,UAApC,CAAA;AACA,QAAA,OAAOQ,MAAP,CAAA;AACA,OAAA;;AAPD,KARqB,CAAtB,CAAA;AAiBA,GAAA;AACD;;;;"}